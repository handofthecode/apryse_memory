{"version":3,"sources":["webpack:///./src/ui/src/components/SignatureListPanel/SignatureListPanel.scss?2934","webpack:///./src/ui/src/components/SignatureListPanel/SignatureListPanel.scss","webpack:///./src/ui/src/components/SignatureListPanel/SavedSignatures.js","webpack:///./src/ui/src/components/SignatureListPanel/SignatureAddButton.js","webpack:///./src/ui/src/components/SignatureListPanel/SignatureListPanel.js","webpack:///./src/ui/src/components/SignatureListPanel/index.js"],"names":["api","content","__esModule","default","module","i","options","styleTag","window","isApryseWebViewerWebComponent","document","head","appendChild","webComponents","getElementsByTagName","length","findNestedWebComponents","tagName","root","elements","querySelectorAll","forEach","el","push","shadowRoot","clonedStyleTags","webComponent","onload","styleNode","innerHTML","cloneNode","exports","locals","SignatureRowContent","onClick","imgSrc","isActive","altText","className","classNames","alt","src","SavedSignatures","props","savedSignatures","onSetHandler","deleteHandler","currentlySelectedSignature","isDeleteDisabled","t","useTranslation","map","signature","index","annotation","savedSignatureIndex","key","data-element","Icon","glyph","SignatureAddButton","isDisabled","dispatch","useDispatch","buttonLabel","useSelector","state","selectors","getIsInitialsModeEnabled","Button","disabled","label","actions","setSignatureMode","SignatureModes","FULL_SIGNATURE","openElement","SignatureListPanel","getActiveToolName","getSavedSignatures","getDisplayedSignatures","getMaxSignaturesCount","getDisplayedSignaturesFilterFunction","isElementDisabled","getSavedInitials","getSelectedSignature","activeToolName","displayedSignatures","maxSignaturesCount","displayedSignaturesFilterFunction","isSignatureDeleteButtonDisabled","savedInitials","selectedSignature","signatureToolArray","core","getToolsFromAllDocumentViewers","setSignature","setSelectedSignature","setToolMode","signatureTool","hasLocation","addSignature","showPreview","setInitials","addInitials","showInitialsPreview","INITIALS","deleteSignatureAndInitials","initials","deleteSavedInitials","deleteSavedSignature","hidePreview","signaturesToDisplay","filter","DataElementWrapper","dataElement","Divider","renderSignatures","renderInitials"],"mappings":"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","file":"chunks/64.chunk.js","sourcesContent":["var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../../node_modules/sass-loader/dist/cjs.js!./SignatureListPanel.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                function findNestedWebComponents(tagName, root = document) {\n                  const elements = [];\n\n                  // Check direct children\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\n\n                  // Check shadow DOMs\n                  root.querySelectorAll('*').forEach(el => {\n                    if (el.shadowRoot) {\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\n                    }\n                  });\n\n                  return elements;\n                }\n                if (!window.isApryseWebViewerWebComponent) {\n                  document.head.appendChild(styleTag);\n                  return;\n                }\n\n                let webComponents;\n                // First we see if the webcomponent is at the document level\n                webComponents = document.getElementsByTagName('apryse-webviewer');\n                // If not, we check have to check if it is nested in another webcomponent\n                if (!webComponents.length) {\n                  webComponents = findNestedWebComponents('apryse-webviewer');\n                }\n                // Now we append the style tag to each webcomponent\n                const clonedStyleTags = [];\n                for (let i = 0; i < webComponents.length; i++) {\n                  const webComponent = webComponents[i];\n                  if (i === 0) {\n                    webComponent.shadowRoot.appendChild(styleTag);\n                    styleTag.onload = function () {\n                      if (clonedStyleTags.length > 0) {\n                        clonedStyleTags.forEach((styleNode) => {\n                          // eslint-disable-next-line no-unsanitized/property\n                          styleNode.innerHTML = styleTag.innerHTML;\n                        });\n                      }\n                    };\n                  } else {\n                    const styleNode = styleTag.cloneNode(true);\n                    webComponent.shadowRoot.appendChild(styleNode);\n                    clonedStyleTags.push(styleNode);\n                  }\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}.SignatureAddButton{width:100%;padding:8px;color:#2b73ab;border:1px solid #2b73ab;border-radius:4px;margin:16px 0}.SignatureAddButton:not(.disabled):hover{color:var(--primary-button-hover);border-color:var(--primary-button-hover)}.SignatureAddButton.disabled{color:#2b73ab;opacity:.5;cursor:not-allowed}.SignatureAddButton.disabled span{color:#2b73ab}.SignatureListPanel{height:100%;display:flex;flex-direction:column}.SignatureListPanel .signature-list-panel-header{font-size:16px;font-weight:700}.SignatureListPanel .signature-header{margin:16px 0;font-size:14px;font-weight:700}.SignatureListPanel .signature-list{overflow-y:scroll}.SignatureListPanel .signature-row{display:flex;flex-direction:row;height:48px;justify-content:space-between;align-items:center;margin-bottom:8px}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .SignatureListPanel .signature-row{justify-content:center}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .SignatureListPanel .signature-row{justify-content:center}}.SignatureListPanel .signature-row .icon-button{padding:0;border:none;background-color:transparent;display:flex;align-items:center;justify-content:center;width:34px;height:34px;border-radius:4px;cursor:pointer}:host(:not([data-tabbing=true])) .SignatureListPanel .signature-row .icon-button,html:not([data-tabbing=true]) .SignatureListPanel .signature-row .icon-button{outline:none}.SignatureListPanel .signature-row .icon-button:hover{background:var(--tools-overlay-button-hover)}.SignatureListPanel .signature-row-content{border:none;background-color:transparent;height:40px;padding:4px 8px;border:1px solid var(--border);border-radius:4px;display:flex;align-items:center;justify-content:center;cursor:pointer;margin-right:8px;background-color:var(--gray-0);flex-grow:2}:host(:not([data-tabbing=true])) .SignatureListPanel .signature-row-content,html:not([data-tabbing=true]) .SignatureListPanel .signature-row-content{outline:none}.SignatureListPanel .signature-row-content img{max-width:100%;max-height:100%}.SignatureListPanel .signature-row-content.interactable:hover{background:var(--tools-overlay-button-hover)}.SignatureListPanel .signature-row-content.active,.SignatureListPanel .signature-row-content.interactable.active{background:var(--tools-overlay-button-active)}.SignatureListPanel .signature-row-content .signature-button-icon{width:20px;height:20px;margin-top:2px}\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Icon from 'components/Icon';\nimport classNames from 'classnames';\n\nconst SignatureRowContent = ({ onClick, imgSrc, isActive, altText }) => {\n  return (\n    <button\n      className={classNames({\n        'signature-row-content': true,\n        'interactable': onClick,\n        'active': isActive,\n      })}\n      onClick={onClick}\n    >\n      <img alt={altText} src={imgSrc} />\n    </button>\n  );\n};\n\nconst SavedSignatures = (props) => {\n  const {\n    savedSignatures,\n    onSetHandler,\n    deleteHandler,\n    currentlySelectedSignature,\n    isDeleteDisabled,\n  } = props;\n\n  const { t } = useTranslation();\n\n  return (\n    <>\n      {\n        savedSignatures\n          // Need to keep the index information from the original signature list\n          .map((signature, index) => [signature, index])\n          .map(([{ imgSrc, annotation }, savedSignatureIndex]) => <div\n            key={savedSignatureIndex}\n            className=\"signature-row\"\n          >\n            <SignatureRowContent\n              onClick={() => onSetHandler(savedSignatureIndex)}\n              imgSrc={imgSrc}\n              isActive={currentlySelectedSignature === annotation}\n              altText={`${t('option.toolsOverlay.signatureAltText')} ${savedSignatureIndex + 1}`}\n            />\n            {!isDeleteDisabled && (\n              <button\n                className=\"icon-button\"\n                data-element=\"defaultSignatureDeleteButton\"\n                onClick={() => deleteHandler(savedSignatureIndex)}\n              >\n                <Icon glyph=\"icon-delete-line\" />\n              </button>\n            )}\n          </div>\n          )\n      }\n    </>\n  );\n};\n\nexport default SavedSignatures;","import React from 'react';\nimport Button from '../Button';\nimport classNames from 'classnames';\nimport SignatureModes from 'constants/signatureModes';\nimport { useDispatch, useSelector } from 'react-redux';\nimport actions from 'actions';\nimport selectors from 'selectors';\nimport { useTranslation } from 'react-i18next';\n\nconst SignatureAddButton = ({ isDisabled }) => {\n  const dispatch = useDispatch();\n  const [t] = useTranslation();\n\n  const openSignatureModal = () => {\n    if (!isDisabled) {\n      dispatch(actions.setSignatureMode(SignatureModes.FULL_SIGNATURE));\n      dispatch(actions.openElement('signatureModal'));\n    }\n  };\n\n  const isInitialsModeEnabled = useSelector((state) => selectors.getIsInitialsModeEnabled(state));\n  const buttonLabel = isInitialsModeEnabled ? 'signatureListPanel.newSignatureAndInitial' : 'signatureListPanel.newSignature';\n\n  return (\n    <Button\n      className={classNames(\n        'SignatureAddButton',\n        { disabled: isDisabled },\n      )}\n      label={t(buttonLabel)}\n      onClick={openSignatureModal} />\n  );\n};\n\nexport default SignatureAddButton;","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch, useSelector } from 'react-redux';\nimport DataElementWrapper from '../DataElementWrapper';\nimport selectors from 'selectors';\nimport actions from 'actions';\nimport './SignatureListPanel.scss';\nimport Divider from '../ModularComponents/Divider';\nimport SignatureModes from 'constants/signatureModes';\nimport SavedSignatures from './SavedSignatures';\nimport SignatureAddButton from './SignatureAddButton';\nimport core from 'core';\n\nconst SignatureListPanel = () => {\n  const [t] = useTranslation();\n\n  const [\n    activeToolName,\n    savedSignatures,\n    displayedSignatures,\n    maxSignaturesCount,\n    displayedSignaturesFilterFunction,\n    isSignatureDeleteButtonDisabled,\n    savedInitials,\n    selectedSignature,\n  ] = useSelector(\n    (state) => [\n      selectors.getActiveToolName(state),\n      selectors.getSavedSignatures(state),\n      selectors.getDisplayedSignatures(state),\n      selectors.getMaxSignaturesCount(state),\n      selectors.getDisplayedSignaturesFilterFunction(state),\n      selectors.isElementDisabled(state, 'defaultSignatureDeleteButton'),\n      selectors.getSavedInitials(state),\n      selectors.getSelectedSignature(state),\n    ]\n  );\n\n  const dispatch = useDispatch();\n\n  const signatureToolArray = core.getToolsFromAllDocumentViewers('AnnotationCreateSignature');\n\n\n  const setSignature = async (index) => {\n    const { annotation } = displayedSignatures[index];\n    dispatch(actions.setSelectedSignature(annotation));\n    core.setToolMode('AnnotationCreateSignature');\n    for (const signatureTool of signatureToolArray) {\n      await signatureTool.setSignature(annotation);\n      if (signatureTool.hasLocation()) {\n        await signatureTool.addSignature();\n      } else {\n        await signatureTool.showPreview();\n        dispatch(actions.setSignatureMode(SignatureModes.FULL_SIGNATURE));\n      }\n    }\n  };\n\n\n  const setInitials = async (index) => {\n    const { annotation } = savedInitials[index];\n    dispatch(actions.setSelectedSignature(annotation));\n    core.setToolMode('AnnotationCreateSignature');\n    for (const signatureTool of signatureToolArray) {\n      await signatureTool.setInitials(annotation);\n      if (signatureTool.hasLocation()) {\n        await signatureTool.addInitials();\n        // Default mode is fullSignature. If we dont reset it here there can be a bug where\n        // we preview the initials, but apply the full signature\n        dispatch(actions.setSignatureMode(SignatureModes.FULL_SIGNATURE));\n      } else {\n        await signatureTool.showInitialsPreview();\n        dispatch(actions.setSignatureMode(SignatureModes.INITIALS));\n      }\n    }\n  };\n\n  const deleteSignatureAndInitials = async (index) => {\n    const { annotation: signature } = savedSignatures[index];\n    // Initials are optional, so we need to check if they exist before deleting them\n    const { annotation: initials = null } = savedInitials[index] || {};\n    signatureToolArray[0].deleteSavedInitials(index);\n    signatureToolArray[0].deleteSavedSignature(index);\n    const isDeletingSelectedSignature = selectedSignature === signature || selectedSignature === initials;\n    if (isDeletingSelectedSignature) {\n      dispatch(actions.setSelectedSignature(null));\n      for (const signatureTool of signatureToolArray) {\n        signatureTool.hidePreview();\n      }\n    }\n  };\n\n  const signaturesToDisplay = savedSignatures.filter((signature, index) => displayedSignaturesFilterFunction(signature, index));\n\n  const renderSignatures = () => {\n    if (signaturesToDisplay.length > 0) {\n      return (\n        <>\n          <div className=\"signature-header\">{t('component.signaturePanel')}</div>\n          <SavedSignatures\n            savedSignatures={signaturesToDisplay}\n            onSetHandler={(index) => setSignature(index)}\n            deleteHandler={(index) => deleteSignatureAndInitials(index)}\n            currentlySelectedSignature={selectedSignature}\n            isDeleteDisabled={isSignatureDeleteButtonDisabled}\n            activeToolName={activeToolName} />\n        </>\n\n      );\n    }\n  };\n\n  const renderInitials = () => {\n    if (savedInitials.length > 0) {\n      return (\n        <>\n          <div className=\"signature-header\">{t('option.type.initials')}</div>\n          <SavedSignatures\n            savedSignatures={savedInitials}\n            onSetHandler={(index) => setInitials(index)}\n            deleteHandler={(index) => deleteSignatureAndInitials(index)}\n            currentlySelectedSignature={selectedSignature}\n            isDeleteDisabled={isSignatureDeleteButtonDisabled}\n            activeToolName={activeToolName} />\n        </>\n      );\n    }\n  };\n\n\n  return (\n    <DataElementWrapper dataElement=\"signatureListpanel\" className=\"Panel SignatureListPanel\">\n      <div className='signature-list-panel-header'>\n        {t('component.signaturePanel')}\n      </div>\n      <SignatureAddButton isDisabled={savedSignatures.length >= maxSignaturesCount || savedInitials.length > maxSignaturesCount} />\n      <Divider />\n      <div className='signature-list'>\n        {renderSignatures()}\n        {renderInitials()}\n      </div>\n    </DataElementWrapper>\n  );\n};\n\nexport default SignatureListPanel;","import SignatureListPanel from './SignatureListPanel';\n\nexport default SignatureListPanel;"],"sourceRoot":""}