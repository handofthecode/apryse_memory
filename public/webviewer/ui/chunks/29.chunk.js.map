{"version":3,"sources":["webpack:///./src/ui/src/components/StylePicker/ColorPicker/ColorPicker.js","webpack:///./src/ui/src/components/StylePicker/ColorPicker/index.js","webpack:///./src/ui/src/components/StylePicker/ColorPicker/ColorPicker.scss?cb36","webpack:///./src/ui/src/components/StylePicker/ColorPicker/ColorPicker.scss","webpack:///./src/ui/src/components/RichTextStyleEditor/RichTextStyleEditor.scss?bfb4","webpack:///./src/ui/src/components/RichTextStyleEditor/RichTextStyleEditor.scss","webpack:///./src/ui/src/components/RichTextStyleEditor/RichTextStyleEditor.js","webpack:///./src/ui/src/components/RichTextStyleEditor/index.js","webpack:///./src/ui/src/components/StylePicker/StylePicker.scss?9588","webpack:///./src/ui/src/components/StylePicker/StylePicker.scss","webpack:///./src/ui/src/components/StylePicker/SnapModeToggle/index.js","webpack:///./src/ui/src/components/StylePicker/SnapModeToggle/SnapModeToggle.js","webpack:///./src/ui/src/helpers/stylePanelHelper.js","webpack:///./src/ui/src/components/StylePicker/StylePicker.js","webpack:///./src/ui/src/components/StylePicker/index.js","webpack:///./src/ui/src/components/StylePanel/StylePanel.js","webpack:///./src/ui/src/components/StylePanel/StylePanel.scss?fc22","webpack:///./src/ui/src/components/StylePanel/StylePanel.scss","webpack:///./src/ui/src/components/StylePanel/StylePanelContainer.js","webpack:///./src/ui/src/components/StylePanel/index.js"],"names":["parseColor","color","parsedColor","toHexString","toLowerCase","transparentIcon","width","height","className","classNames","stroke","x1","y1","x2","y2","strokeWidth","strokeLinecap","propTypes","PropTypes","any","ColorPicker","onColorChange","hasTransparentColor","store","useStore","t","useTranslation","dispatch","useDispatch","colors","useSelector","state","selectors","getColors","useState","selectedColor","setSelectedColor","isExpanded","setIsExpanded","useEffect","getCustomColorAndRemove","customColor","getCustomColor","getState","actions","setCustomColor","handleAddColor","useCallback","openElement","getInstanceNode","addEventListener","Events","VISIBILITY_CHANGED","onVisibilityChanged","e","detail","element","isVisible","includes","newColors","setColors","removeEventListener","length","palette","push","shouldHideShowMoreButton","isAddDisabled","isDeleteDisabled","slice","map","i","key","onClick","aria-label","active","cell","border","style","backgroundColor","data-element","disabled","Icon","glyph","indexToDelete","indexOf","nextIndex","splice","hidden","api","content","__esModule","default","module","options","styleTag","window","isApryseWebViewerWebComponent","document","head","appendChild","webComponents","getElementsByTagName","findNestedWebComponents","tagName","root","elements","querySelectorAll","forEach","el","shadowRoot","clonedStyleTags","webComponent","onload","styleNode","innerHTML","cloneNode","exports","locals","annotation","object","editor","shape","TextColor","string","RichTextStyle","isFreeTextAutoSize","bool","onFreeTextSizeToggle","func","onPropertyChange","onRichTextStyleChange","RichTextStyleEditor","fonts","getFonts","shallowEqual","isRichTextEditMode","setIsRichTextEditMode","format","setFormat","editorRef","useRef","annotationRef","propertiesRef","oldSelectionRef","handleSelectionChange","range","oldRange","current","setSelection","index","getFormat","handleTextChange","getSelection","core","disableElements","DataElements","ANNOTATION_STYLE_POPUP","enableElements","StrokeStyle","err","console","error","stylesTemp","getRichTextStyle","Font","FontSize","TextAlign","TextVerticalAlign","bold","italic","underline","strikeout","calculatedFontSize","getCalculatedFontSize","handleEditorBlur","handleEditorFocus","properties","Core","Annotations","Color","Array","isArray","lastSelectedColor","applyFormat","formatKey","value","defulats","strike","onMouseDown","type","preventDefault","TextStylePicker","property","blur","FreeTextAnnotation","getAutoSizeType","AutoSizeTypes","NONE","doc","getDocument","pageNumber","pageInfo","getPageInfo","pageMatrix","getPageMatrix","pageRotation","getPageRotation","fitText","adjustFreeTextBoundingBox","setTimeout","getAnnotationManager","getEditBoxManager","focusBox","newSelection","currentFormat","handleTextFormatChange","stateless","isFreeText","name","handleColorChange","React","memo","SnapModeToggle","Scale","Precision","isSnapModeEnabled","wasDocumentSwappedToClientSide","getType","workerTypes","WEBVIEWER_SERVER","isWebViewerServerDocument","isEligibleDocumentForSnapping","PDF","showMeasurementSnappingOption","isFullPDFEnabled","Choice","dataElement","id","label","i18next","checked","onChange","event","enableSnapping","target","mode","getDocumentViewer","SnapMode","e_DefaultSnapMode","POINT_ON_LINE","getMeasurementTools","tool","setSnapMode","setEnableSnapMode","Tools","shouldHideStylePanelOptions","toolName","SignatureFormFieldCreateTool","CheckBoxFormFieldCreateTool","RadioButtonFormFieldCreateTool","some","getTool","shouldHideOpacitySlider","TextFormFieldCreateTool","withCloudyStyle","defaultStrokeStyles","concat","cloudyStrokeStyle","onStyleChange","isRequired","sliderProperties","arrayOf","isEllipse","isRedaction","isFreeHand","showLineStyleOptions","isArc","isInFormFieldCreationMode","startLineStyle","endLineStyle","strokeStyle","onLineStyleChange","handleRichTextStyleChange","StylePicker","StrokeColor","strokeColor","setStrokeColor","startingLineStyle","setStartingLineStyle","endingLineStyle","setEndingLineStyle","strokeLineStyle","setStrokeLineStyle","FillColor","fillColor","setFillColor","showFillColorAndCollapsablePanelSections","RectangleCreateTool","EllipseCreateTool","PolygonCreateTool","PolygonCloudCreateTool","EllipseMeasurementCreateTool","AreaMeasurementCreateTool","FreeTextCreateTool","CalloutCreateTool","hasFillColorAndCollapsablePanelSections","hideStrokeSlider","TextUnderlineCreateTool","TextHighlightCreateTool","TextSquigglyCreateTool","TextStrikeoutCreateTool","CountMeasurementCreateTool","RubberStampCreateTool","shouldHideStrokeSlider","showSnapModeCheckbox","DistanceMeasurementCreateTool","ArcMeasurementCreateTool","PerimeterMeasurementCreateTool","RectangularAreaMeasurementCreateTool","CloudyRectangularAreaMeasurementCreateTool","hasSnapModeCheckbox","showTextStyle","shouldTextStyle","RICH_TEXT_STYLE_CONTAINER","STROKE_STYLE_CONTAINER","onSliderChange","Opacity","StrokeThickness","isElementDisabled","STYLE_OPTION","isElementOpen","FILL_COLOR_CONTAINER","OPACITY_CONTAINER","isStyleOptionDisabled","isStrokeStyleContainerActive","isFillColorContainerActive","isOpacityContainerActive","isTextStyleContainerActive","panelItems","togglePanelItem","closeElement","openTextStyleContainer","openElements","RICH_TEXT_EDITOR","openStrokeStyleContainer","openFillColorContainer","openOpacityContainer","renderSlider","shouldHideSliderTitle","sliderProps","lineStart","circleRadius","displayProperty","getDisplayValue","Math","round","OPACITY_SLIDER","getCirclePosition","lineLength","convertRelativeCirclePositionToValue","circlePosition","withInputField","inputFieldType","min","max","step","getLocalValue","opacity","parseInt","strokeThickness","placeOfDecimal","floor","toString","split","parseFloat","toFixed","STROKE_THICKNESS_SLIDER","getSliderProps","Slider","renderDivider","onOpenProps","useOnFreeTextEdit","onTouchStart","tabIndex","onKeyDown","role","colorMapKey","Dropdown","images","defaultStartLineStyles","onClickItem","currentSelectionKey","defaultEndLineStyles","StylePanel","getToolButtonObjects","isAnnotationToolStyleSyncingEnabled","getActiveDocumentViewerKey","isPanelOpen","toolButtonObject","activeDocumentViewerKey","colorProperties","showPanel","setShowPanel","noToolStyle","setNoToolStyle","selectedAnnotation","setSelectedAnnotation","setIsEllipse","setIsFreeText","setIsRedaction","setIsFreeHand","setIsArc","setIsInFormFieldCreationMode","setStyle","setStartLineStyle","setEndLineStyle","setStrokeStyle","panelTitle","setPanelTitle","annotationCreateToolNames","getAnnotationCreateToolNames","setShowLineStyleOptions","isAutoSizeFont","setIsAutoSizeFont","title","getToolMode","onAnnotationSelected","annotations","action","ToolName","EllipseAnnotation","RedactionAnnotation","FreeHandAnnotation","ArcAnnotation","getFormFieldCreationManager","getDataWithKey","mapToolNameToKey","hasLineEndings","currentTool","AnnotationEditTool","setToolMode","handleToolModeChange","newTool","ToolNames","ELLIPSE","FREE_TEXT","REDACTION","FREEHAND","FREEHAND_HIGHLIGHT","ARC","toolStyles","getToolStyles","StartLineStyle","EndLineStyle","annot","extraStyles","getStartStyle","getEndStyle","dashes","getStrokeStyle","noToolSelected","newStyle","annotationsToUpdate","getSelectedAnnotations","colorRGB","hexToRGBA","r","g","b","a","setToolStyles","redrawAnnotation","getEditor","hasFocus","background","section","sectionPropertyMap","start","middle","end","setStartStyle","lineStyle","shift","Style","Dashes","setEndStyle","handleFreeTextAutoSizeToggle","originalProperty","originalValue","activeToolRichTextStyle","getTextDecoration","richTextStyle","0","updateAnnotationRichTextStyle","complete","StylePanelContainer","DataElementWrapper"],"mappings":"8rDAYA,IAAMA,EAAa,SAACC,GAAU,QAC5B,IAAKA,EACH,OAAOA,EAET,IAAIC,EAAcD,EAQlB,OAPe,QAAf,EAAIC,SAAW,OAAX,EAAaC,cACfD,EAAcA,EAAYC,eAEb,QAAf,EAAID,SAAW,OAAX,EAAaE,cACfF,EAAcA,EAAYE,eAGrBF,GAKHG,EACJ,yBACEC,MAAM,OACNC,OAAO,OACPC,UAAWC,IAAW,gBAEtB,0BAAMC,OAAO,UAAUC,GAAG,IAAIC,GAAG,OAAOC,GAAG,OAAOC,GAAG,IAAIC,YAAY,IAAIC,cAAc,WAKrFC,EAAY,CAChBhB,MAAOiB,IAAUC,KAGbC,EAAc,SAAH,GAIX,IAHJC,EAAa,EAAbA,cAAa,IACbC,2BAAmB,IAAG,GAAK,EAC3BrB,EAAK,EAALA,MAEMsB,EAAQC,cACNC,EAAMC,cAAND,EACFE,EAAWC,cACVC,EAEL,EAFeC,aAAY,SAACC,GAAK,MAAK,CACtCC,IAAUC,UAAUF,OACpB,GAFW,GAGuC,IAAVG,qBAAU,GAA7CC,EAAa,KAAEC,EAAgB,KACa,IAAfF,oBAAS,GAAM,GAA5CG,EAAU,KAAEC,EAAa,KAEhCC,qBAAU,WACJtC,GACFmC,EAAiBpC,EAAWC,MAE7B,CAACA,IAEJ,IAAMuC,EAA0B,WAC9B,IAAMC,EAAcT,IAAUU,eAAenB,EAAMoB,YAEnD,OADAhB,EAASiB,IAAQC,eAAe,OACzBJ,GAGHK,EAAiBC,uBAAY,WACjCpB,EAASiB,IAAQI,YAAY,qBAmB7BC,cAAkBC,iBAAiBC,IAAOC,oBAlBd,SAAtBC,EAAuBC,GAC3B,MAA+BA,EAAEC,OAAzBC,EAAO,EAAPA,QAASC,EAAS,EAATA,UACjB,GAAgB,qBAAZD,IAAmCC,EAAW,CAChD,IAAMxD,EAAQD,EAAWwC,KACzB,GAAIvC,EACF,GAAI4B,EAAO6B,SAASzD,GAClBmC,EAAiBnC,GACjBoB,EAAcpB,OACT,CACL,IAAM0D,EAAY,GAAH,SAAO9B,GAAM,CAAE5B,IAC9B0B,EAASiB,IAAQgB,UAAUD,IAC3BvB,EAAiBnC,GACjBoB,EAAcpB,IAIpBgD,cAAkBY,oBAAoBV,IAAOC,mBAAoBC,QAGlE,CAACxB,aAAM,EAANA,EAAQiC,OAAQnC,EAAUS,EAAkBf,EAAemB,IAmB3DuB,EAAU,EACTlC,GAEDP,GACFyC,EAAQC,KAvFc,eAyFpB7B,IAAkB4B,EAAQL,SAASvB,IACrC4B,EAAQC,KAAK7B,GAGVA,GACHC,EAAiB2B,EAAQ,IAG3B,IAAME,EAA2BF,EAAQD,QAAU,EAC7CI,EAAgBH,EAAQD,QAAU,GAClCK,EAAmBJ,EAAQD,QAAU,EAM3C,OAJKzB,IACH0B,EAAUA,EAAQK,MAAM,EAAG,IAI3B,oCACE,yBAAK5D,UAAWC,IAAW,iBACxBsD,EAAQM,KAAI,SAACpE,GAAK,OAAKD,EAAWC,MAAQoE,KAAI,SAACpE,EAAOqE,GAAC,OACrDrE,EAEG,4BACAsE,IAAKD,EACL9D,UAAU,iBACVgE,QAAS,WACPpC,EAAiBnC,GACjBoB,EAAcpB,IAEhBwE,aAAA,UAAehD,EAAE,kCAAiC,YAAI6C,EAAI,IAE1D,yBACE9D,UAAWC,IAAW,CACpB,cAAc,EACdiE,OAAQ1E,EAAWmC,KAAmBlC,IAAWD,EAAWmC,IA3HpD,gBA2HsElC,KAGhF,yBACEO,UAAWC,IAAW,CACpBkE,MAAM,EACNC,OAAkB,YAAV3E,GAjIF,gBAiIyBA,IAEjC4E,MAAO,CAAEC,gBAAiB7E,IAnIlB,gBAqIPA,GAA+BI,KAvBpC,yBAAKkE,IAAKD,EAAG9D,UAAU,mBA6B/B,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,oBACb,4BACEA,UAAU,iBACVuE,eAAa,iBACbP,QAAS1B,EACTkC,SAAUd,GAEV,kBAACe,EAAA,EAAI,CAACC,MAAM,8BAEd,4BACE1E,UAAU,iBACVuE,eAAa,oBACbC,SAAUb,EACVK,QAvFW,WACnB,IAAMvE,EAAQD,EAAWmC,GACnBwB,EAAY,EAAI9B,GAChBsD,EAAgBxB,EAAUyB,QAAQnF,GACxC,GAAIkF,GAAiB,EAAG,CACtB,IAAME,EAAYF,IAAkBxB,EAAUG,OAAS,EAAI,EAAIqB,EAAgB,EAC/E/C,EAAiBP,EAAOwD,IACxBhE,EAAcQ,EAAOwD,IACrB1B,EAAU2B,OAAOH,EAAe,GAChCxD,EAASiB,IAAQgB,UAAUD,OAgFrB,kBAACsB,EAAA,EAAI,CAACC,MAAM,uBAGhB,4BAAQ1E,UAAWC,IAAW,kCAAmC,CAC/D8E,OAAQtB,IACNO,QAjFa,WACrBlC,GAAeD,KAiFRZ,EAAEY,EAAa,mBAAqB,wBAO/CjB,EAAYH,UAAYA,EAETG,QCnMAA,O,qBCFf,IAAIoE,EAAM,EAAQ,IACFC,EAAU,EAAQ,MAIC,iBAFvBA,EAAUA,EAAQC,WAAaD,EAAQE,QAAUF,KAG/CA,EAAU,CAAC,CAACG,EAAOtB,EAAImB,EAAS,MAG9C,IAAII,EAAU,CAEd,OAAiB,SAAUC,GAgBX,IAAKC,OAAOC,8BAEV,YADAC,SAASC,KAAKC,YAAYL,GAI5B,IAAIM,EAEJA,EAAgBH,SAASI,qBAAqB,oBAEzCD,EAActC,SACjBsC,EAzBF,SAASE,EAAwBC,EAASC,EAAOP,UAC/C,MAAMQ,EAAW,GAYjB,OATAD,EAAKE,iBAAiBH,GAASI,QAAQC,GAAMH,EAASzC,KAAK4C,IAG3DJ,EAAKE,iBAAiB,KAAKC,QAAQC,IAC7BA,EAAGC,YACLJ,EAASzC,QAAQsC,EAAwBC,EAASK,EAAGC,eAIlDJ,EAYSH,CAAwB,qBAG1C,MAAMQ,EAAkB,GACxB,IAAK,IAAIxC,EAAI,EAAGA,EAAI8B,EAActC,OAAQQ,IAAK,CAC7C,MAAMyC,EAAeX,EAAc9B,GACnC,GAAU,IAANA,EACFyC,EAAaF,WAAWV,YAAYL,GACpCA,EAASkB,OAAS,WACZF,EAAgBhD,OAAS,GAC3BgD,EAAgBH,QAASM,IAEvBA,EAAUC,UAAYpB,EAASoB,iBAIhC,CACL,MAAMD,EAAYnB,EAASqB,WAAU,GACrCJ,EAAaF,WAAWV,YAAYc,GACpCH,EAAgB9C,KAAKiD,MAIzC,WAAoB,GAEPzB,EAAIC,EAASI,GAI1BD,EAAOwB,QAAU3B,EAAQ4B,QAAU,I,sBClEnCD,EAAUxB,EAAOwB,QAAU,EAAQ,GAAR,EAAqE,IAKxFpD,KAAK,CAAC4B,EAAOtB,EAAI,gxJAAixJ,KAG1yJ8C,EAAQC,OAAS,CAChB,kBAAqB,OACrB,mBAAsB,S,qBCVvB,IAAI7B,EAAM,EAAQ,IACFC,EAAU,EAAQ,MAIC,iBAFvBA,EAAUA,EAAQC,WAAaD,EAAQE,QAAUF,KAG/CA,EAAU,CAAC,CAACG,EAAOtB,EAAImB,EAAS,MAG9C,IAAII,EAAU,CAEd,OAAiB,SAAUC,GAgBX,IAAKC,OAAOC,8BAEV,YADAC,SAASC,KAAKC,YAAYL,GAI5B,IAAIM,EAEJA,EAAgBH,SAASI,qBAAqB,oBAEzCD,EAActC,SACjBsC,EAzBF,SAASE,EAAwBC,EAASC,EAAOP,UAC/C,MAAMQ,EAAW,GAYjB,OATAD,EAAKE,iBAAiBH,GAASI,QAAQC,GAAMH,EAASzC,KAAK4C,IAG3DJ,EAAKE,iBAAiB,KAAKC,QAAQC,IAC7BA,EAAGC,YACLJ,EAASzC,QAAQsC,EAAwBC,EAASK,EAAGC,eAIlDJ,EAYSH,CAAwB,qBAG1C,MAAMQ,EAAkB,GACxB,IAAK,IAAIxC,EAAI,EAAGA,EAAI8B,EAActC,OAAQQ,IAAK,CAC7C,MAAMyC,EAAeX,EAAc9B,GACnC,GAAU,IAANA,EACFyC,EAAaF,WAAWV,YAAYL,GACpCA,EAASkB,OAAS,WACZF,EAAgBhD,OAAS,GAC3BgD,EAAgBH,QAASM,IAEvBA,EAAUC,UAAYpB,EAASoB,iBAIhC,CACL,MAAMD,EAAYnB,EAASqB,WAAU,GACrCJ,EAAaF,WAAWV,YAAYc,GACpCH,EAAgB9C,KAAKiD,MAIzC,WAAoB,GAEPzB,EAAIC,EAASI,GAI1BD,EAAOwB,QAAU3B,EAAQ4B,QAAU,I,sBClEnCD,EAAUxB,EAAOwB,QAAU,EAAQ,GAAR,EAAkE,IAKrFpD,KAAK,CAAC4B,EAAOtB,EAAI,goDAAioD,KAG1pD8C,EAAQC,OAAS,CAChB,kBAAqB,OACrB,mBAAsB,S,mkFCCvB,IAAMpG,EAAY,CAChBqG,WAAYpG,IAAUqG,OACtBC,OAAQtG,IAAUqG,OAClB1C,MAAO3D,IAAUuG,MAAM,CACrBC,UAAWxG,IAAUyG,OACrBC,cAAe1G,IAAUC,MAE3B0G,mBAAoB3G,IAAU4G,KAC9BC,qBAAsB7G,IAAU8G,KAChCC,iBAAkB/G,IAAU8G,KAC5BE,sBAAuBhH,IAAU8G,MAG7BG,EAAsB,SAAH,GAOnB,0BANJb,EAAU,EAAVA,WAAYE,EAAM,EAANA,OACZ3C,EAAK,EAALA,MACAgD,EAAkB,EAAlBA,mBACAE,EAAoB,EAApBA,qBACAE,EAAgB,EAAhBA,iBACAC,EAAqB,EAArBA,sBAGEE,EAMD,EALGtG,aACF,SAACC,GAAK,MAAK,CACTC,IAAUqG,SAAStG,MAErBuG,KACD,GANM,GAQ4D,IAAfpG,oBAAS,GAAM,GAA5DqG,EAAkB,KAAEC,EAAqB,KACR,IAAZtG,mBAAS,IAAG,GAAjCuG,EAAM,KAAEC,EAAS,KAClBC,EAAYC,iBAAO,MACnBC,EAAgBD,iBAAO,MACvBE,EAAgBF,iBAAO,IACvBjH,EAAWC,cACXmH,EAAkBH,mBAExBrG,qBAAU,WACR,IAAMyG,EAAwB,SAACC,EAAOC,IACAD,GAASC,GAAYP,EAAUQ,SAEjER,EAAUQ,QAAQC,aAAaF,EAASG,MAAOH,EAASpF,QAEtDmF,GAASN,EAAUQ,SACrBT,EAAUY,EAAUL,KAGlBM,EAAmB,WAAM,MAC7Bb,EAAUY,EAA2B,QAAlB,EAACX,EAAUQ,eAAO,aAAjB,EAAmBK,kBAMzC,OAJAC,IAAKvG,iBAAiB,yBAA0B8F,GAChDS,IAAKvG,iBAAiB,oBAAqBqG,GAE3C5H,EAASiB,IAAQ8G,gBAAgB,CAACC,IAAaC,0BACxC,WACLH,IAAK5F,oBAAoB,yBAA0BmF,GACnDS,IAAK5F,oBAAoB,oBAAqB0F,GAC9C5H,EAASiB,IAAQiH,eAAe,CAACF,IAAaC,6BAE/C,IAEHrH,qBAAU,WAAM,MAGd,GAFAoG,EAAUQ,QAAU3B,EACpBqB,EAAcM,QAAU7B,EACpBiB,GAAsBjB,EAAY,iBAChCwC,EAAc,QAClB,IACEA,EAAuC,SAAxBxC,EAAkB,MAAY,UACtCA,EAAkB,MAAC,YAAIA,EAAmB,QAC7CA,EAAkB,MACtB,MAAOyC,GACPC,QAAQC,MAAMF,GAEhB,IACMG,EADiB5C,EAAW6C,mBACA,GAElCrB,EAAcK,QAAU,CACtBiB,KAAM9C,EAAW8C,KACjBC,SAAU/C,EAAW+C,SACrBC,UAAWhD,EAAWgD,UACtBC,kBAAmBjD,EAAWiD,kBAC9BC,KAA4C,QAAxC,EAAkC,UAAhCN,aAAU,EAAVA,EAAa,uBAAyB,SAC5CO,OAA+C,QAAzC,EAAiC,YAA/BP,aAAU,EAAVA,EAAa,sBAA0B,SAC/CQ,WAAWR,SAA+B,QAArB,EAAVA,EAAa,0BAAkB,WAArB,EAAV,EAAiCxG,SAAS,gBAChDwG,SAA+B,QAArB,EAAVA,EAAa,0BAAkB,WAArB,EAAV,EAAiCxG,SAAS,SAC/CiH,UAAoE,QAA3D,EAAET,SAA+B,QAArB,EAAVA,EAAa,0BAAkB,WAArB,EAAV,EAAiCxG,SAAS,uBAAe,SACpEoG,cACAc,mBAAoBtD,EAAWuD,yBAInCnC,EAAUY,EAA2B,QAAlB,EAACX,EAAUQ,eAAO,aAAjB,EAAmBK,iBAEnCT,EAAgBI,UAClBR,EAAUQ,QAAQC,aAAaL,EAAgBI,SAC/CJ,EAAgBI,QAAU,QAE3B,CAAC7B,EAAYE,EAAQe,IAExBhG,qBAAU,WACR,IAAMuI,EAAmB,WACvBnC,EAAUQ,QAAU,KACpBN,EAAcM,QAAU,KACxBX,GAAsB,IAElBuC,EAAoB,WACxBvC,GAAsB,IAKxB,OAFAiB,IAAKvG,iBAAiB,aAAc4H,GACpCrB,IAAKvG,iBAAiB,cAAe6H,GAC9B,WACLtB,IAAK5F,oBAAoB,aAAciH,GACvCrB,IAAK5F,oBAAoB,cAAekH,MAEzC,CAACpJ,IAGJ,IA0GIqJ,EA1GE1B,EAAY,SAACL,GACjB,IAAKA,EACH,MAAO,GAGT,IAAMR,EAASE,EAAUQ,QAAQG,UAAUL,EAAMI,MAAOJ,EAAMnF,QAE9D,GAA4B,iBAAjB2E,EAAOxI,MAChBwI,EAAOxI,MAAQ,IAAI8F,OAAOkF,KAAKC,YAAYC,MAAM1C,EAAOxI,YACnD,GAAImL,MAAMC,QAAQ5C,EAAOxI,OAAQ,CAEtC,IAAMqL,EAAoB,IAAIvF,OAAOkF,KAAKC,YAAYC,MAAM1C,EAAOxI,MAAMwI,EAAOxI,MAAM6D,OAAS,IAC/F2E,EAAOxI,MAAQqL,OACL7C,EAAOxI,QACjBwI,EAAOxI,MAAQ4I,EAAcM,QAAQzB,WAGvC,OAAOe,GAwBH8C,EAAc,SAACC,EAAWC,GAAU,MACvB,QAAjB,EAAA9C,EAAUQ,eAAO,OAAjB,EAAmBV,OAAO+C,EAAWC,GAEnB,UAAdD,IACFC,EAAQ,IAAI1F,OAAOkF,KAAKC,YAAYC,MAAMM,IAI5C/C,EAAU,EAAD,KACJD,GAAM,QACR+C,EAAYC,MAyDT7D,EAAkB/C,EAAlB+C,cACF8D,EAAW,CACflB,KAAoD,QAAhD,EAA0C,UAAxC5C,SAAkB,QAAL,EAAbA,EAAgB,UAAE,WAAL,EAAb,EAAqB,uBAAyB,SACpD6C,OAAuD,QAAjD,EAAyC,YAAvC7C,SAAkB,QAAL,EAAbA,EAAgB,UAAE,WAAL,EAAb,EAAqB,sBAA0B,SACvD8C,WAAW9C,SAAkB,QAAL,EAAbA,EAAgB,UAAE,OAAqB,QAArB,EAAlB,EAAqB,0BAAkB,WAA1B,EAAb,EAAyClE,SAAS,gBAAgBkE,SAAkB,QAAL,EAAbA,EAAgB,UAAE,OAAqB,QAArB,EAAlB,EAAqB,0BAAkB,WAA1B,EAAb,EAAyClE,SAAS,SAC/HiH,UAA4E,QAAnE,EAAE/C,SAAkB,QAAL,EAAbA,EAAgB,UAAE,OAAqB,QAArB,EAAlB,EAAqB,0BAAkB,WAA1B,EAAb,EAAyClE,SAAS,uBAAe,SAC5EoG,YAAa,SAef,OAZAkB,EAAa,EAAH,KACLnG,GACA6G,GAGDnD,GAAsBjB,IACxBwB,EAAcK,QAAQqB,KAAO/B,EAAO+B,KACpC1B,EAAcK,QAAQsB,OAAShC,EAAOgC,OACtC3B,EAAcK,QAAQuB,UAAYjC,EAAOiC,UACzC5B,EAAcK,QAAQwB,UAAYlC,EAAOkD,QAIzC,yBAAKnL,UAAU,sBACboL,YAAa,SAACtI,GACG,eAAXA,EAAEuI,MACJvI,EAAEwI,mBAIN,yBAAKtL,UAAU,cACb,kBAACuL,EAAA,EAAe,CACd3D,MAAOA,EACPH,iBAxEqB,SAAC+D,EAAUP,GACtC,GAAKlD,EAAL,CAKA,MAA0BI,EAAUQ,QAAQK,eAApCH,EAAK,EAALA,MAAOvF,EAAM,EAANA,OACTwD,EAAauB,EAAcM,QACjC7B,EAAW0E,GAAYP,EACvB9C,EAAUQ,QAAQ8C,OACD,aAAbD,GAAwC,SAAbA,GAvBC,SAAC1E,GACjC,IAAQ4E,EAAuBnG,OAAOkF,KAAKC,YAAnCgB,mBACR,GAAI5E,aAAsB4E,GAAsB5E,EAAW6E,oBAAsBD,EAAmBE,cAAcC,KAAM,CACtH,IAAMC,EAAM7C,IAAK8C,cACXC,EAAalF,EAAuB,WACpCmF,EAAWH,EAAII,YAAYF,GAC3BG,EAAaL,EAAIM,cAAcJ,GAC/BK,EAAeP,EAAIQ,gBAAgBN,GACzClF,EAAWyF,QAAQN,EAAUE,EAAYE,IAgBzCG,CAA0B1F,GAE5B2F,YAAW,WACTlE,EAAgBI,QAAU,CAAEE,QAAOvF,UACZ2F,IAAKyD,uBAAuBC,oBACpCC,SAAS9F,KACvB,QAfDW,EAAiB+D,EAAUP,IAuEvBvD,sBAnD0B,SAAC8D,EAAUP,GAC3C,GAAKlD,EAAL,EAvE6B,SAACE,GAAM,OAAK,WACzC,MAAwBE,EAAUQ,QAAQK,eAApCH,EAAK,EAALA,MAAOvF,EAAM,EAANA,OACb,GAAe,IAAXA,EAAc,CAChBiF,EAAgBI,QAAU,CAAEE,QAAOvF,UACnC,IAAMuJ,EAAe1E,EAAUQ,QAAQK,eACvCH,EAAQgE,EAAahE,MACrBvF,EAASuJ,EAAavJ,OAExB,IAAMwJ,EAAgB3E,EAAUQ,QAAQG,UAAUD,EAAOvF,GAEzDyH,EAAY9C,GAAS6E,EAAc7E,KAwEnC8E,CAN4B,CAC1B,cAAe,OACf,aAAc,SACd,UAAa,YACb,eAAgB,UAEyBvB,GAA3CuB,QAVErF,EAAsB8D,EAAUP,IAkD5BT,WAAYzC,EAAqBO,EAAcK,QAAU6B,EACzDwC,WAAW,EACXC,YAAY,EACZ1F,qBAAsBA,EACtBF,mBAAoBA,KAGxB,kBAACzG,EAAA,EAAW,CACVC,cAAe,SAACpB,IArHI,SAACyN,EAAMzN,GAC1BsI,EAILgD,EAAY,QAAStL,EAAME,eAHzB8H,EAAiByF,EAAMzN,GAoHnB0N,CAAkB,YAAa,IAAI5H,OAAOkF,KAAKC,YAAYC,MAAMlL,KAEnEA,MAAOsI,EAAqBE,EAAOxI,MAAQ4E,EAAiB,cAKpEsD,EAAoBlH,UAAYA,EAEjB2M,UAAMC,KAAK1F,GChSXA,a,qBCFf,IAAI3C,EAAM,EAAQ,IACFC,EAAU,EAAQ,MAIC,iBAFvBA,EAAUA,EAAQC,WAAaD,EAAQE,QAAUF,KAG/CA,EAAU,CAAC,CAACG,EAAOtB,EAAImB,EAAS,MAG9C,IAAII,EAAU,CAEd,OAAiB,SAAUC,GAgBX,IAAKC,OAAOC,8BAEV,YADAC,SAASC,KAAKC,YAAYL,GAI5B,IAAIM,EAEJA,EAAgBH,SAASI,qBAAqB,oBAEzCD,EAActC,SACjBsC,EAzBF,SAASE,EAAwBC,EAASC,EAAOP,UAC/C,MAAMQ,EAAW,GAYjB,OATAD,EAAKE,iBAAiBH,GAASI,QAAQC,GAAMH,EAASzC,KAAK4C,IAG3DJ,EAAKE,iBAAiB,KAAKC,QAAQC,IAC7BA,EAAGC,YACLJ,EAASzC,QAAQsC,EAAwBC,EAASK,EAAGC,eAIlDJ,EAYSH,CAAwB,qBAG1C,MAAMQ,EAAkB,GACxB,IAAK,IAAIxC,EAAI,EAAGA,EAAI8B,EAActC,OAAQQ,IAAK,CAC7C,MAAMyC,EAAeX,EAAc9B,GACnC,GAAU,IAANA,EACFyC,EAAaF,WAAWV,YAAYL,GACpCA,EAASkB,OAAS,WACZF,EAAgBhD,OAAS,GAC3BgD,EAAgBH,QAASM,IAEvBA,EAAUC,UAAYpB,EAASoB,iBAIhC,CACL,MAAMD,EAAYnB,EAASqB,WAAU,GACrCJ,EAAaF,WAAWV,YAAYc,GACpCH,EAAgB9C,KAAKiD,MAIzC,WAAoB,GAEPzB,EAAIC,EAASI,GAI1BD,EAAOwB,QAAU3B,EAAQ4B,QAAU,I,sBClEzBzB,EAAOwB,QAAU,EAAQ,GAAR,EAAkE,IAKrFpD,KAAK,CAAC4B,EAAOtB,EAAI,i1FAAk1F,M,8ZCH51FwJ,ECOQ,SAAH,GAId,QAHJC,EAAK,EAALA,MACAC,EAAS,EAATA,UACAC,EAAiB,EAAjBA,kBAEMtM,EAAWC,cAEXsM,GACc,QAAlB,EAAAzE,IAAK8C,qBAAa,aAAlB,EAAoB4B,aAAcC,IAAYC,kBAAoB5E,IAAK8C,cAAc+B,4BACjFC,GAAkD,QAAlB,EAAA9E,IAAK8C,qBAAa,aAAlB,EAAoB4B,UAAU/N,iBAAkBgO,IAAYI,KAAON,EACnGO,EAAgCV,GAASC,GAAaO,GAAiC9E,IAAKiF,mBAoBlG,OACE,oCACGD,GACC,yBAAKjO,UAAU,mBACb,kBAACmO,EAAA,EAAM,CACLC,YAAY,4BACZC,GAAG,uBACHhD,KAAK,WACLiD,MAAOC,IAAQtN,EAAE,gCACjBuN,QAASf,EACTgB,SA5Be,SAACC,GACxB,GAAKzF,IAAKiF,mBAAV,CAIA,IAAMS,EAAiBD,EAAME,OAAOJ,QAC9BK,EAAOF,EACT1F,IAAK6F,oBAAoBC,SAASC,kBAAoB/F,IAAK6F,oBAAoBC,SAASE,cACxF,KACqBC,cAER/I,SAAQ,SAACgJ,GAAS,MACjB,QAAhB,EAAAA,EAAKC,mBAAW,OAAhB,OAAAD,EAAmBN,MAGrB1N,EAASiB,IAAQiN,kBAAkBV,WCjCjCW,G,OAAQ/J,OAAOkF,KAAK6E,OAEbC,EAA8B,SAACC,GAO1C,MANiC,CAC/BF,EAAMG,6BACNH,EAAMI,4BACNJ,EAAMK,gCAGwBC,MAAK,SAACT,GAAI,OAAKlG,IAAK4G,QAAQL,aAAqBL,MAsCtEW,EAA0B,SAACN,GAItC,MAHqC,CACnCF,EAAMS,yBAE4BH,MAAK,SAACT,GAAI,OAAKlG,IAAK4G,QAAQL,aAAqBL,M,y7DClCvF,IAAMa,EAAkBC,IAAoBC,OAAOC,KAE7C1P,EAAY,CAChB2P,cAAe1P,IAAU8G,KAAK6I,WAC9BhM,MAAO3D,IAAUqG,OAAOsJ,WACxBC,iBAAkB5P,IAAU6P,QAAQ7P,IAAUyG,QAC9C8F,WAAYvM,IAAU4G,KACtBkJ,UAAW9P,IAAU4G,KACrBmJ,YAAa/P,IAAU4G,KACvBoJ,WAAYhQ,IAAU4G,KACtBqJ,qBAAsBjQ,IAAU4G,KAChCsJ,MAAOlQ,IAAU4G,KACjBuJ,0BAA2BnQ,IAAU4G,KACrCwJ,eAAgBpQ,IAAUyG,OAC1B4J,aAAcrQ,IAAUyG,OACxB6J,YAAatQ,IAAUyG,OACvB8J,kBAAmBvQ,IAAU8G,KAC7BgI,SAAU9O,IAAUyG,OACpBI,qBAAsB7G,IAAU8G,KAChCH,mBAAoB3G,IAAU4G,KAC9B4J,0BAA2BxQ,IAAU8G,MAKjC2J,EAAc,SAAH,GAkBX,MAjBJf,EAAa,EAAbA,cACA/L,EAAK,EAALA,MACA4I,EAAU,EAAVA,WACAuD,EAAS,EAATA,UACAC,EAAW,EAAXA,YACAC,EAAU,EAAVA,WACAC,EAAoB,EAApBA,qBACAC,EAAK,EAALA,MACAC,EAAyB,EAAzBA,0BACAC,EAAc,EAAdA,eACAC,EAAY,EAAZA,aACAC,EAAW,EAAXA,YACAC,EAAiB,EAAjBA,kBACAzB,EAAQ,EAARA,SACAjI,EAAoB,EAApBA,qBACAF,EAAkB,EAAlBA,mBACA6J,EAAyB,EAAzBA,0BAEOjQ,EAAqB,EAAhBC,cAAgB,GAApB,GACFC,EAAWC,cACgD,IAA3BM,mBAAS2C,EAAM+M,aAAY,GAA1DC,EAAW,KAAEC,EAAc,KACwC,IAAxB5P,mBAASoP,GAAe,GAAnES,EAAiB,KAAEC,EAAoB,KACsB,IAAtB9P,mBAASqP,GAAa,GAA7DU,EAAe,KAAEC,EAAkB,KACyB,IAArBhQ,mBAASsP,GAAY,GAA5DW,GAAe,KAAEC,GAAkB,KACiB,KAAzBlQ,mBAAS2C,EAAMwN,WAAU,GAApDC,GAAS,MAAEC,GAAY,MAGxBC,GD1D+C,SAACxC,GAYtD,MAXsC,CACpCF,EAAM2C,oBACN3C,EAAM4C,kBACN5C,EAAM6C,kBACN7C,EAAM8C,uBACN9C,EAAM+C,6BACN/C,EAAMgD,0BACNhD,EAAMiD,mBACNjD,EAAMkD,mBAG6B5C,MAAK,SAACT,GAAI,OAAKlG,IAAK4G,QAAQL,aAAqBL,KC8CrCsD,CAAwCjD,GACnFkD,GD5C8B,SAAClD,GASrC,MARoC,CAClCF,EAAMqD,wBACNrD,EAAMsD,wBACNtD,EAAMuD,uBACNvD,EAAMwD,wBACNxD,EAAMyD,2BACNzD,EAAM0D,uBAE2BpD,MAAK,SAACT,GAAI,OAAKlG,IAAK4G,QAAQL,aAAqBL,KCmC3D8D,CAAuBzD,GAC1C0D,GDlB2B,SAAC1D,GASlC,MARkC,CAChCF,EAAM6D,8BACN7D,EAAM8D,yBACN9D,EAAM+D,+BACN/D,EAAMgD,0BACNhD,EAAMgE,qCACNhE,EAAMiE,4CAEyB3D,MAAK,SAACT,GAAI,OAAKlG,IAAK4G,QAAQL,aAAqBL,KCSrDqE,CAAoBhE,GAC3CiE,GDlCuB,SAACjE,GAK9B,MAJoC,CAClCF,EAAMiD,mBACNjD,EAAMkD,mBAE2B5C,MAAK,SAACT,GAAI,OAAKlG,IAAK4G,QAAQL,aAAqBL,KC6B9DuE,CAAgBlE,GAEtCzN,qBAAU,WACJiQ,IAEA7Q,EADEsS,GACOrR,IAAQI,YAAY2G,IAAawK,2BAEjCvR,IAAQI,YAAY2G,IAAayK,2BAG7C,CAACpE,IAEJzN,qBAAU,WACRuP,EAAejN,EAAM+M,aACrBW,GAAa1N,EAAMwN,aAClB,CAACR,EAAaS,GAAWzN,IAE5BtC,qBAAU,WACRuP,EAAejN,EAAM+M,aACrBI,EAAqBV,GACrBc,GAAmBZ,GACnBU,EAAmBX,KAClB,CAACD,EAAgBC,EAAcC,IAElC,IA8BM6C,GAAiB,SAACrI,EAAUP,GAChCmF,WAAgB5E,EAAUP,IAIxBwF,IACFpM,EAAMyP,QAAU,KAChBzP,EAAM0P,gBAAkB,MAG1B,IAcE,KAPEzS,aAAY,SAACC,GAAK,MAAK,CACzBC,IAAUiM,kBAAkBlM,GAC5BC,IAAUwS,kBAAkBzS,EAAO4H,IAAa8K,cAChDzS,IAAU0S,cAAc3S,EAAO4H,IAAayK,wBAC5CpS,IAAU0S,cAAc3S,EAAO4H,IAAagL,sBAC5C3S,IAAU0S,cAAc3S,EAAO4H,IAAaiL,mBAC5C5S,IAAU0S,cAAc3S,EAAO4H,IAAawK,+BAC5C,GAbAlG,GAAiB,MACjB4G,GAAqB,MACrBC,GAA4B,MAC5BC,GAA0B,MAC1BC,GAAwB,MACxBC,GAA0B,MAUtBC,IAAU,OACbvL,IAAayK,uBAAyBU,IAA4B,IAClEnL,IAAagL,qBAAuBI,IAA0B,IAC9DpL,IAAaiL,kBAAoBI,IAAwB,IACzDrL,IAAawK,0BAA4Bc,IAA0B,GAGhEE,GAAkB,SAACvG,GAIrBjN,EAHGuT,GAAWtG,GAGLhM,IAAQwS,aAAaxG,GAFrBhM,IAAQI,YAAY4L,KAK3ByG,GAAyB,WAC7B1T,EAASiB,IAAQ0S,aAAa3L,IAAa4L,mBAC3CJ,GAAgBxL,IAAawK,4BAEzBqB,GAA2B,WAAH,OAASL,GAAgBxL,IAAayK,yBAC9DqB,GAAyB,WAAH,OAASN,GAAgBxL,IAAagL,uBAC5De,GAAuB,WAAH,OAASP,GAAgBxL,IAAaiL,oBA0E1De,GAAe,SAAC3J,EAAU4J,GAC9B,IAAMC,EAzEe,SAAChK,GACtB,IAAQyI,EAA6BzP,EAA7ByP,QAASC,EAAoB1P,EAApB0P,gBAEXuB,EAAYC,IAClB,OAAQlK,EAAKzL,eACX,IAAK,UACH,OAAgB,OAAZkU,EACK,KAEF,CACLtI,SAAU,UACVgK,gBAAiB,UACjBvK,MAAO6I,EACP2B,gBAAiB,SAAC3B,GAAO,gBAAQ4B,KAAKC,MAAgB,IAAV7B,GAAc,MAC1D1F,YAAajF,IAAayM,eAC1BC,kBAAmB,SAACC,EAAYhC,GAAO,OAAKA,EAAUgC,EAAaR,GACnES,qCAAsC,SAACC,GAAc,OAAKA,GAC1DC,gBAAgB,EAChBC,eAAgB,SAChBC,IAAK,EACLC,IAAK,IACLC,KAAM,EACNC,cAAe,SAACC,GAAO,OAAKC,SAASD,GAAW,MAEpD,IAAK,kBACH,OAAwB,OAApBxC,EACK,KAEF,CACLvI,SAAU,kBACVgK,gBAAiB,YACjBvK,MAAO8I,EACP0B,gBAAiB,SAACgB,GAChB,IAAMC,EACJhB,KAAKiB,MAAMF,KAAqBA,IAC5BA,aAAe,EAAfA,EAAiBG,WAAWC,MAAM,KAAK,GAAGvT,SAC1C,EACN,MACS,GAAP,OADsB,IAApByQ,GAA0BA,GAAmB,IAAM2C,EAAiB,GAAwB,IAAnBA,GACjEhB,KAAKC,MAAMc,GAEbK,WAAWL,GAAiBM,QAAQ,GAFP,OAIzC3I,YAAajF,IAAa6N,wBAC1BnB,kBAAmB,SAACC,EAAYW,GAAe,OAAMA,EAlLlC,GAkL4EX,EAAaR,GAC5GS,qCAAsC,SAACC,GACrC,OAAIA,GAAkB,IACbN,KAAKC,MArLG,GAqLGK,GAEhBA,GAAkB,OAA+BA,EAAiB,IAC7D,IAELA,GAAkB,MAA8BA,EAAiB,MAC5D,GAELA,GAAkB,OAA+BA,EAAiB,KAC7D,IAELA,GAAkB,MAA+BA,EAAiB,MAC7D,GAEF/I,EAAa,EAAI,IAE1BgJ,gBAAgB,EAChBC,eAAgB,SAChBC,IAAKlJ,EAAa,EAAI,GACtBmJ,IAxMmB,GAyMnBC,KAAM,EACNC,cAAe,SAACG,GAAe,OAAKK,WAAWL,GAAiBM,QAAQ,MAM1DE,CAAezL,GACnC,OAAK6J,EAIH,kBAAC6B,EAAA,EAAM,GACLnT,IAAKyH,GACD6J,EAAW,CACfjF,cAAeyD,GACfA,eAAgBA,GAChBuB,sBAAuBA,KARlB,MAaL+B,GAAgB,WACpB,GAAInF,GACF,OAAO,yBAAKhS,UAAU,aAIpBoX,GAAcC,cAEpB,OACE,yBAAKrX,UAAU,cACboL,YAAa,SAACtI,GACG,eAAXA,EAAEuI,MACJvI,EAAEwI,mBAILmI,IACC,yBAAKzT,UAAU,0BACb,yBAAKA,UAAU,mBACbgE,QAAS6Q,GACTyC,aAAczC,GACd0C,SAAU,EACVC,UAAW,SAAC1U,GAAC,MAAe,UAAVA,EAAEiB,KAAmB8Q,MAA0B4C,KAAM,WAEvE,yBAAKzX,UAAU,cACZiB,EAAE,gCAEL,yBAAKjB,UAAU,kBACb,kBAACyE,EAAA,EAAI,CAACC,MAAK,uBAAkB+P,GAA6B,KAAO,YAGnEA,IACA,kBAAC9M,EAAA,QAAmB,GAClBtD,MAAOA,GACH+S,GAAW,CACf5L,SAAU,YACVkM,YAAa,WACbrQ,mBAAoBA,EACpBE,qBAAsBA,EACtBE,iBAAkB2I,EAClB1I,sBAAuBwJ,KAG1BiG,MAKH,yBAAKnX,UAAU,gBACZgS,IACC,yBACEhS,UAAU,qCACVgE,QAASgR,GACTsC,aAActC,GACduC,SAAU,EACVC,UAAW,SAAC1U,GAAC,MAAe,UAAVA,EAAEiB,KAAmBiR,MACvCyC,KAAM,WAEN,yBAAKzX,UAAU,cAAciB,EAAE,uCAC/B,yBAAKjB,UAAU,kBACb,kBAACyE,EAAA,EAAI,CAACC,MAAK,uBAAkB4P,GAA+B,KAAO,aAIvEA,KAAiCtC,KACjC,oCACE,yBAAKhS,UAAU,cACb,kBAACY,EAAA,EAAW,CAACC,cAzOC,SAACpB,GAC3B2Q,WAAgB,cAAe3Q,GAC/B6R,EAAe7R,IAuO8C2Q,cAAeA,EAAe3Q,MAAO4R,MAEtFqB,IAAoB,yBAAK1S,UAAU,eAAemV,GAAa,oBAIhExE,GAAwB,yBAAK3Q,UAAU,eAAemV,GAAa,cACjEnE,KAAiBH,IAA8B5D,KAAgByD,IAAeE,GAC/E,yBAAK5Q,UAAU,eACb,yBAAKA,UAAU,uCACb,yBAAKA,UAAU,gBAAe,SAC9B,yBAAKA,UAAU,yBACZ2Q,GACC,kBAACgH,EAAA,EAAQ,CACP3X,UAAU,qCACVoO,YAAY,yBACZwJ,OAAQC,IACRC,YArPO,SAACzT,GAC9B4M,WAAoB,QAAS5M,GAC7BmN,EAAqBnN,IAoPC0T,oBAAqBxG,KAGvB8C,IACA,kBAACsD,EAAA,EAAQ,CACP3X,UAAS,6CACLgR,IAAgBL,EAAuB,gBAAkB,IAE7DvC,YAAY,0BACZwJ,OAAQpH,GAAaG,EAAuBV,IAAsBD,EAClE8H,YA3PI,SAACzT,EAAO4G,GAC9BA,GACFgG,WAAoB5M,EAAO4G,GAC3B2G,GAAmB3G,KAEnBgG,WAAoB,SAAU5M,GAC9BuN,GAAmBvN,KAsPC0T,oBAAqBpG,KAGxBhB,GACC,kBAACgH,EAAA,EAAQ,CACP3X,UAAU,mCACVoO,YAAY,uBACZwJ,OAAQI,IACRF,YA1PK,SAACzT,GAC5B4M,WAAoB,MAAO5M,GAC3BqN,EAAmBrN,IAyPG0T,oBAAqBtG,QASpC0F,MAGJnF,IACC,yBAAKhS,UAAU,gBACb,yBACEA,UAAU,mCACVgE,QAASiR,GACTqC,aAAcrC,GACdsC,SAAU,EACVC,UAAW,SAAC1U,GAAC,MAAe,UAAVA,EAAEiB,KAAmBkR,MACvCwC,KAAM,WAEN,yBAAKzX,UAAU,cAAciB,EAAE,qCAC/B,yBAAKjB,UAAU,kBACb,kBAACyE,EAAA,EAAI,CAACC,MAAK,uBAAkB6P,GAA6B,KAAO,YAGpEA,IACC,yBAAKvU,UAAU,cACb,kBAACY,EAAA,EAAW,CACVC,cApRY,SAACpB,GACzB2Q,WAAgB,YAAa3Q,GAC7BsS,GAAatS,IAmRD2Q,cAAeA,EACf3Q,MAAOqS,GACPhR,qBAAqB,MAIzBgP,EAAwBN,IAAa2H,MAI3C,yBAAKnX,UAAU,gBACZgS,KAA6ClC,EAAwBN,IACpE,yBACExP,UAAU,qCACVgE,QAASkR,GACToC,aAAcpC,GACdqC,SAAU,EACVC,UAAW,SAAC1U,GAAC,MAAe,UAAVA,EAAEiB,KAAmBmR,MACvCuC,KAAM,WAEN,yBAAKzX,UAAU,cAAciB,EAAE,0BAC/B,yBAAKjB,UAAU,kBACb,kBAACyE,EAAA,EAAI,CAACC,MAAK,uBAAkB8P,GAA2B,KAAO,aAQnE7D,IAAyB6D,KAA6BxC,KACtD,yBAAKhS,UAAU,eAAemV,GAAa,UAAWnD,KAEvDkB,IAAwBiE,MAE1BjE,IACC,qCAEIlB,IAA4C,yBAAKhS,UAAU,WAC7D,yBAAKA,UAAU,gBACb,kBAAC,EAAc,CAACuN,MAAOlJ,EAAMkJ,MAAOC,UAAWnJ,EAAMmJ,UAAWC,kBAAmBA,SAQ/F0D,EAAY1Q,UAAYA,EAET0Q,IClcAA,EDkcAA,E,i0EEnEA8G,IAjXI,WAAM,MAChBhX,EAAqB,EAAhBC,cAAgB,GAApB,GAYN,IALEI,aAAY,SAACC,GAAK,MAAK,CACzBC,IAAU0S,cAAc3S,EAAO,cAC/BC,IAAU0W,qBAAqB3W,GAC/BC,IAAU2W,oCAAoC5W,GAC9CC,IAAU4W,2BAA2B7W,OACrC,GATA8W,EAAW,KACXC,EAAgB,KAChBH,EAAmC,KACnCI,EAAuB,KAQnBC,EAAkB,CAAC,cAAe,aACS,IAAf9W,oBAAS,GAAM,GAA1C+W,EAAS,KAAEC,EAAY,KACuB,IAAfhX,oBAAS,GAAM,GAA9CiX,EAAW,KAAEC,EAAc,KACgC,IAAdlX,mBAAS,MAAK,GAA3DmX,EAAkB,KAAEC,EAAqB,KACC,IAAfpX,oBAAS,GAAM,GAA1C8O,EAAS,KAAEuI,EAAY,KACqB,IAAfrX,oBAAS,GAAM,GAA5CuL,EAAU,KAAE+L,EAAa,KACqB,IAAftX,oBAAS,GAAM,GAA9C+O,EAAW,KAAEwI,EAAc,KACiB,IAAfvX,oBAAS,GAAM,GAA5CgP,EAAU,KAAEwI,EAAa,KACS,IAAfxX,oBAAS,GAAM,GAAlCkP,EAAK,KAAEuI,EAAQ,KAC2D,IAAfzX,oBAAS,GAAM,GAA1EmP,EAAyB,KAAEuI,EAA4B,KACxB,KAAZ1X,mBAAS,IAAG,GAA/B2C,GAAK,MAAEgV,GAAQ,MACgC,KAAV3X,qBAAU,GAA/CoP,GAAc,MAAEwI,GAAiB,MACU,KAAV5X,qBAAU,GAA3CqP,GAAY,MAAEwI,GAAe,MACY,KAAV7X,qBAAU,GAAzCsP,GAAW,MAAEwI,GAAc,MAC2C,KAAzC9X,mBAAST,EAAE,+BAA8B,GAAtEwY,GAAU,MAAEC,GAAa,MAC1BC,GAA4BC,cACqC,KAAflY,oBAAS,GAAM,GAAhEiP,GAAoB,MAAEkJ,GAAuB,MACsB,KAA9BnY,mBAAS2C,GAAMyV,gBAAe,GAAnEA,GAAc,MAAEC,GAAiB,MAWxChY,qBAAU,WACR,IAAK8W,GAAsBJ,EAAW,CACpC,IAAMuB,EAAQ1B,EAAiBrP,IAAKgR,cAAc/M,MAAM8M,MACxDN,GAAc,GAAD,OAAIzY,EAAE+Y,GAAM,YAAI/Y,EAAE,kCAInCc,qBAAU,WACR,IAAMmY,EAAuB,SAACC,EAAaC,GACzC,GAAe,aAAXA,EAAuB,CAEzB,GAA2B,IAAvBD,EAAY7W,OAAc,CAG5B,GAFAwV,EAAsBqB,EAAY,IAClCT,GAAc,GAAD,OAAIzY,EAAEqX,EAAiB6B,EAAY,GAAGE,UAAUL,OAAM,YAAI/Y,EAAE,oCACrEsO,EAA4B4K,EAAY,GAAGE,UAE7C,YADAzB,GAAe,GAGjBA,GAAe,GAEfG,EAAaoB,EAAY,aAAc5U,OAAOkF,KAAKC,YAAY4P,mBAC/DtB,EAAcmB,EAAY,aAAc5U,OAAOkF,KAAKC,YAAYgB,oBAChEuN,EAAekB,EAAY,aAAc5U,OAAOkF,KAAKC,YAAY6P,qBACjErB,EAAciB,EAAY,aAAc5U,OAAOkF,KAAKC,YAAY8P,oBAChErB,EAASgB,EAAY,aAAc5U,OAAOkF,KAAKC,YAAY+P,eAC3DrB,EAA6BnQ,IAAKyR,8BAA8B7J,6BAChEgJ,GAAwBc,YAAeC,YAAiBT,EAAY,GAAGE,WAAWQ,qBAElFnB,GAAc,GAAD,OAAIzY,EAAE,mCAAkC,aAAKkZ,EAAY7W,OAAM,MAE9EoV,GAAa,QACR,GAAe,eAAX0B,EAAyB,CAClC,IAAMU,EAAc7R,IAAKgR,cACrBa,aAAuBvV,OAAOkF,KAAK6E,MAAMyL,oBAC3CrC,GAAa,GAGfzP,IAAK+R,YAAYF,EAAY5N,MAC7B4L,EAAsB,QAIpBmC,EAAuB,SAACC,GAC5B,GAAIvB,GAA0BzW,SAASgY,aAAO,EAAPA,EAAShO,MAC9C,GAAKuM,GAEE,CACL,GAAIlK,EAA4B2L,aAAO,EAAPA,EAAShO,MAGvC,OAFA0L,GAAe,QACfF,GAAa,GAGfE,GAAe,GAEfiB,GAAwBc,YAAeC,YAAiBM,EAAQhO,OAAO2N,gBAEvE9B,EAAamC,EAAQhO,OAAS3H,OAAOkF,KAAK6E,MAAM6L,UAAUC,SAC1DpC,EAAckC,EAAQhO,OAAS3H,OAAOkF,KAAK6E,MAAM6L,UAAUE,WAC3DpC,EAAeiC,EAAQhO,OAAS3H,OAAOkF,KAAK6E,MAAM6L,UAAUG,WAC5DpC,EACEgC,EAAQhO,OAAS3H,OAAOkF,KAAK6E,MAAM6L,UAAUI,UAC3CL,EAAQhO,OAAS3H,OAAOkF,KAAK6E,MAAM6L,UAAUK,oBAEjDrC,EAAS+B,EAAQhO,OAAS3H,OAAOkF,KAAK6E,MAAM6L,UAAUM,KACtDrC,EAA6BnQ,IAAKyR,8BAA8B7J,6BAChE,IAAM6K,EAAaC,YAAcT,EAAQhO,OAErCgO,EAAQhO,KAAKhK,SAAS,aAAegY,EAAQhO,KAAKhK,SAAS,cAC7DwY,EAA2B,eAAIR,EAAkB,SAAkB,eACnEnB,GAAkBmB,EAAkB,SAAkB,iBAGxD7B,GAASqC,GACTpC,GAAkBoC,EAAWE,gBAC7BpC,GAAekC,EAAWpS,aAC1BiQ,GAAgBmC,EAAWG,cAC3BnD,GAAa,QA/BbA,GAAa,QAkCfA,GAAa,IAMjB,OAFAzP,IAAKvG,iBAAiB,qBAAsBwX,GAC5CjR,IAAKvG,iBAAiB,kBAAmBuY,GAClC,WACLhS,IAAK5F,oBAAoB,qBAAsB6W,GAC/CjR,IAAK5F,oBAAoB,kBAAmB4X,MAE7C,IAEHlZ,qBAAU,WACR,GAAIsW,EACF,GAAIQ,EAAoB,CACtB,IAAMiD,EAAQjD,EACRkD,EAAc,GAEpB,GAAID,aAAiBvW,OAAOkF,KAAKC,YAAYgB,mBAAoB,CAC/D,IAAIpC,EAAc,QAClB,IACEA,EAAkC,SAAnBwS,EAAa,MAAY,UACjCA,EAAa,MAAC,YAAIA,EAAc,QACnCA,EAAa,MACjB,MAAOvS,GACPC,QAAQC,MAAMF,GAEhBwS,EAAuB,UAAID,EAAM5U,UACjC6U,EAA2B,cAAID,EAAMnS,mBACrCoS,EAAkB,KAAID,EAAMlS,KAC5BmS,EAAsB,SAAID,EAAMjS,SAChCkS,EAAuB,UAAID,EAAMhS,UACjCiS,EAA+B,kBAAID,EAAM/R,kBACzCgS,EAAgC,mBAAID,EAAMzR,wBAC1C0R,EAAyB,YAAIzS,EAC7ByS,EAA4B,eAAID,EAAMhC,iBACtCC,GAAkB+B,EAAMhC,kBAG1BT,GAAS,EAAD,KACHhV,IAAK,IACR+M,YAAa0K,EAAM1K,YACnB2C,gBAAiB+H,EAAM/H,gBACvBD,QAASgI,EAAMhI,QACfjC,UAAWiK,EAAMjK,WACdkK,IAELzC,GAAkBwC,EAAME,cAAgBF,EAAME,gBAAkB,QAChEzC,GAAgBuC,EAAMG,YAAcH,EAAMG,cAAgB,QAC1DzC,GAzIiB,SAACsC,GACtB,IAAMzX,EAAQyX,EAAa,MACrBI,EAASJ,EAAc,OAC7B,MAAc,SAAVzX,EACKA,EAEF,GAAP,OAAUA,EAAK,YAAI6X,GAmIAC,CAAeL,QACzB,CACL,IAAMhB,EAAc7R,IAAKgR,cACzB,GAAIa,EAAa,CACf,IAAMY,EAAaC,YAAcb,EAAY5N,MACzCwO,IACFrC,GAASqC,GACTpC,GAAkBoC,EAAWE,gBAC7BrC,GAAgBmC,EAAWG,cAC3BrC,GAAekC,EAAWpS,kBAKjC,CAAC+O,EAAaQ,IAEjB,IAkGMuD,GACJ,oCACE,yBAAKpc,UAAU,sBACZiB,EAAE,+BAEL,yBAAKjB,UAAU,oBACb,6BACE,kBAACyE,EAAA,EAAI,CAACzE,UAAU,aAAa0E,MAAM,kCAErC,yBAAK1E,UAAU,OAAOiB,EAAE,gCAqC9B,OAAQwX,EAGN,oCACE,yBAAKzY,UAAU,sBAAsByZ,IACpCd,EACC,yBAAK3Y,UAAU,oBACb,6BACE,kBAACyE,EAAA,EAAI,CAACzE,UAAU,aAAa0E,MAAM,kCAErC,yBAAK1E,UAAU,OAAOiB,EAAE,4BAG1B,kBAAC,EAAW,CACVqP,iBAAkB,CAAC,UAAW,mBAC9BjM,MAAOA,GACP+L,cAhKc,SAAC5E,EAAUP,GAC/B,IAAMoR,EAAW,EAAH,GAAQhY,IACtBgY,EAAS7Q,GAAYP,EACrBoO,GAASgD,GAET,IAAMC,EAAsBrT,IAAKsT,yBACjC,GAAID,EAAoBhZ,OAAS,EAC/BgZ,EAAoBnW,SAAQ,SAAC2V,GAC3B,GAAItD,EAAgBtV,SAASsI,GAAW,CACtC,IAAMgR,EAAWC,YAAUxR,GACrBxL,EAAQ,IAAI8F,OAAOkF,KAAKC,YAAYC,MAAM6R,EAASE,EAAGF,EAASG,EAAGH,EAASI,EAAGJ,EAASK,GAC7Ff,EAAMtQ,GAAY/L,EACd0Y,GACF2E,YAAchB,EAAMzB,SAAU7O,EAAU/L,QAG1Cqc,EAAMtQ,GAAYP,EACdkN,GACF2E,YAAchB,EAAMzB,SAAU7O,EAAUP,GAG5ChC,IAAKyD,uBAAuBqQ,iBAAiBjB,UAE1C,CACL,IAAMhB,EAAc7R,IAAKgR,cACzB,GAAIa,EACF,GAAItC,EAAgBtV,SAASsI,GAAW,CACtC,IAAMgR,EAAWC,YAAUxR,GACrBxL,EAAQ,IAAI8F,OAAOkF,KAAKC,YAAYC,MAAM6R,EAASE,EAAGF,EAASG,EAAGH,EAASI,EAAGJ,EAASK,GAC7FC,YAAchC,EAAY5N,KAAM1B,EAAU/L,OACpB,YAAb+L,EACTsR,YAAchC,EAAY5N,KAAM,UAAWjC,GACrB,oBAAbO,EACTsR,YAAchC,EAAY5N,KAAM,kBAAmBjC,GAEnD6R,YAAchC,EAAY5N,KAAM1B,EAAUP,GAKhD,GAAiB,cAAbO,GAA4BqN,aAA8BtT,OAAOkF,KAAKC,YAAYgB,mBAAoB,CACxG,IAAM1E,EAAS6R,EAAmBmE,YAC9BhW,WAAQiW,YACVjW,EAAOqS,SAAS,CAAE6D,WAAYjS,MAsH5BgC,WAAYA,EACZuD,UAAWA,EACXC,YAAaA,EACbC,WAAYA,EACZE,MAAOA,EACPC,0BAA2BA,EAC3BF,qBAAsBA,GACtBG,eAAgBA,GAChBC,aAAcA,GACdC,YAAaA,GACbC,kBA3HkB,SAACkM,EAASlS,GAClC,IAAMmS,EAAqB,CACzBC,MAAO,iBACPC,OAAQ,cACRC,IAAK,gBAES,UAAZJ,EACF7D,GAAkBrO,GACG,WAAZkS,EACT3D,GAAevO,GACM,QAAZkS,GACT5D,GAAgBtO,GAElB,IAAMqR,EAAsBrT,IAAKsT,yBACjC,GAAID,EAAoBhZ,OAAS,EAC/BgZ,EAAoBnW,SAAQ,SAAC2V,GAC3B,GAAgB,UAAZqB,EACFrB,EAAM0B,cAAcvS,QACf,GAAgB,WAAZkS,EAAsB,CAC/B,IAAMjB,EAASjR,EAAM4L,MAAM,KACrB4G,EAAYvB,EAAOwB,QACzB5B,EAAM6B,MAAQF,EACd3B,EAAM8B,OAAS1B,MACM,QAAZiB,GACTrB,EAAM+B,YAAY5S,GAEpBhC,IAAKyD,uBAAuBqQ,iBAAiBjB,GACzC3D,GACF2E,YAAchB,EAAMzB,SAAU+C,EAAmBD,GAAUlS,UAG1D,CACL,IAAM6P,EAAc7R,IAAKgR,cACrBa,GACFgC,YAAchC,EAAY5N,KAAMkQ,EAAmBD,GAAUlS,KA0F3DuE,UAAUqJ,aAAkB,EAAlBA,EAAoBwB,YAA8B,QAAtB,EAAIpR,IAAKgR,qBAAa,aAAlB,EAAoB/M,MAC9D3F,qBAvFe,WACrB,GAAIsR,EACFiF,YAA6BjF,EAAoBkB,GAAmBD,QAC/D,CACL,IAAMgB,EAAc7R,IAAKgR,cACrBa,IACFgC,YAAchC,EAAY5N,KAAM,kBAAmB7I,GAAMyV,gBACzDC,IAAmBD,OAiFjBzS,mBAAoByS,GACpB5I,0BA/D0B,SAAC1F,EAAUP,GAC3C,IAAM8S,EAAmBvS,EACnBwS,EAAgB/S,EAChBgT,EAA0B5Z,GAAqB,cAAE,GACtC,cAAbmH,GAAyC,iBAAbA,IAC9BP,EAAQiT,YAAkB,KAAG1S,EAAWP,GAASgT,GACjDzS,EAAW,mBAEb,IAAM2S,EAAgB,CACpBC,EAAG,EAAF,KACIH,GAAuB,QACzBzS,EAAWP,KAIVqR,EAAsBrT,IAAKsT,yBACjC,GAAID,EAAoBhZ,OAAS,EAC/BgZ,EAAoBnW,SAAQ,SAACW,GAC3BmC,IAAKoV,8BAA8BvX,EAAY,KAAGiX,EAAmBC,GAAiBzF,MAExFc,GAAS,EAAD,KAAMhV,IAAK,IAAE,cAAiB8Z,SACjC,CACL,IAAMrD,EAAc7R,IAAKgR,cACrBa,IACkC,mBAAzBA,EAAYwD,UACrBxD,EAAYwD,WAEdxB,YAAchC,EAAY5N,KAAM,gBAAiBiR,SAMrD/B,K,qBC5VJ,IAAIpX,EAAM,EAAQ,IACFC,EAAU,EAAQ,MAIC,iBAFvBA,EAAUA,EAAQC,WAAaD,EAAQE,QAAUF,KAG/CA,EAAU,CAAC,CAACG,EAAOtB,EAAImB,EAAS,MAG9C,IAAII,EAAU,CAEd,OAAiB,SAAUC,GAgBX,IAAKC,OAAOC,8BAEV,YADAC,SAASC,KAAKC,YAAYL,GAI5B,IAAIM,EAEJA,EAAgBH,SAASI,qBAAqB,oBAEzCD,EAActC,SACjBsC,EAzBF,SAASE,EAAwBC,EAASC,EAAOP,UAC/C,MAAMQ,EAAW,GAYjB,OATAD,EAAKE,iBAAiBH,GAASI,QAAQC,GAAMH,EAASzC,KAAK4C,IAG3DJ,EAAKE,iBAAiB,KAAKC,QAAQC,IAC7BA,EAAGC,YACLJ,EAASzC,QAAQsC,EAAwBC,EAASK,EAAGC,eAIlDJ,EAYSH,CAAwB,qBAG1C,MAAMQ,EAAkB,GACxB,IAAK,IAAIxC,EAAI,EAAGA,EAAI8B,EAActC,OAAQQ,IAAK,CAC7C,MAAMyC,EAAeX,EAAc9B,GACnC,GAAU,IAANA,EACFyC,EAAaF,WAAWV,YAAYL,GACpCA,EAASkB,OAAS,WACZF,EAAgBhD,OAAS,GAC3BgD,EAAgBH,QAASM,IAEvBA,EAAUC,UAAYpB,EAASoB,iBAIhC,CACL,MAAMD,EAAYnB,EAASqB,WAAU,GACrCJ,EAAaF,WAAWV,YAAYc,GACpCH,EAAgB9C,KAAKiD,MAIzC,WAAoB,GAEPzB,EAAIC,EAASI,GAI1BD,EAAOwB,QAAU3B,EAAQ4B,QAAU,I,sBClEnCD,EAAUxB,EAAOwB,QAAU,EAAQ,GAAR,EAAkE,IAKrFpD,KAAK,CAAC4B,EAAOtB,EAAI,ozDAAqzD,KAG90D8C,EAAQC,OAAS,CAChB,kBAAqB,OACrB,mBAAsB,S,+ECGR0X,G,QARa,WAC1B,OACE,kBAACC,EAAA,EAAkB,CAACpQ,YAAY,aAAapO,UAAU,oBACrD,kBAACiY,EAAA,EAAU,SCNFsG","file":"chunks/29.chunk.js","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport classNames from 'classnames';\nimport './ColorPicker.scss';\nimport { useTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\nimport Icon from 'components/Icon';\nimport actions from 'actions';\nimport { useDispatch, useStore, useSelector } from 'react-redux';\nimport Events from 'constants/events';\nimport { getInstanceNode } from 'helpers/getRootNode';\nimport selectors from 'selectors';\n\nconst parseColor = (color) => {\n  if (!color) {\n    return color;\n  }\n  let parsedColor = color;\n  if (parsedColor?.toHexString) {\n    parsedColor = parsedColor.toHexString();\n  }\n  if (parsedColor?.toLowerCase) {\n    parsedColor = parsedColor.toLowerCase();\n  }\n\n  return parsedColor;\n};\n\nconst TRANSPARENT_COLOR = 'transparent';\n\nconst transparentIcon = (\n  <svg\n    width=\"100%\"\n    height=\"100%\"\n    className={classNames('transparent')}\n  >\n    <line stroke=\"#d82e28\" x1=\"0\" y1=\"100%\" x2=\"100%\" y2=\"0\" strokeWidth=\"2\" strokeLinecap=\"round\"/>\n  </svg>\n);\n\n\nconst propTypes = {\n  color: PropTypes.any\n};\n\nconst ColorPicker = ({\n  onColorChange,\n  hasTransparentColor = false,\n  color\n}) => {\n  const store = useStore();\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const [colors] = useSelector((state) => [\n    selectors.getColors(state),\n  ]);\n  const [selectedColor, setSelectedColor] = useState();\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  useEffect(() => {\n    if (color) {\n      setSelectedColor(parseColor(color));\n    }\n  }, [color]);\n\n  const getCustomColorAndRemove = () => {\n    const customColor = selectors.getCustomColor(store.getState());\n    dispatch(actions.setCustomColor(null));\n    return customColor;\n  };\n\n  const handleAddColor = useCallback(() => {\n    dispatch(actions.openElement('ColorPickerModal'));\n    const onVisibilityChanged = (e) => {\n      const { element, isVisible } = e.detail;\n      if (element === 'ColorPickerModal' && !isVisible) {\n        const color = parseColor(getCustomColorAndRemove());\n        if (color) {\n          if (colors.includes(color)) {\n            setSelectedColor(color);\n            onColorChange(color);\n          } else {\n            const newColors = [...colors, color];\n            dispatch(actions.setColors(newColors));\n            setSelectedColor(color);\n            onColorChange(color);\n          }\n        }\n      }\n      getInstanceNode().removeEventListener(Events.VISIBILITY_CHANGED, onVisibilityChanged);\n    };\n    getInstanceNode().addEventListener(Events.VISIBILITY_CHANGED, onVisibilityChanged);\n  }, [colors?.length, dispatch, setSelectedColor, onColorChange, getCustomColorAndRemove]);\n\n  const handleDelete = () => {\n    const color = parseColor(selectedColor);\n    const newColors = [...colors];\n    const indexToDelete = newColors.indexOf(color);\n    if (indexToDelete > -1) {\n      const nextIndex = indexToDelete === newColors.length - 1 ? 0 : indexToDelete + 1;\n      setSelectedColor(colors[nextIndex]);\n      onColorChange(colors[nextIndex]);\n      newColors.splice(indexToDelete, 1);\n      dispatch(actions.setColors(newColors));\n    }\n  };\n\n  const toggleExpanded = () => {\n    setIsExpanded(!isExpanded);\n  };\n\n  let palette = [\n    ...colors\n  ];\n  if (hasTransparentColor) {\n    palette.push(TRANSPARENT_COLOR);\n  }\n  if (selectedColor && !palette.includes(selectedColor)) {\n    palette.push(selectedColor);\n  }\n\n  if (!selectedColor) {\n    setSelectedColor(palette[0]);\n  }\n\n  const shouldHideShowMoreButton = palette.length <= 7;\n  const isAddDisabled = palette.length >= 21;\n  const isDeleteDisabled = palette.length <= 1;\n\n  if (!isExpanded) {\n    palette = palette.slice(0, 7);\n  }\n\n  return (\n    <>\n      <div className={classNames('ColorPalette')}>\n        {palette.map((color) => parseColor(color)).map((color, i) => (\n          !color\n            ? <div key={i} className=\"dummy-cell\"/>\n            : <button\n              key={i}\n              className=\"cell-container\"\n              onClick={() => {\n                setSelectedColor(color);\n                onColorChange(color);\n              }}\n              aria-label={`${t('option.colorPalette.colorLabel')} ${i + 1}`}\n            >\n              <div\n                className={classNames({\n                  'cell-outer': true,\n                  active: parseColor(selectedColor) === color || (!parseColor(selectedColor) && color === TRANSPARENT_COLOR),\n                })}\n              >\n                <div\n                  className={classNames({\n                    cell: true,\n                    border: color === '#ffffff' || color === TRANSPARENT_COLOR,\n                  })}\n                  style={{ backgroundColor: color }}\n                >\n                  {color === TRANSPARENT_COLOR && transparentIcon}\n                </div>\n              </div>\n            </button>\n        ))}\n      </div>\n      <div className=\"palette-controls\">\n        <div className=\"button-container\">\n          <button\n            className=\"control-button\"\n            data-element=\"addCustomColor\"\n            onClick={handleAddColor}\n            disabled={isAddDisabled}\n          >\n            <Icon glyph=\"icon-header-zoom-in-line\"/>\n          </button>\n          <button\n            className=\"control-button\"\n            data-element=\"removeCustomColor\"\n            disabled={isDeleteDisabled}\n            onClick={handleDelete}\n          >\n            <Icon glyph=\"icon-delete-line\"/>\n          </button>\n        </div>\n        <button className={classNames('show-more-button control-button', {\n          hidden: shouldHideShowMoreButton,\n        })} onClick={toggleExpanded}>\n          {t(isExpanded ? 'message.showLess' : 'message.showMore')}\n        </button>\n      </div>\n    </>\n  );\n};\n\nColorPicker.propTypes = propTypes;\n\nexport default ColorPicker;","import ColorPicker from './ColorPicker';\n\nexport default ColorPicker;","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../../../node_modules/sass-loader/dist/cjs.js!./ColorPicker.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                function findNestedWebComponents(tagName, root = document) {\n                  const elements = [];\n\n                  // Check direct children\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\n\n                  // Check shadow DOMs\n                  root.querySelectorAll('*').forEach(el => {\n                    if (el.shadowRoot) {\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\n                    }\n                  });\n\n                  return elements;\n                }\n                if (!window.isApryseWebViewerWebComponent) {\n                  document.head.appendChild(styleTag);\n                  return;\n                }\n\n                let webComponents;\n                // First we see if the webcomponent is at the document level\n                webComponents = document.getElementsByTagName('apryse-webviewer');\n                // If not, we check have to check if it is nested in another webcomponent\n                if (!webComponents.length) {\n                  webComponents = findNestedWebComponents('apryse-webviewer');\n                }\n                // Now we append the style tag to each webcomponent\n                const clonedStyleTags = [];\n                for (let i = 0; i < webComponents.length; i++) {\n                  const webComponent = webComponents[i];\n                  if (i === 0) {\n                    webComponent.shadowRoot.appendChild(styleTag);\n                    styleTag.onload = function () {\n                      if (clonedStyleTags.length > 0) {\n                        clonedStyleTags.forEach((styleNode) => {\n                          // eslint-disable-next-line no-unsanitized/property\n                          styleNode.innerHTML = styleTag.innerHTML;\n                        });\n                      }\n                    };\n                  } else {\n                    const styleNode = styleTag.cloneNode(true);\n                    webComponent.shadowRoot.appendChild(styleNode);\n                    clonedStyleTags.push(styleNode);\n                  }\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}.StylePicker .ColorPalette{display:flex;flex-wrap:wrap;display:grid;grid-template-columns:repeat(7,1fr);grid-row-gap:8px;row-gap:8px;justify-items:center}@media (-ms-high-contrast:active),(-ms-high-contrast:none){.StylePicker .ColorPalette{width:196px}}.StylePicker .ColorPalette.padding{padding:4px 12px 8px}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .StylePicker .ColorPalette{max-width:450px;width:auto}}@media(max-width:640px)and (-ms-high-contrast:active),(max-width:640px)and (-ms-high-contrast:none){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .StylePicker .ColorPalette{width:308px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .StylePicker .ColorPalette{max-width:450px;width:auto}@media (-ms-high-contrast:active),(-ms-high-contrast:none){.App.is-web-component:not(.is-in-desktop-only-mode) .StylePicker .ColorPalette{width:308px}}}.StylePicker .ColorPalette .cell-container{padding:0;border:none;background-color:transparent;flex:1 0 14%;cursor:pointer;width:28px;height:28px;display:flex;align-items:center;justify-content:center}:host(:not([data-tabbing=true])) .StylePicker .ColorPalette .cell-container,html:not([data-tabbing=true]) .StylePicker .ColorPalette .cell-container{outline:none}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .StylePicker .ColorPalette .cell-container{width:44px;height:44px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .StylePicker .ColorPalette .cell-container{width:44px;height:44px}}.StylePicker .ColorPalette .cell-container .cell-outer.active{border:1px solid var(--color-palette-border);width:26px;height:26px;border-radius:10000000px;display:flex;align-items:center;justify-content:center}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .StylePicker .ColorPalette .cell-container .cell-outer.active{width:36px;height:36px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .StylePicker .ColorPalette .cell-container .cell-outer.active{width:36px;height:36px}}.StylePicker .ColorPalette .cell-container .cell-outer .cell{width:18px;height:18px;border-radius:10000000px}.StylePicker .ColorPalette .cell-container .cell-outer .cell .transparent{border:2px solid var(--faded-text);border-radius:10000000px}.StylePicker .ColorPalette .cell-container .cell-outer .cell.border{border:1px solid var(--white-color-palette-border)}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .StylePicker .ColorPalette .cell-container .cell-outer .cell{width:24px;height:24px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .StylePicker .ColorPalette .cell-container .cell-outer .cell{width:24px;height:24px}}.StylePicker .palette-controls{padding-right:12px;padding-left:2px;display:flex;justify-content:space-between}.StylePicker .palette-controls .button-container{display:flex;grid-gap:8px;gap:8px}.StylePicker .palette-controls .control-button{display:flex;align-items:center;justify-content:center;text-align:center;min-width:32px;min-height:32px;padding:0;border:none;background-color:transparent;cursor:pointer;border-radius:4px}:host(:not([data-tabbing=true])) .StylePicker .palette-controls .control-button,html:not([data-tabbing=true]) .StylePicker .palette-controls .control-button{outline:none}.StylePicker .palette-controls .control-button.show-more-button{color:var(--ribbon-active-color)}.StylePicker .palette-controls .control-button.show-more-button:hover{background:none;color:var(--primary-button-hover)}.StylePicker .palette-controls .control-button:disabled{opacity:.5}.StylePicker .palette-controls .control-button.hidden{display:none}.StylePicker .palette-controls .control-button:hover{background:var(--view-header-button-hover)}.StylePicker .palette-controls .control-button:hover .Icon{color:var(--icon-color)}\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../../node_modules/sass-loader/dist/cjs.js!./RichTextStyleEditor.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                function findNestedWebComponents(tagName, root = document) {\n                  const elements = [];\n\n                  // Check direct children\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\n\n                  // Check shadow DOMs\n                  root.querySelectorAll('*').forEach(el => {\n                    if (el.shadowRoot) {\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\n                    }\n                  });\n\n                  return elements;\n                }\n                if (!window.isApryseWebViewerWebComponent) {\n                  document.head.appendChild(styleTag);\n                  return;\n                }\n\n                let webComponents;\n                // First we see if the webcomponent is at the document level\n                webComponents = document.getElementsByTagName('apryse-webviewer');\n                // If not, we check have to check if it is nested in another webcomponent\n                if (!webComponents.length) {\n                  webComponents = findNestedWebComponents('apryse-webviewer');\n                }\n                // Now we append the style tag to each webcomponent\n                const clonedStyleTags = [];\n                for (let i = 0; i < webComponents.length; i++) {\n                  const webComponent = webComponents[i];\n                  if (i === 0) {\n                    webComponent.shadowRoot.appendChild(styleTag);\n                    styleTag.onload = function () {\n                      if (clonedStyleTags.length > 0) {\n                        clonedStyleTags.forEach((styleNode) => {\n                          // eslint-disable-next-line no-unsanitized/property\n                          styleNode.innerHTML = styleTag.innerHTML;\n                        });\n                      }\n                    };\n                  } else {\n                    const styleNode = styleTag.cloneNode(true);\n                    webComponent.shadowRoot.appendChild(styleNode);\n                    clonedStyleTags.push(styleNode);\n                  }\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}@-webkit-keyframes bottom-up{0%{transform:translateY(100%)}to{transform:translateY(0)}}@keyframes bottom-up{0%{transform:translateY(100%)}to{transform:translateY(0)}}@-webkit-keyframes up-bottom{0%{transform:translateY(0)}to{transform:translateY(100%)}}@keyframes up-bottom{0%{transform:translateY(0)}to{transform:translateY(100%)}}.RichTextStyleEditor{padding-bottom:16px}.RichTextStyleEditor .Dropdown__wrapper{width:100%}.RichTextStyleEditor .Dropdown__wrapper .Dropdown{width:100%!important}.RichTextStyleEditor .Dropdown__wrapper .Dropdown__items{right:unset}.RichTextStyleEditor .FontSizeDropdown{width:100%}.RichTextStyleEditor .palette-controls{margin-top:8px}.RichTextStyleEditor .auto-size-checkbox{padding-top:16px;padding-bottom:16px}\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};","import React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ColorPicker from 'components/StylePicker/ColorPicker';\nimport core from 'core';\nimport actions from 'actions';\nimport selectors from 'selectors';\nimport './RichTextStyleEditor.scss';\nimport DataElements from 'constants/dataElement';\nimport TextStylePicker from 'components/TextStylePicker';\n\nconst propTypes = {\n  annotation: PropTypes.object,\n  editor: PropTypes.object,\n  style: PropTypes.shape({\n    TextColor: PropTypes.string,\n    RichTextStyle: PropTypes.any,\n  }),\n  isFreeTextAutoSize: PropTypes.bool,\n  onFreeTextSizeToggle: PropTypes.func,\n  onPropertyChange: PropTypes.func,\n  onRichTextStyleChange: PropTypes.func,\n};\n\nconst RichTextStyleEditor = ({\n  annotation, editor,\n  style,\n  isFreeTextAutoSize,\n  onFreeTextSizeToggle,\n  onPropertyChange,\n  onRichTextStyleChange,\n}) => {\n  const [\n    fonts,\n  ] = useSelector(\n    (state) => [\n      selectors.getFonts(state),\n    ],\n    shallowEqual,\n  );\n\n  const [isRichTextEditMode, setIsRichTextEditMode] = useState(false);\n  const [format, setFormat] = useState({});\n  const editorRef = useRef(null);\n  const annotationRef = useRef(null);\n  const propertiesRef = useRef({});\n  const dispatch = useDispatch();\n  const oldSelectionRef = useRef();\n\n  useEffect(() => {\n    const handleSelectionChange = (range, oldRange) => {\n      const shouldRestoreLostSelection = !range && oldRange && editorRef.current;\n      if (shouldRestoreLostSelection) {\n        editorRef.current.setSelection(oldRange.index, oldRange.length);\n      }\n      if (range && editorRef.current) {\n        setFormat(getFormat(range));\n      }\n    };\n    const handleTextChange = () => {\n      setFormat(getFormat(editorRef.current?.getSelection()));\n    };\n    core.addEventListener('editorSelectionChanged', handleSelectionChange);\n    core.addEventListener('editorTextChanged', handleTextChange);\n    // Have to disable instead of closing because annotation popup will reopen itself\n    dispatch(actions.disableElements([DataElements.ANNOTATION_STYLE_POPUP]));\n    return () => {\n      core.removeEventListener('editorSelectionChanged', handleSelectionChange);\n      core.removeEventListener('editorTextChanged', handleTextChange);\n      dispatch(actions.enableElements([DataElements.ANNOTATION_STYLE_POPUP]));\n    };\n  }, []);\n\n  useEffect(() => {\n    editorRef.current = editor;\n    annotationRef.current = annotation;\n    if (isRichTextEditMode && annotation) {\n      let StrokeStyle = 'solid';\n      try {\n        StrokeStyle = (annotation['Style'] === 'dash')\n          ? `${annotation['Style']},${annotation['Dashes']}`\n          : annotation['Style'];\n      } catch (err) {\n        console.error(err);\n      }\n      const richTextStyles = annotation.getRichTextStyle();\n      const stylesTemp = richTextStyles[0];\n\n      propertiesRef.current = {\n        Font: annotation.Font,\n        FontSize: annotation.FontSize,\n        TextAlign: annotation.TextAlign,\n        TextVerticalAlign: annotation.TextVerticalAlign,\n        bold: stylesTemp?.['font-weight'] === 'bold' ?? false,\n        italic: stylesTemp?.['font-style'] === 'italic' ?? false,\n        underline: stylesTemp?.['text-decoration']?.includes('underline')\n          || stylesTemp?.['text-decoration']?.includes('word'),\n        strikeout: stylesTemp?.['text-decoration']?.includes('line-through') ?? false,\n        StrokeStyle,\n        calculatedFontSize: annotation.getCalculatedFontSize()\n      };\n    }\n\n    setFormat(getFormat(editorRef.current?.getSelection()));\n\n    if (oldSelectionRef.current) {\n      editorRef.current.setSelection(oldSelectionRef.current);\n      oldSelectionRef.current = null;\n    }\n  }, [annotation, editor, isRichTextEditMode]);\n\n  useEffect(() => {\n    const handleEditorBlur = () => {\n      editorRef.current = null;\n      annotationRef.current = null;\n      setIsRichTextEditMode(false);\n    };\n    const handleEditorFocus = () => {\n      setIsRichTextEditMode(true);\n    };\n\n    core.addEventListener('editorBlur', handleEditorBlur);\n    core.addEventListener('editorFocus', handleEditorFocus);\n    return () => {\n      core.removeEventListener('editorBlur', handleEditorBlur);\n      core.removeEventListener('editorFocus', handleEditorFocus);\n    };\n  }, [dispatch]);\n\n\n  const getFormat = (range) => {\n    if (!range) {\n      return {};\n    }\n\n    const format = editorRef.current.getFormat(range.index, range.length);\n\n    if (typeof format.color === 'string') {\n      format.color = new window.Core.Annotations.Color(format.color);\n    } else if (Array.isArray(format.color)) {\n      // the selection contains multiple color, so we set the current color to the last selected color\n      const lastSelectedColor = new window.Core.Annotations.Color(format.color[format.color.length - 1]);\n      format.color = lastSelectedColor;\n    } else if (!format.color) {\n      format.color = annotationRef.current.TextColor;\n    }\n\n    return format;\n  };\n\n  const handleTextFormatChange = (format) => () => {\n    let { index, length } = editorRef.current.getSelection();\n    if (length === 0) {\n      oldSelectionRef.current = { index, length };\n      const newSelection = editorRef.current.getSelection();\n      index = newSelection.index;\n      length = newSelection.length;\n    }\n    const currentFormat = editorRef.current.getFormat(index, length);\n\n    applyFormat(format, !currentFormat[format]);\n  };\n\n  const handleColorChange = (name, color) => {\n    if (!isRichTextEditMode) {\n      onPropertyChange(name, color);\n      return;\n    }\n    applyFormat('color', color.toHexString());\n  };\n\n  const applyFormat = (formatKey, value) => {\n    editorRef.current?.format(formatKey, value);\n\n    if (formatKey === 'color') {\n      value = new window.Core.Annotations.Color(value);\n    }\n\n    // format the entire editor doesn't trigger the editorTextChanged event, so we set the format state here\n    setFormat({\n      ...format,\n      [formatKey]: value\n    });\n  };\n\n  const adjustFreeTextBoundingBox = (annotation) => {\n    const { FreeTextAnnotation } = window.Core.Annotations;\n    if (annotation instanceof FreeTextAnnotation && annotation.getAutoSizeType() !== FreeTextAnnotation.AutoSizeTypes.NONE) {\n      const doc = core.getDocument();\n      const pageNumber = annotation['PageNumber'];\n      const pageInfo = doc.getPageInfo(pageNumber);\n      const pageMatrix = doc.getPageMatrix(pageNumber);\n      const pageRotation = doc.getPageRotation(pageNumber);\n      annotation.fitText(pageInfo, pageMatrix, pageRotation);\n    }\n  };\n\n  // onPropertyChange\n  const handlePropertyChange = (property, value) => {\n    if (!isRichTextEditMode) {\n      onPropertyChange(property, value);\n      return;\n    }\n\n    const { index, length } = editorRef.current.getSelection();\n    const annotation = annotationRef.current;\n    annotation[property] = value;\n    editorRef.current.blur();\n    if (property === 'FontSize' || property === 'Font') {\n      adjustFreeTextBoundingBox(annotation);\n    }\n    setTimeout(() => {\n      oldSelectionRef.current = { index, length };\n      const editBoxManager = core.getAnnotationManager().getEditBoxManager();\n      editBoxManager.focusBox(annotation);\n    }, 0);\n  };\n\n\n  // onRichTextStyleChange\n  const handleRichTextStyleChange = (property, value) => {\n    if (!isRichTextEditMode) {\n      onRichTextStyleChange(property, value);\n      return;\n    }\n\n    const propertyTranslation = {\n      'font-weight': 'bold',\n      'font-style': 'italic',\n      'underline': 'underline',\n      'line-through': 'strike',\n    };\n    handleTextFormatChange(propertyTranslation[property])();\n  };\n\n\n  let properties = {};\n\n  const { RichTextStyle } = style;\n  const defulats = {\n    bold: RichTextStyle?.[0]?.['font-weight'] === 'bold' ?? false,\n    italic: RichTextStyle?.[0]?.['font-style'] === 'italic' ?? false,\n    underline: RichTextStyle?.[0]?.['text-decoration']?.includes('underline') || RichTextStyle?.[0]?.['text-decoration']?.includes('word'),\n    strikeout: RichTextStyle?.[0]?.['text-decoration']?.includes('line-through') ?? false,\n    StrokeStyle: 'solid',\n  };\n\n  properties = {\n    ...style,\n    ...defulats,\n  };\n\n  if (isRichTextEditMode && annotation) {\n    propertiesRef.current.bold = format.bold;\n    propertiesRef.current.italic = format.italic;\n    propertiesRef.current.underline = format.underline;\n    propertiesRef.current.strikeout = format.strike;\n  }\n\n  return (\n    <div className=\"RichTextStyleEditor\"\n      onMouseDown={(e) => {\n        if (e.type !== 'touchstart') {\n          e.preventDefault();\n        }\n      }}\n    >\n      <div className=\"menu-items\">\n        <TextStylePicker\n          fonts={fonts}\n          onPropertyChange={handlePropertyChange}\n          onRichTextStyleChange={handleRichTextStyleChange}\n          properties={isRichTextEditMode ? propertiesRef.current : properties}\n          stateless={true}\n          isFreeText={true}\n          onFreeTextSizeToggle={onFreeTextSizeToggle}\n          isFreeTextAutoSize={isFreeTextAutoSize}\n        />\n      </div>\n      <ColorPicker\n        onColorChange={(color) => {\n          handleColorChange('TextColor', new window.Core.Annotations.Color(color));\n        }}\n        color={isRichTextEditMode ? format.color : style['TextColor']}\n      />\n    </div>\n  );\n};\nRichTextStyleEditor.propTypes = propTypes;\n\nexport default React.memo(RichTextStyleEditor);\n","import RichTextStyleEditor from './RichTextStyleEditor';\n\nexport default RichTextStyleEditor;","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../../node_modules/sass-loader/dist/cjs.js!./StylePicker.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                function findNestedWebComponents(tagName, root = document) {\n                  const elements = [];\n\n                  // Check direct children\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\n\n                  // Check shadow DOMs\n                  root.querySelectorAll('*').forEach(el => {\n                    if (el.shadowRoot) {\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\n                    }\n                  });\n\n                  return elements;\n                }\n                if (!window.isApryseWebViewerWebComponent) {\n                  document.head.appendChild(styleTag);\n                  return;\n                }\n\n                let webComponents;\n                // First we see if the webcomponent is at the document level\n                webComponents = document.getElementsByTagName('apryse-webviewer');\n                // If not, we check have to check if it is nested in another webcomponent\n                if (!webComponents.length) {\n                  webComponents = findNestedWebComponents('apryse-webviewer');\n                }\n                // Now we append the style tag to each webcomponent\n                const clonedStyleTags = [];\n                for (let i = 0; i < webComponents.length; i++) {\n                  const webComponent = webComponents[i];\n                  if (i === 0) {\n                    webComponent.shadowRoot.appendChild(styleTag);\n                    styleTag.onload = function () {\n                      if (clonedStyleTags.length > 0) {\n                        clonedStyleTags.forEach((styleNode) => {\n                          // eslint-disable-next-line no-unsanitized/property\n                          styleNode.innerHTML = styleTag.innerHTML;\n                        });\n                      }\n                    };\n                  } else {\n                    const styleNode = styleTag.cloneNode(true);\n                    webComponent.shadowRoot.appendChild(styleNode);\n                    clonedStyleTags.push(styleNode);\n                  }\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".StylePicker{padding-top:16px;display:flex;flex-direction:column}.StylePicker .slider-property{font-size:14px;font-weight:700;margin-bottom:8px}.StylePicker .StyleOption{margin-top:16px}.StylePicker .StyleOption .styles-container .styles-title{margin:0 0 8px;font-size:14px;font-weight:700}.StylePicker .StyleOption .styles-container [data-element=borderStylePicker]{margin-top:8px}.StylePicker .StyleOption .slider .slider-element-container{margin-left:-3px}.StylePicker .PanelSection .collapsible-menu{width:100%;display:flex;cursor:pointer;position:relative;align-items:center;margin-bottom:8px}.StylePicker .PanelSection .collapsible-menu .menu-title{padding-top:6px;padding-bottom:6px;font-weight:700;font-size:14px}.StylePicker .PanelSection .collapsible-menu .icon-container{position:absolute;right:0;display:flex;align-items:center;justify-content:center;text-align:center;min-width:28px;min-height:28px;border-radius:4px}.StylePicker .PanelSection .collapsible-menu .icon-container .Icon{height:18px;width:18px;color:var(--icon-color)}.StylePicker .PanelSection .collapsible-menu .icon-container:hover{background:var(--view-header-button-hover)}.StylePicker .PanelSection .divider{background-color:var(--divider);width:100%;height:1px;margin:16px 0}.StylePicker .PanelSection .menu-items .ColorPalette{margin-bottom:8px}.StylePicker .PanelSection .palette-controls .button-container{grid-gap:5px;gap:5px}.StylePicker .spacer{width:100%;margin-top:16px}.StylePicker .lineStyleContainer{margin-bottom:0}.StylePicker .lineStyleContainer .StylePicker-LineStyle{display:flex;flex-direction:row;grid-column-gap:8px;-moz-column-gap:8px;column-gap:8px;justify-content:space-between}.StylePicker .lineStyleContainer .StylePicker-LineStyle button.Dropdown{width:100%!important}.StylePicker .lineStyleContainer .StylePicker-LineStyle .Dropdown__items,.StylePicker .lineStyleContainer .StylePicker-LineStyle .Dropdown__wrapper{width:100%}.StylePicker .lineStyleContainer .StylePicker-LineStyle .linestyle-image svg{width:35px;margin-top:11px}.StylePicker .lineStyleContainer .StylePicker-LineStyle .linestyle-image.shift-alignment svg{margin-top:8px}.StylePicker .lineStyleContainer .StylePicker-LineStyle .Dropdown__items .linestyle-image svg{width:45px}.StylePicker .lineStyleContainer .StylePicker-LineStyle [data-element=middleLineStyleDropdown] .linestyle-image.shift-alignment{padding-top:0}.StylePicker .lineStyleContainer .StylePicker-LineStyle [data-element=middleLineStyleDropdown] .linestyle-image.shift-alignment svg{margin-top:11px}.StylePicker .lineStyleContainer .StylePicker-LineStyle [data-element=middleLineStyleDropdown] .Dropdown__items{top:-197px}.StylePicker .lineStyleContainer .StylePicker-LineStyle .StyleOptions{max-width:80px}.StylePicker .lineStyleContainer .StylePicker-LineStyle>*{flex-grow:1;flex-basis:0}.StylePicker .TextStyle>.collapsible-menu{margin-bottom:16px}\", \"\"]);\n\n// exports\n","import SnapModeToggle from './SnapModeToggle';\n\nexport default SnapModeToggle;","import React from 'react';\nimport { workerTypes } from 'constants/types';\nimport core from 'core';\nimport i18next from 'i18next';\nimport Choice from 'components/Choice/Choice';\nimport getMeasurementTools from 'helpers/getMeasurementTools';\nimport actions from 'actions';\nimport { useDispatch } from 'react-redux';\n\nconst SnapModeToggle = ({\n  Scale,\n  Precision,\n  isSnapModeEnabled,\n}) => {\n  const dispatch = useDispatch();\n\n  const wasDocumentSwappedToClientSide =\n    core.getDocument()?.getType() === workerTypes.WEBVIEWER_SERVER && core.getDocument().isWebViewerServerDocument();\n  const isEligibleDocumentForSnapping = core.getDocument()?.getType().toLowerCase() === workerTypes.PDF || wasDocumentSwappedToClientSide;\n  const showMeasurementSnappingOption = Scale && Precision && isEligibleDocumentForSnapping && core.isFullPDFEnabled();\n\n  const onSnappingChange = (event) => {\n    if (!core.isFullPDFEnabled()) {\n      return;\n    }\n\n    const enableSnapping = event.target.checked;\n    const mode = enableSnapping\n      ? core.getDocumentViewer().SnapMode.e_DefaultSnapMode | core.getDocumentViewer().SnapMode.POINT_ON_LINE\n      : null;\n    const measurementTools = getMeasurementTools();\n\n    measurementTools.forEach((tool) => {\n      tool.setSnapMode?.(mode);\n    });\n\n    dispatch(actions.setEnableSnapMode(enableSnapping));\n  };\n\n  return (\n    <>\n      {showMeasurementSnappingOption && (\n        <div className=\"snapping-option\">\n          <Choice\n            dataElement=\"measurementSnappingOption\"\n            id=\"measurement-snapping\"\n            type=\"checkbox\"\n            label={i18next.t('option.shared.enableSnapping')}\n            checked={isSnapModeEnabled}\n            onChange={onSnappingChange}\n          />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default SnapModeToggle;","\nimport core from 'core';\n\nconst Tools = window.Core.Tools;\n\nexport const shouldHideStylePanelOptions = (toolName) => {\n  const toolsNoStylePanelOptions = [\n    Tools.SignatureFormFieldCreateTool,\n    Tools.CheckBoxFormFieldCreateTool,\n    Tools.RadioButtonFormFieldCreateTool,\n  ];\n\n  return toolsNoStylePanelOptions.some((tool) => core.getTool(toolName) instanceof tool);\n};\n\nexport const hasFillColorAndCollapsablePanelSections = (toolName) => {\n  const toolsWithCollapsedStylePanels = [\n    Tools.RectangleCreateTool,\n    Tools.EllipseCreateTool,\n    Tools.PolygonCreateTool,\n    Tools.PolygonCloudCreateTool,\n    Tools.EllipseMeasurementCreateTool,\n    Tools.AreaMeasurementCreateTool,\n    Tools.FreeTextCreateTool,\n    Tools.CalloutCreateTool,\n  ];\n\n  return toolsWithCollapsedStylePanels.some((tool) => core.getTool(toolName) instanceof tool);\n};\n\nexport const shouldHideStrokeSlider = (toolName) => {\n  const toolsWithHiddenStrokeSlider = [\n    Tools.TextUnderlineCreateTool,\n    Tools.TextHighlightCreateTool,\n    Tools.TextSquigglyCreateTool,\n    Tools.TextStrikeoutCreateTool,\n    Tools.CountMeasurementCreateTool,\n    Tools.RubberStampCreateTool,\n  ];\n  return toolsWithHiddenStrokeSlider.some((tool) => core.getTool(toolName) instanceof tool);\n};\n\nexport const shouldTextStyle = (toolName) => {\n  const toolsWithHiddenStrokeSlider = [\n    Tools.FreeTextCreateTool,\n    Tools.CalloutCreateTool,\n  ];\n  return toolsWithHiddenStrokeSlider.some((tool) => core.getTool(toolName) instanceof tool);\n};\n\nexport const shouldHideOpacitySlider = (toolName) => {\n  const toolsWithHiddenOpacitySlider = [\n    Tools.TextFormFieldCreateTool,\n  ];\n  return toolsWithHiddenOpacitySlider.some((tool) => core.getTool(toolName) instanceof tool);\n};\n\nexport const hasSnapModeCheckbox = (toolName) => {\n  const toolsWithSnapModeCheckbox = [\n    Tools.DistanceMeasurementCreateTool,\n    Tools.ArcMeasurementCreateTool,\n    Tools.PerimeterMeasurementCreateTool,\n    Tools.AreaMeasurementCreateTool,\n    Tools.RectangularAreaMeasurementCreateTool,\n    Tools.CloudyRectangularAreaMeasurementCreateTool,\n  ];\n  return toolsWithSnapModeCheckbox.some((tool) => core.getTool(toolName) instanceof tool);\n};","import React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport './StylePicker.scss';\nimport ColorPicker from './ColorPicker';\nimport Slider from 'components/Slider';\nimport DataElements from 'constants/dataElement';\nimport { circleRadius } from 'constants/slider';\nimport Dropdown from '../Dropdown';\nimport { defaultStartLineStyles, defaultStrokeStyles, defaultEndLineStyles, cloudyStrokeStyle } from 'constants/strokeStyleIcons';\nimport Icon from 'components/Icon';\nimport SnapModeToggle from './SnapModeToggle';\nimport selectors from 'selectors';\nimport actions from 'actions';\nimport { hasFillColorAndCollapsablePanelSections, shouldHideStrokeSlider, shouldHideOpacitySlider, hasSnapModeCheckbox, shouldTextStyle } from 'helpers/stylePanelHelper';\nimport useOnFreeTextEdit from 'hooks/useOnFreeTextEdit';\nimport RichTextStyleEditor from '../RichTextStyleEditor';\n\n\nconst withCloudyStyle = defaultStrokeStyles.concat(cloudyStrokeStyle);\n\nconst propTypes = {\n  onStyleChange: PropTypes.func.isRequired,\n  style: PropTypes.object.isRequired,\n  sliderProperties: PropTypes.arrayOf(PropTypes.string),\n  isFreeText: PropTypes.bool,\n  isEllipse: PropTypes.bool,\n  isRedaction: PropTypes.bool,\n  isFreeHand: PropTypes.bool,\n  showLineStyleOptions: PropTypes.bool,\n  isArc: PropTypes.bool,\n  isInFormFieldCreationMode: PropTypes.bool,\n  startLineStyle: PropTypes.string,\n  endLineStyle: PropTypes.string,\n  strokeStyle: PropTypes.string,\n  onLineStyleChange: PropTypes.func,\n  toolName: PropTypes.string,\n  onFreeTextSizeToggle: PropTypes.func,\n  isFreeTextAutoSize: PropTypes.bool,\n  handleRichTextStyleChange: PropTypes.func,\n};\n\nconst MAX_STROKE_THICKNESS = 20;\n\nconst StylePicker = ({\n  onStyleChange,\n  style,\n  isFreeText,\n  isEllipse,\n  isRedaction,\n  isFreeHand,\n  showLineStyleOptions,\n  isArc,\n  isInFormFieldCreationMode,\n  startLineStyle,\n  endLineStyle,\n  strokeStyle,\n  onLineStyleChange,\n  toolName,\n  onFreeTextSizeToggle,\n  isFreeTextAutoSize,\n  handleRichTextStyleChange,\n}) => {\n  const [t] = useTranslation();\n  const dispatch = useDispatch();\n  const [strokeColor, setStrokeColor] = useState(style.StrokeColor);\n  const [startingLineStyle, setStartingLineStyle] = useState(startLineStyle);\n  const [endingLineStyle, setEndingLineStyle] = useState(endLineStyle);\n  const [strokeLineStyle, setStrokeLineStyle] = useState(strokeStyle);\n  const [fillColor, setFillColor] = useState(style.FillColor);\n\n  const showStrokeStyle = true;\n  const showFillColorAndCollapsablePanelSections = hasFillColorAndCollapsablePanelSections(toolName);\n  const hideStrokeSlider = shouldHideStrokeSlider(toolName);\n  const showSnapModeCheckbox = hasSnapModeCheckbox(toolName);\n  const showTextStyle = shouldTextStyle(toolName);\n\n  useEffect(() => {\n    if (showFillColorAndCollapsablePanelSections) {\n      if (showTextStyle) {\n        dispatch(actions.openElement(DataElements.RICH_TEXT_STYLE_CONTAINER));\n      } else {\n        dispatch(actions.openElement(DataElements.STROKE_STYLE_CONTAINER));\n      }\n    }\n  }, [toolName]);\n\n  useEffect(() => {\n    setStrokeColor(style.StrokeColor);\n    setFillColor(style.FillColor);\n  }, [strokeColor, fillColor, style]);\n\n  useEffect(() => {\n    setStrokeColor(style.StrokeColor);\n    setStartingLineStyle(startLineStyle);\n    setStrokeLineStyle(strokeStyle);\n    setEndingLineStyle(endLineStyle);\n  }, [startLineStyle, endLineStyle, strokeStyle]);\n\n  const onStrokeColorChange = (color) => {\n    onStyleChange?.('StrokeColor', color);\n    setStrokeColor(color);\n  };\n\n  const onStartLineStyleChange = (style) => {\n    onLineStyleChange?.('start', style);\n    setStartingLineStyle(style);\n  };\n\n  const onStrokeStyleChange = (style, value) => {\n    if (value) {\n      onLineStyleChange?.(style, value);\n      setStrokeLineStyle(value);\n    } else {\n      onLineStyleChange?.('middle', style);\n      setStrokeLineStyle(style);\n    }\n  };\n\n  const onEndLineStyleChange = (style) => {\n    onLineStyleChange?.('end', style);\n    setEndingLineStyle(style);\n  };\n\n  const onFillColorChange = (color) => {\n    onStyleChange?.('FillColor', color);\n    setFillColor(color);\n  };\n\n  const onSliderChange = (property, value) => {\n    onStyleChange?.(property, value);\n  };\n\n  // We do not have sliders to show up for redaction annots\n  if (isRedaction) {\n    style.Opacity = null;\n    style.StrokeThickness = null;\n  }\n\n  const [\n    isSnapModeEnabled,\n    isStyleOptionDisabled,\n    isStrokeStyleContainerActive,\n    isFillColorContainerActive,\n    isOpacityContainerActive,\n    isTextStyleContainerActive,\n  ] = useSelector((state) => [\n    selectors.isSnapModeEnabled(state),\n    selectors.isElementDisabled(state, DataElements.STYLE_OPTION),\n    selectors.isElementOpen(state, DataElements.STROKE_STYLE_CONTAINER),\n    selectors.isElementOpen(state, DataElements.FILL_COLOR_CONTAINER),\n    selectors.isElementOpen(state, DataElements.OPACITY_CONTAINER),\n    selectors.isElementOpen(state, DataElements.RICH_TEXT_STYLE_CONTAINER),\n  ]);\n\n  const panelItems = {\n    [DataElements.STROKE_STYLE_CONTAINER]: isStrokeStyleContainerActive,\n    [DataElements.FILL_COLOR_CONTAINER]: isFillColorContainerActive,\n    [DataElements.OPACITY_CONTAINER]: isOpacityContainerActive,\n    [DataElements.RICH_TEXT_STYLE_CONTAINER]: isTextStyleContainerActive,\n  };\n\n  const togglePanelItem = (dataElement) => {\n    if (!panelItems[dataElement]) {\n      dispatch(actions.openElement(dataElement));\n    } else {\n      dispatch(actions.closeElement(dataElement));\n    }\n  };\n  const openTextStyleContainer = () => {\n    dispatch(actions.openElements(DataElements.RICH_TEXT_EDITOR));\n    togglePanelItem(DataElements.RICH_TEXT_STYLE_CONTAINER);\n  };\n  const openStrokeStyleContainer = () => togglePanelItem(DataElements.STROKE_STYLE_CONTAINER);\n  const openFillColorContainer = () => togglePanelItem(DataElements.FILL_COLOR_CONTAINER);\n  const openOpacityContainer = () => togglePanelItem(DataElements.OPACITY_CONTAINER);\n\n  const getSliderProps = (type) => {\n    const { Opacity, StrokeThickness } = style;\n\n    const lineStart = circleRadius;\n    switch (type.toLowerCase()) {\n      case 'opacity':\n        if (Opacity === null) {\n          return null;\n        }\n        return {\n          property: 'Opacity',\n          displayProperty: 'opacity',\n          value: Opacity,\n          getDisplayValue: (Opacity) => `${Math.round(Opacity * 100)}%`,\n          dataElement: DataElements.OPACITY_SLIDER,\n          getCirclePosition: (lineLength, Opacity) => Opacity * lineLength + lineStart,\n          convertRelativeCirclePositionToValue: (circlePosition) => circlePosition,\n          withInputField: true,\n          inputFieldType: 'number',\n          min: 0,\n          max: 100,\n          step: 1,\n          getLocalValue: (opacity) => parseInt(opacity) / 100,\n        };\n      case 'strokethickness':\n        if (StrokeThickness === null) {\n          return null;\n        }\n        return {\n          property: 'StrokeThickness',\n          displayProperty: 'thickness',\n          value: StrokeThickness,\n          getDisplayValue: (strokeThickness) => {\n            const placeOfDecimal =\n              Math.floor(strokeThickness) !== strokeThickness\n                ? strokeThickness?.toString().split('.')[1].length || 0\n                : 0;\n            if (StrokeThickness === 0 || (StrokeThickness >= 1 && (placeOfDecimal > 2 || placeOfDecimal === 0))) {\n              return `${Math.round(strokeThickness)}pt`;\n            }\n            return `${parseFloat(strokeThickness).toFixed(2)}pt`;\n          },\n          dataElement: DataElements.STROKE_THICKNESS_SLIDER,\n          getCirclePosition: (lineLength, strokeThickness) => (strokeThickness / MAX_STROKE_THICKNESS) * lineLength + lineStart,\n          convertRelativeCirclePositionToValue: (circlePosition) => {\n            if (circlePosition >= 1 / MAX_STROKE_THICKNESS) {\n              return Math.round(circlePosition * MAX_STROKE_THICKNESS);\n            }\n            if (circlePosition >= 0.75 / MAX_STROKE_THICKNESS && circlePosition < 1 / MAX_STROKE_THICKNESS) {\n              return 0.75;\n            }\n            if (circlePosition >= 0.5 / MAX_STROKE_THICKNESS && circlePosition < 0.75 / MAX_STROKE_THICKNESS) {\n              return 0.5;\n            }\n            if (circlePosition >= 0.25 / MAX_STROKE_THICKNESS && circlePosition < 0.5 / MAX_STROKE_THICKNESS) {\n              return 0.25;\n            }\n            if (circlePosition >= 0.08 / MAX_STROKE_THICKNESS && circlePosition < 0.25 / MAX_STROKE_THICKNESS) {\n              return 0.1;\n            }\n            return isFreeText ? 0 : 0.1;\n          },\n          withInputField: true,\n          inputFieldType: 'number',\n          min: isFreeText ? 0 : 0.1,\n          max: MAX_STROKE_THICKNESS,\n          step: 1,\n          getLocalValue: (strokeThickness) => parseFloat(strokeThickness).toFixed(2),\n        };\n    }\n  };\n\n  const renderSlider = (property, shouldHideSliderTitle) => {\n    const sliderProps = getSliderProps(property);\n    if (!sliderProps) {\n      return null;\n    }\n    return (\n      <Slider\n        key={property}\n        {...sliderProps}\n        onStyleChange={onSliderChange}\n        onSliderChange={onSliderChange}\n        shouldHideSliderTitle={shouldHideSliderTitle}\n      />\n    );\n  };\n\n  const renderDivider = () => {\n    if (showFillColorAndCollapsablePanelSections) {\n      return <div className=\"divider\" />;\n    }\n  };\n\n  const onOpenProps = useOnFreeTextEdit();\n\n  return (\n    <div className=\"StylePicker\"\n      onMouseDown={(e) => {\n        if (e.type !== 'touchstart') {\n          e.preventDefault();\n        }\n      }}\n    >\n      {showTextStyle && (\n        <div className=\"PanelSection TextStyle\">\n          <div className=\"collapsible-menu\"\n            onClick={openTextStyleContainer}\n            onTouchStart={openTextStyleContainer}\n            tabIndex={0}\n            onKeyDown={(e) => e.key === 'Enter' && openTextStyleContainer()} role={'toolbar'}\n          >\n            <div className=\"menu-title\">\n              {t('option.stylePopup.textStyle')}\n            </div>\n            <div className=\"icon-container\">\n              <Icon glyph={`icon-chevron-${isTextStyleContainerActive ? 'up' : 'down'}`} />\n            </div>\n          </div>\n          {(isTextStyleContainerActive) && (\n            <RichTextStyleEditor\n              style={style}\n              {...onOpenProps}\n              property={'TextColor'}\n              colorMapKey={'freeText'}\n              isFreeTextAutoSize={isFreeTextAutoSize}\n              onFreeTextSizeToggle={onFreeTextSizeToggle}\n              onPropertyChange={onStyleChange}\n              onRichTextStyleChange={handleRichTextStyleChange}\n            />\n          )}\n          {renderDivider()}\n        </div>\n      )}\n\n      {showStrokeStyle && (\n        <div className=\"PanelSection\">\n          {showFillColorAndCollapsablePanelSections && (\n            <div\n              className=\"collapsible-menu StrokeColorPicker\"\n              onClick={openStrokeStyleContainer}\n              onTouchStart={openStrokeStyleContainer}\n              tabIndex={0}\n              onKeyDown={(e) => e.key === 'Enter' && openStrokeStyleContainer()}\n              role={'toolbar'}\n            >\n              <div className=\"menu-title\">{t('option.annotationColor.StrokeColor')}</div>\n              <div className=\"icon-container\">\n                <Icon glyph={`icon-chevron-${isStrokeStyleContainerActive ? 'up' : 'down'}`} />\n              </div>\n            </div>\n          )}\n          {(isStrokeStyleContainerActive || !showFillColorAndCollapsablePanelSections) && (\n            <>\n              <div className=\"menu-items\">\n                <ColorPicker onColorChange={onStrokeColorChange} onStyleChange={onStyleChange} color={strokeColor} />\n              </div>\n              {!hideStrokeSlider && <div className=\"StyleOption\">{renderSlider('strokethickness')}</div>}\n              {/*\n                When showLineStyleOptions is true, we want to show the opacity slider together with the stroke slider\n              */}\n              {showLineStyleOptions && <div className=\"StyleOption\">{renderSlider('opacity')}</div>}\n              {!!strokeStyle && !(isInFormFieldCreationMode && !isFreeText) && !isFreeHand && !isArc && (\n                <div className=\"StyleOption\">\n                  <div className=\"styles-container lineStyleContainer\">\n                    <div className=\"styles-title\">Style</div>\n                    <div className=\"StylePicker-LineStyle\">\n                      {showLineStyleOptions && (\n                        <Dropdown\n                          className=\"StylePicker-StartLineStyleDropdown\"\n                          dataElement=\"startLineStyleDropdown\"\n                          images={defaultStartLineStyles}\n                          onClickItem={onStartLineStyleChange}\n                          currentSelectionKey={startingLineStyle}\n                        />\n                      )}\n                      {!isStyleOptionDisabled && (\n                        <Dropdown\n                          className={`StylePicker-StrokeLineStyleDropdown${\n                            !!strokeStyle && !showLineStyleOptions ? ' StyleOptions' : ''\n                          }`}\n                          dataElement=\"middleLineStyleDropdown\"\n                          images={isEllipse || showLineStyleOptions ? defaultStrokeStyles : withCloudyStyle}\n                          onClickItem={onStrokeStyleChange}\n                          currentSelectionKey={strokeLineStyle}\n                        />\n                      )}\n                      {showLineStyleOptions && (\n                        <Dropdown\n                          className=\"StylePicker-EndLineStyleDropdown\"\n                          dataElement=\"endLineStyleDropdown\"\n                          images={defaultEndLineStyles}\n                          onClickItem={onEndLineStyleChange}\n                          currentSelectionKey={endingLineStyle}\n                        />\n                      )}\n                    </div>\n                  </div>\n                </div>\n              )}\n            </>\n          )}\n          {renderDivider()}\n        </div>\n      )}\n      {showFillColorAndCollapsablePanelSections && (\n        <div className=\"PanelSection\">\n          <div\n            className=\"collapsible-menu FillColorPicker\"\n            onClick={openFillColorContainer}\n            onTouchStart={openFillColorContainer}\n            tabIndex={0}\n            onKeyDown={(e) => e.key === 'Enter' && openFillColorContainer()}\n            role={'toolbar'}\n          >\n            <div className=\"menu-title\">{t('option.annotationColor.FillColor')}</div>\n            <div className=\"icon-container\">\n              <Icon glyph={`icon-chevron-${isFillColorContainerActive ? 'up' : 'down'}`} />\n            </div>\n          </div>\n          {isFillColorContainerActive && (\n            <div className=\"menu-items\">\n              <ColorPicker\n                onColorChange={onFillColorChange}\n                onStyleChange={onStyleChange}\n                color={fillColor}\n                hasTransparentColor={true}\n              />\n            </div>\n          )}\n          {!shouldHideOpacitySlider(toolName) && renderDivider()}\n        </div>\n      )}\n\n      <div className=\"PanelSection\">\n        {showFillColorAndCollapsablePanelSections && !shouldHideOpacitySlider(toolName) && (\n          <div\n            className=\"collapsible-menu StrokeColorPicker\"\n            onClick={openOpacityContainer}\n            onTouchStart={openOpacityContainer}\n            tabIndex={0}\n            onKeyDown={(e) => e.key === 'Enter' && openOpacityContainer()}\n            role={'toolbar'}\n          >\n            <div className=\"menu-title\">{t('option.slider.opacity')}</div>\n            <div className=\"icon-container\">\n              <Icon glyph={`icon-chevron-${isOpacityContainerActive ? 'up' : 'down'}`} />\n            </div>\n          </div>\n        )}\n        {/*\n          If showLineStyleOptions is true, then we don't want to show the opacity slider\n          in the bottom because it is already shown before together with the stroke slider\n        */}\n        {!showLineStyleOptions && (isOpacityContainerActive || !showFillColorAndCollapsablePanelSections) && (\n          <div className=\"StyleOption\">{renderSlider('opacity', showFillColorAndCollapsablePanelSections)}</div>\n        )}\n        {showSnapModeCheckbox && renderDivider()}\n      </div>\n      {showSnapModeCheckbox && (\n        <>\n          {/* to avoid inline styling when there's no divider */}\n          {!showFillColorAndCollapsablePanelSections && <div className=\"spacer\" />}\n          <div className=\"PanelSection\">\n            <SnapModeToggle Scale={style.Scale} Precision={style.Precision} isSnapModeEnabled={isSnapModeEnabled} />\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nStylePicker.propTypes = propTypes;\n\nexport default StylePicker;","import StylePicker from './StylePicker';\n\nexport default StylePicker;","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport selectors from 'selectors';\nimport Icon from 'components/Icon';\nimport StylePicker from 'components/StylePicker';\nimport getAnnotationCreateToolNames from 'helpers/getAnnotationCreateToolNames';\nimport { hexToRGBA } from 'helpers/color';\nimport getToolStyles from 'helpers/getToolStyles';\nimport setToolStyles from 'helpers/setToolStyles';\nimport core from 'core';\nimport { getDataWithKey, mapToolNameToKey } from 'constants/map';\nimport handleFreeTextAutoSizeToggle from 'helpers/handleFreeTextAutoSizeToggle';\nimport getTextDecoration from 'helpers/getTextDecoration';\nimport { shouldHideStylePanelOptions } from 'helpers/stylePanelHelper';\n\nconst StylePanel = () => {\n  const [t] = useTranslation();\n\n  const [\n    isPanelOpen,\n    toolButtonObject,\n    isAnnotationToolStyleSyncingEnabled,\n    activeDocumentViewerKey,\n  ] = useSelector((state) => [\n    selectors.isElementOpen(state, 'stylePanel'),\n    selectors.getToolButtonObjects(state),\n    selectors.isAnnotationToolStyleSyncingEnabled(state),\n    selectors.getActiveDocumentViewerKey(state),\n  ]);\n\n  const colorProperties = ['StrokeColor', 'FillColor'];\n  const [showPanel, setShowPanel] = useState(false);\n  const [noToolStyle, setNoToolStyle] = useState(false);\n  const [selectedAnnotation, setSelectedAnnotation] = useState(null);\n  const [isEllipse, setIsEllipse] = useState(false);\n  const [isFreeText, setIsFreeText] = useState(false);\n  const [isRedaction, setIsRedaction] = useState(false);\n  const [isFreeHand, setIsFreeHand] = useState(false);\n  const [isArc, setIsArc] = useState(false);\n  const [isInFormFieldCreationMode, setIsInFormFieldCreationMode] = useState(false);\n  const [style, setStyle] = useState({});\n  const [startLineStyle, setStartLineStyle] = useState();\n  const [endLineStyle, setEndLineStyle] = useState();\n  const [strokeStyle, setStrokeStyle] = useState();\n  const [panelTitle, setPanelTitle] = useState(t('stylePanel.headings.styles'));\n  const annotationCreateToolNames = getAnnotationCreateToolNames();\n  const [showLineStyleOptions, setShowLineStyleOptions] = useState(false);\n  const [isAutoSizeFont, setIsAutoSizeFont] = useState(style.isAutoSizeFont);\n\n  const getStrokeStyle = (annot) => {\n    const style = annot['Style'];\n    const dashes = annot['Dashes'];\n    if (style !== 'dash') {\n      return style;\n    }\n    return `${style},${dashes}`;\n  };\n\n  useEffect(() => {\n    if (!selectedAnnotation && showPanel) {\n      const title = toolButtonObject[core.getToolMode().name].title;\n      setPanelTitle(`${t(title)} ${t('stylePanel.headings.tool')}`);\n    }\n  });\n\n  useEffect(() => {\n    const onAnnotationSelected = (annotations, action) => {\n      if (action === 'selected') {\n        // We only consider the styles for the style panel if only one annotation is selected\n        if (annotations.length === 1) {\n          setSelectedAnnotation(annotations[0]);\n          setPanelTitle(`${t(toolButtonObject[annotations[0].ToolName].title)} ${t('stylePanel.headings.annotation')}`);\n          if (shouldHideStylePanelOptions(annotations[0].ToolName)) {\n            setNoToolStyle(true);\n            return;\n          }\n          setNoToolStyle(false);\n\n          setIsEllipse(annotations[0] instanceof window.Core.Annotations.EllipseAnnotation);\n          setIsFreeText(annotations[0] instanceof window.Core.Annotations.FreeTextAnnotation);\n          setIsRedaction(annotations[0] instanceof window.Core.Annotations.RedactionAnnotation);\n          setIsFreeHand(annotations[0] instanceof window.Core.Annotations.FreeHandAnnotation);\n          setIsArc(annotations[0] instanceof window.Core.Annotations.ArcAnnotation);\n          setIsInFormFieldCreationMode(core.getFormFieldCreationManager().isInFormFieldCreationMode());\n          setShowLineStyleOptions(getDataWithKey(mapToolNameToKey(annotations[0].ToolName)).hasLineEndings);\n        } else {\n          setPanelTitle(`${t('stylePanel.headings.annotations')} (${annotations.length})`);\n        }\n        setShowPanel(true);\n      } else if (action === 'deselected') {\n        const currentTool = core.getToolMode();\n        if (currentTool instanceof window.Core.Tools.AnnotationEditTool) {\n          setShowPanel(false);\n        }\n        // reset tool mode to change the tool name in the header\n        core.setToolMode(currentTool.name);\n        setSelectedAnnotation(null);\n      }\n    };\n\n    const handleToolModeChange = (newTool) => {\n      if (annotationCreateToolNames.includes(newTool?.name)) {\n        if (!panelTitle) {\n          setShowPanel(false);\n        } else {\n          if (shouldHideStylePanelOptions(newTool?.name)) {\n            setNoToolStyle(true);\n            setShowPanel(true);\n            return;\n          }\n          setNoToolStyle(false);\n\n          setShowLineStyleOptions(getDataWithKey(mapToolNameToKey(newTool.name)).hasLineEndings);\n\n          setIsEllipse(newTool.name === window.Core.Tools.ToolNames.ELLIPSE);\n          setIsFreeText(newTool.name === window.Core.Tools.ToolNames.FREE_TEXT);\n          setIsRedaction(newTool.name === window.Core.Tools.ToolNames.REDACTION);\n          setIsFreeHand(\n            newTool.name === window.Core.Tools.ToolNames.FREEHAND ||\n              newTool.name === window.Core.Tools.ToolNames.FREEHAND_HIGHLIGHT,\n          );\n          setIsArc(newTool.name === window.Core.Tools.ToolNames.ARC);\n          setIsInFormFieldCreationMode(core.getFormFieldCreationManager().isInFormFieldCreationMode());\n          const toolStyles = getToolStyles(newTool.name);\n\n          if (newTool.name.includes('FreeText') || newTool.name.includes('Callout')) {\n            toolStyles['isAutoSizeFont'] = newTool['defaults']['isAutoSizeFont'];\n            setIsAutoSizeFont(newTool['defaults']['isAutoSizeFont']);\n          }\n\n          setStyle(toolStyles);\n          setStartLineStyle(toolStyles.StartLineStyle);\n          setStrokeStyle(toolStyles.StrokeStyle);\n          setEndLineStyle(toolStyles.EndLineStyle);\n          setShowPanel(true);\n        }\n      } else {\n        setShowPanel(false);\n      }\n    };\n\n    core.addEventListener('annotationSelected', onAnnotationSelected);\n    core.addEventListener('toolModeUpdated', handleToolModeChange);\n    return () => {\n      core.removeEventListener('annotationSelected', onAnnotationSelected);\n      core.removeEventListener('toolModeUpdated', handleToolModeChange);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (isPanelOpen) {\n      if (selectedAnnotation) {\n        const annot = selectedAnnotation;\n        const extraStyles = {};\n\n        if (annot instanceof window.Core.Annotations.FreeTextAnnotation) {\n          let StrokeStyle = 'solid';\n          try {\n            StrokeStyle = (annot['Style'] === 'dash')\n              ? `${annot['Style']},${annot['Dashes']}`\n              : annot['Style'];\n          } catch (err) {\n            console.error(err);\n          }\n          extraStyles['TextColor'] = annot.TextColor;\n          extraStyles['RichTextStyle'] = annot.getRichTextStyle();\n          extraStyles['Font'] = annot.Font;\n          extraStyles['FontSize'] = annot.FontSize;\n          extraStyles['TextAlign'] = annot.TextAlign;\n          extraStyles['TextVerticalAlign'] = annot.TextVerticalAlign;\n          extraStyles['calculatedFontSize'] = annot.getCalculatedFontSize();\n          extraStyles['StrokeStyle'] = StrokeStyle;\n          extraStyles['isAutoSizeFont'] = annot.isAutoSizeFont();\n          setIsAutoSizeFont(annot.isAutoSizeFont());\n        }\n\n        setStyle({\n          ...style,\n          StrokeColor: annot.StrokeColor,\n          StrokeThickness: annot.StrokeThickness,\n          Opacity: annot.Opacity,\n          FillColor: annot.FillColor,\n          ...extraStyles,\n        });\n        setStartLineStyle(annot.getStartStyle ? annot.getStartStyle() : 'None');\n        setEndLineStyle(annot.getEndStyle ? annot.getEndStyle() : 'None');\n        setStrokeStyle(getStrokeStyle(annot));\n      } else {\n        const currentTool = core.getToolMode();\n        if (currentTool) {\n          const toolStyles = getToolStyles(currentTool.name);\n          if (toolStyles) {\n            setStyle(toolStyles);\n            setStartLineStyle(toolStyles.StartLineStyle);\n            setEndLineStyle(toolStyles.EndLineStyle);\n            setStrokeStyle(toolStyles.StrokeStyle);\n          }\n        }\n      }\n    }\n  }, [isPanelOpen, selectedAnnotation]);\n\n  const onStyleChange = (property, value) => {\n    const newStyle = { ...style };\n    newStyle[property] = value;\n    setStyle(newStyle);\n\n    const annotationsToUpdate = core.getSelectedAnnotations();\n    if (annotationsToUpdate.length > 0) {\n      annotationsToUpdate.forEach((annot) => {\n        if (colorProperties.includes(property)) {\n          const colorRGB = hexToRGBA(value);\n          const color = new window.Core.Annotations.Color(colorRGB.r, colorRGB.g, colorRGB.b, colorRGB.a);\n          annot[property] = color;\n          if (isAnnotationToolStyleSyncingEnabled) {\n            setToolStyles(annot.ToolName, property, color);\n          }\n        } else {\n          annot[property] = value;\n          if (isAnnotationToolStyleSyncingEnabled) {\n            setToolStyles(annot.ToolName, property, value);\n          }\n        }\n        core.getAnnotationManager().redrawAnnotation(annot);\n      });\n    } else {\n      const currentTool = core.getToolMode();\n      if (currentTool) {\n        if (colorProperties.includes(property)) {\n          const colorRGB = hexToRGBA(value);\n          const color = new window.Core.Annotations.Color(colorRGB.r, colorRGB.g, colorRGB.b, colorRGB.a);\n          setToolStyles(currentTool.name, property, color);\n        } else if (property === 'Opacity') {\n          setToolStyles(currentTool.name, 'Opacity', value);\n        } else if (property === 'StrokeThickness') {\n          setToolStyles(currentTool.name, 'StrokeThickness', value);\n        } else {\n          setToolStyles(currentTool.name, property, value);\n        }\n      }\n    }\n\n    if (property === 'FillColor' && selectedAnnotation instanceof window.Core.Annotations.FreeTextAnnotation) {\n      const editor = selectedAnnotation.getEditor();\n      if (editor?.hasFocus()) {\n        editor.setStyle({ background: value });\n      }\n    }\n  };\n\n  const onLineStyleChange = (section, value) => {\n    const sectionPropertyMap = {\n      start: 'StartLineStyle',\n      middle: 'StrokeStyle',\n      end: 'EndLineStyle',\n    };\n    if (section === 'start') {\n      setStartLineStyle(value);\n    } else if (section === 'middle') {\n      setStrokeStyle(value);\n    } else if (section === 'end') {\n      setEndLineStyle(value);\n    }\n    const annotationsToUpdate = core.getSelectedAnnotations();\n    if (annotationsToUpdate.length > 0) {\n      annotationsToUpdate.forEach((annot) => {\n        if (section === 'start') {\n          annot.setStartStyle(value);\n        } else if (section === 'middle') {\n          const dashes = value.split(',');\n          const lineStyle = dashes.shift();\n          annot.Style = lineStyle;\n          annot.Dashes = dashes;\n        } else if (section === 'end') {\n          annot.setEndStyle(value);\n        }\n        core.getAnnotationManager().redrawAnnotation(annot);\n        if (isAnnotationToolStyleSyncingEnabled) {\n          setToolStyles(annot.ToolName, sectionPropertyMap[section], value);\n        }\n      });\n    } else {\n      const currentTool = core.getToolMode();\n      if (currentTool) {\n        setToolStyles(currentTool.name, sectionPropertyMap[section], value);\n      }\n    }\n  };\n  const handleAutoSize = () => {\n    if (selectedAnnotation) {\n      handleFreeTextAutoSizeToggle(selectedAnnotation, setIsAutoSizeFont, isAutoSizeFont);\n    } else {\n      const currentTool = core.getToolMode();\n      if (currentTool) {\n        setToolStyles(currentTool.name, 'isAutoSizeFont', !style.isAutoSizeFont);\n        setIsAutoSizeFont(!isAutoSizeFont);\n      }\n    }\n  };\n\n  const noToolSelected = (\n    <>\n      <div className='style-panel-header'>\n        {t('stylePanel.headings.styles')}\n      </div>\n      <div className=\"no-tool-selected\">\n        <div>\n          <Icon className=\"empty-icon\" glyph=\"style-panel-no-tool-selected\" />\n        </div>\n        <div className=\"msg\">{t('stylePanel.noToolSelected')}</div>\n      </div>\n    </>\n  );\n\n  const handleRichTextStyleChange = (property, value) => {\n    const originalProperty = property;\n    const originalValue = value;\n    const activeToolRichTextStyle = style['RichTextStyle'][0];\n    if (property === 'underline' || property === 'line-through') {\n      value = getTextDecoration({ [property]: value }, activeToolRichTextStyle);\n      property = 'text-decoration';\n    }\n    const richTextStyle = {\n      0: {\n        ...activeToolRichTextStyle,\n        [property]: value,\n      }\n    };\n\n    const annotationsToUpdate = core.getSelectedAnnotations();\n    if (annotationsToUpdate.length > 0) {\n      annotationsToUpdate.forEach((annotation) => {\n        core.updateAnnotationRichTextStyle(annotation, { [originalProperty]: originalValue }, activeDocumentViewerKey);\n      });\n      setStyle({ ...style, 'RichTextStyle': richTextStyle });\n    } else {\n      const currentTool = core.getToolMode();\n      if (currentTool) {\n        if (typeof currentTool.complete === 'function') {\n          currentTool.complete();\n        }\n        setToolStyles(currentTool.name, 'RichTextStyle', richTextStyle);\n      }\n    }\n  };\n\n  return !showPanel ? (\n    noToolSelected\n  ) : (\n    <>\n      <div className=\"style-panel-header\">{panelTitle}</div>\n      {noToolStyle ? (\n        <div className=\"no-tool-selected\">\n          <div>\n            <Icon className=\"empty-icon\" glyph=\"style-panel-no-tool-selected\" />\n          </div>\n          <div className=\"msg\">{t('stylePanel.noToolStyle')}</div>\n        </div>\n      ) : (\n        <StylePicker\n          sliderProperties={['Opacity', 'StrokeThickness']}\n          style={style}\n          onStyleChange={onStyleChange}\n          isFreeText={isFreeText}\n          isEllipse={isEllipse}\n          isRedaction={isRedaction}\n          isFreeHand={isFreeHand}\n          isArc={isArc}\n          isInFormFieldCreationMode={isInFormFieldCreationMode}\n          showLineStyleOptions={showLineStyleOptions}\n          startLineStyle={startLineStyle}\n          endLineStyle={endLineStyle}\n          strokeStyle={strokeStyle}\n          onLineStyleChange={onLineStyleChange}\n          toolName={selectedAnnotation?.ToolName || core.getToolMode()?.name}\n          onFreeTextSizeToggle={handleAutoSize}\n          isFreeTextAutoSize={isAutoSizeFont}\n          handleRichTextStyleChange={handleRichTextStyleChange}\n        />\n      )}\n    </>\n  );\n};\n\nexport default StylePanel;","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../../node_modules/sass-loader/dist/cjs.js!./StylePanel.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                function findNestedWebComponents(tagName, root = document) {\n                  const elements = [];\n\n                  // Check direct children\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\n\n                  // Check shadow DOMs\n                  root.querySelectorAll('*').forEach(el => {\n                    if (el.shadowRoot) {\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\n                    }\n                  });\n\n                  return elements;\n                }\n                if (!window.isApryseWebViewerWebComponent) {\n                  document.head.appendChild(styleTag);\n                  return;\n                }\n\n                let webComponents;\n                // First we see if the webcomponent is at the document level\n                webComponents = document.getElementsByTagName('apryse-webviewer');\n                // If not, we check have to check if it is nested in another webcomponent\n                if (!webComponents.length) {\n                  webComponents = findNestedWebComponents('apryse-webviewer');\n                }\n                // Now we append the style tag to each webcomponent\n                const clonedStyleTags = [];\n                for (let i = 0; i < webComponents.length; i++) {\n                  const webComponent = webComponents[i];\n                  if (i === 0) {\n                    webComponent.shadowRoot.appendChild(styleTag);\n                    styleTag.onload = function () {\n                      if (clonedStyleTags.length > 0) {\n                        clonedStyleTags.forEach((styleNode) => {\n                          // eslint-disable-next-line no-unsanitized/property\n                          styleNode.innerHTML = styleTag.innerHTML;\n                        });\n                      }\n                    };\n                  } else {\n                    const styleNode = styleTag.cloneNode(true);\n                    webComponent.shadowRoot.appendChild(styleNode);\n                    clonedStyleTags.push(styleNode);\n                  }\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}.StylePanel{display:flex;flex-direction:column;background-color:var(--panel-background);padding-bottom:75px}.StylePanel .style-panel-header{font-size:16px;font-weight:700}.StylePanel .label{padding-top:16px;font-size:14px;font-weight:700}.StylePanel .no-tool-selected{padding-top:36px;display:flex;flex-direction:column;align-items:center;flex:1 1 auto}.StylePanel .no-tool-selected .msg{padding-top:24px;font-size:14px;text-align:center}@media(min-width:641px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .StylePanel .no-tool-selected .msg{line-height:15px;width:146px}}@container (min-width: 641px){.App.is-web-component:not(.is-in-desktop-only-mode) .StylePanel .no-tool-selected .msg{line-height:15px;width:146px}}.StylePanel .no-tool-selected .empty-icon,.StylePanel .no-tool-selected .empty-icon svg{width:55px;height:56px}.StylePanel .no-tool-selected .empty-icon *{fill:var(--gray-5);color:var(--gray-5)}\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};","import React from 'react';\nimport StylePanel from './StylePanel';\nimport DataElementWrapper from '../DataElementWrapper';\nimport './StylePanel.scss';\n\nconst StylePanelContainer = () => {\n  return (\n    <DataElementWrapper dataElement=\"stylePanel\" className=\"Panel StylePanel\">\n      <StylePanel />\n    </DataElementWrapper>\n  );\n};\n\nexport default StylePanelContainer;","import StylePanelContainer from './StylePanelContainer';\n\nexport default StylePanelContainer;"],"sourceRoot":""}