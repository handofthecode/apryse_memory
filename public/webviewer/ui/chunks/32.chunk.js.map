{"version":3,"sources":["webpack:///./src/ui/src/components/LeftPanelPageTabs/LeftPanelPageTabs/LeftPanelPageTabsContainer.scss?1596","webpack:///./src/ui/src/components/ThumbnailControls/ThumbnailControls.scss?b6c7","webpack:///./src/ui/src/components/ThumbnailControls/ThumbnailControls.scss","webpack:///./src/ui/src/components/Thumbnail/Thumbnail.scss?24bb","webpack:///./src/ui/src/components/Thumbnail/Thumbnail.scss","webpack:///./src/ui/src/components/LeftPanelPageTabs/LeftPanelPageTabs/LeftPanelPageTabsContainer.scss","webpack:///./src/ui/src/components/DocumentControls/DocumentControls.scss?a520","webpack:///./src/ui/src/components/DocumentControls/DocumentControls.scss","webpack:///./src/ui/src/components/ThumbnailsPanel/ThumbnailsPanel.scss?1157","webpack:///./src/ui/src/components/ThumbnailsPanel/ThumbnailsPanel.scss","webpack:///./src/ui/src/components/PageManipulationOverlayButton/PageManipulationOverlayButtonContainer.js","webpack:///./src/ui/src/components/PageManipulationOverlayButton/index.js","webpack:///./src/ui/src/components/ThumbnailControls/ThumbnailControls.js","webpack:///./src/ui/src/components/ThumbnailControls/index.js","webpack:///./src/ui/src/components/Thumbnail/Thumbnail.js","webpack:///./src/ui/src/components/Thumbnail/ThumbnailRedux.js","webpack:///./src/ui/src/components/Thumbnail/index.js","webpack:///./src/ui/src/components/LeftPanelPageTabs/LeftPanelPageTabsMoreSmall/LeftPanelPageTabsMoreSmall.js","webpack:///./src/ui/src/components/LeftPanelPageTabs/LeftPanelPageTabsInsertSmall/LeftPanelPageTabsInsertSmall.js","webpack:///./src/ui/src/components/LeftPanelPageTabs/CustomLeftPanelOperations/CustomLeftPanelOperations.js","webpack:///./src/ui/src/components/LeftPanelPageTabs/LeftPanelPageTabsRotate/LeftPanelPageTabsRotate.js","webpack:///./src/ui/src/components/LeftPanelPageTabs/LeftPanelPageTabsSmall/LeftPanelPageTabsSmall.js","webpack:///./src/ui/src/components/LeftPanelPageTabs/LeftPanelPageTabsMore/LeftPanelPageTabsMore.js","webpack:///./src/ui/src/components/LeftPanelPageTabs/LeftPanelPageTabsMove/LeftPanelPageTabsMove.js","webpack:///./src/ui/src/components/LeftPanelPageTabs/LeftPanelPageTabs/LeftPanelPageTabs.js","webpack:///./src/ui/src/components/LeftPanelPageTabs/LeftPanelPageTabsInsert/LeftPanelPageTabsInsert.js","webpack:///./src/ui/src/components/LeftPanelPageTabs/LeftPanelPageTabsOperations/LeftPanelPageTabsOperations.js","webpack:///./src/ui/src/components/LeftPanelPageTabs/LeftPanelPageTabsLarge/LeftPanelPageTabsLarge.js","webpack:///./src/ui/src/components/LeftPanelPageTabs/LeftPanelPageTabsContainer.js","webpack:///./src/ui/src/components/LeftPanelPageTabs/index.js","webpack:///./src/ui/src/components/DocumentControls/DocumentControls.js","webpack:///./src/ui/src/components/DocumentControls/index.js","webpack:///./src/ui/src/helpers/pageManipulation.js","webpack:///./src/ui/src/components/ThumbnailsPanel/ThumbnailsPanel.js","webpack:///./src/ui/src/components/ThumbnailsPanel/index.js"],"names":["api","content","__esModule","default","module","i","options","styleTag","window","isApryseWebViewerWebComponent","document","head","appendChild","webComponents","getElementsByTagName","length","findNestedWebComponents","tagName","root","elements","querySelectorAll","forEach","el","push","shadowRoot","clonedStyleTags","webComponent","onload","styleNode","innerHTML","cloneNode","exports","locals","PageManipulationOverlayButtonContainer","PageManipulationOverlayButton","props","className","pageIndex","dispatch","useDispatch","selectedPageIndexes","useSelector","state","selectors","getSelectedThumbnailPageIndexes","onClick","indexOf","actions","setSelectedPageThumbnails","ToggleElementButton","dataElement","DataElements","PAGE_MANIPULATION_OVERLAY_BUTTON","element","PAGE_MANIPULATION_OVERLAY","img","title","propTypes","index","PropTypes","number","isRequired","ThumbnailControls","t","useTranslation","isElementDisabled","isMoreOptionDisabled","pageDeletionConfirmationModalEnabled","isPageDeletionConfirmationModalEnabled","selectedIndexes","getCurrentPage","getThumbnailControlMenuItems","shallowEqual","currentPage","pageThumbnailControlMenuItems","pageNumbers","map","includes","core","getDocument","documentType","type","isXod","workerTypes","XOD","isOffice","OFFICE","LEGACY_OFFICE","BUTTONS_MAP","Button","rotateClockwise","rotateCounterClockwise","deletePages","onClickAnnouncement","isCustomized","occurredButtons","buttons","item","key","component","React","cloneElement","isWebViewerServerDocument","data-element","style","display","classNames","Thumbnail","isSelected","updateAnnotations","shiftKeyThumbnailPivotIndex","onFinishLoading","onLoad","onRemove","onDragStart","onDragOver","isDraggable","shouldShowControls","thumbnailSize","pageLabels","isThumbnailMultiselectEnabled","isReaderModeOrReadOnly","isMobile","canLoad","onCancel","isThumbnailSelectingPages","thumbnailSelectionMode","activeDocumentViewerKey","panelSelector","thumbSize","Number","useState","width","height","dimensions","setDimensions","loaded","setLoaded","loadTimeout","loadThumbnailAsync","setTimeout","thumbnailContainer","getRootNode","querySelector","pageNum","viewerRotation","getRotation","doc","getPageInfo","id","loadCanvas","pageNumber","drawComplete","thumb","childElement","removeChild","ratio","Math","min","abs","cssTransform","allowUseOfOptimizedThumbnail","useEffect","onPagesUpdated","changes","contentChanged","moved","added","removed","isPageAdded","didPageChange","some","changedPage","didPageMove","Object","keys","movedPage","parseInt","isPageRemoved","newPageCount","getTotalPages","onRotationUpdated","addEventListener","removeEventListener","clearTimeout","useDidUpdate","isActive","pageLabel","checkboxRotateClass","rotation","active","selected","e","draggable","checkboxToggled","target","multiSelectionKeyPressed","ctrlKey","metaKey","shiftKeyPressed","shiftKey","updatedSelectedPages","setThumbnailSelectingPages","shiftKeyPivot","setShiftKeyThumbnailsPivotIndex","currSelectMinIndex","currSelectMaxIndex","max","Set","Array","from","_","thumbnailSelectionModes","filter","lastSelectedPageIndex","closeElement","setCurrentPage","Choice","checked","getPageLabels","isReaderMode","isDocumentReadOnly","getShiftKeyThumbnailPivotIndex","getThumbnailSelectionMode","getActiveDocumentViewerKey","selectionModes","LeftPanelPageTabsMoreSmall","THUMBNAILS_CONTROL_MANIPULATE_POPUP_SMALL","THUMBNAILS_CONTROL_MANIPULATE_POPUP_SMALL_TRIGGER","LeftPanelPageTabsInsertSmall","CustomLeftPanelOperations","operations","operation","LeftPanelPageTabsRotate","onRotateClockwise","onRotateCounterClockwise","InitialLeftPanelPageTabsSmall","children","multiPageManipulationControlsItems","childrenArray","Children","toArray","find","child","LeftPanelPageTabsSmall","multiPageManipulationControlsItemsSmall","LeftPanelPageTabsMore","THUMBNAILS_CONTROL_MANIPULATE_POPUP","THUMBNAILS_CONTROL_MANIPULATE_POPUP_TRIGGER","LeftPanelPageTabsMove","moveToTop","moveToBottom","InitialLeftPanelPageTabs","LeftPanelPageTabs","LeftPanelPageTabsInsert","onInsert","LeftPanelPageTabsOperations","onReplace","onExtractPages","onDeletePages","LeftPanelPageTabsLarge","LeftPanelPageTabsContainer","widthMinusMargins","parentElement","isInMobile","getPanelWidth","getLeftPanelWidth","getMultiPageManipulationControlsItems","getMultiPageManipulationControlsItemsSmall","getMultiPageManipulationControlsItemsLarge","isInDesktopOnlyMode","panelWidth","deleteModalEnabled","multiPageManipulationControlsSmall","multiPageManipulationControlsLarge","isDesktopOnlyMode","noPagesSelectedWarning","getBoundingClientRect","panelMinWidth","isPanelLarge","childProps","replace","extractPages","openElement","movePagesToTop","movePagesToBottom","getPageString","selectedPageArray","pagesToPrint","sortedPages","sort","a","b","prevIndex","slice","DocumentControls","isDisabled","initialPagesString","pageString","setPageString","previousPageString","setPreviousPageString","enableThumbnailSelectingPages","onBlur","selectedPagesString","value","pages","getPageArrayFromString","pageIndexes","page","updatedString","onChange","placeholder","pageNumberPlaceholder","aria-label","bool","arrayOf","string","toggleDocumentControl","func","mergeDocument","srcToMerge","mergeToPage","shouldFireEvent","LOADING_MODAL","Promise","resolve","reject","then","mergeResults","fireEvent","Events","DOCUMENT_MERGED","err","ThumbnailsPanel","isElementOpen","getIsThumbnailMergingEnabled","getIsThumbnailReorderingEnabled","getIsMultipleViewerMerging","openingPageManipulationOverlayByRightClickEnabled","isLeftPanelOpen","totalPages","isThumbnailMergingEnabled","isThumbnailReorderingEnabled","isMultipleViewerMerging","isThumbnailControlDisabled","isThumbnailSliderDisabled","totalPagesFromSecondaryDocumentViewer","isRightClickEnabled","listRef","useRef","pendingThumbs","thumbs","afterMovePageNumber","isOfficeEditor","setIsOfficeEditor","setCanLoad","setHeight","setWidth","draggingOverPageIndex","setDraggingOverPageIndex","isDraggingToPreviousPage","setDraggingToPreviousPage","numberOfColumns","setNumberOfColumns","isDragging","setIsDragging","setThumbnailSize","lastTimeTriggered","setLastTimeTriggered","globalIndex","setGlobalIndex","pageCount","activeThumbRenders","thumbContainer","current","pageWidth","getPageWidth","pageHeight","round","getThumbnailSize","getPageHeight","annotCanvas","createElement","maxWidth","maxHeight","ctx","getContext","zoom","getCompleteRotation","multiplier","Core","getCanvasMultiplier","setAnnotationCanvasTransform","overrideCanvas","overridePageRotation","overridePageCanvas","debounce","drawAnnotations","debouncedDraw","onBeginRendering","onFinishedRendering","needsMoreRendering","onDocumentLoaded","getType","onPageComplete","updatedPagesIndexes","scrollToRow","floor","onAnnotationChanged","annots","indices","annot","PageNumber","Listable","onPageNumberUpdated","onDragEnd","scrollToRowHelper","change","time","now","Date","getTime","preventDefault","stopPropagation","thumbnail","pageX","x","pageY","y","bottom","hoverAreaHeight","scrollDown","scrollUp","draggingSelectedPage","pagesToMove","THUMBNAIL_DRAGGED","dataTransfer","setData","setDragImage","Image","dropEffect","effectAllowed","frameElement","extractedDataPromise","extractPagesWithAnnotations","pagesExtracted","onDrop","externalPageWebViewerFrameId","files","insertTo","isIE11","getData","viewerID","mergingDocument","currentPageIndex","otherWebViewerIframe","parent","console","warn","contentWindow","docToMerge","filename","file","targetPageNumber","pageNumbersToMove","p","movePages","updatedPagesNumbers","offset","THUMBNAIL_DROPPED","pageNumbersBeforeMove","pagesNumbersAfterMove","numberOfPagesMoved","thumbIsLoaded","thumbIsPending","removeFromPendingThumbs","getPendingThumbIndex","splice","cancelLoadThumbnail","findIndex","thumbStatus","canvases","c","cancel","renderThumbnails","columnsOfThumbnails","row","allowPageOperationsUI","role","fill","columnIndex","thumbIndex","allowDragAndDrop","showPlaceHolder","Fragment","onContextMenu","event","setPageManipulationOverlayAlternativePosition","left","right","top","openElements","updateNumberOfColumns","thumbnailHeight","thumbnailAutoScrollAreaStyle","hideTooltipShortcut","aria-valuemin","aria-valuemax","aria-valuenow","step","bounds","onResize","measureRef","ref","rowHeight","rowCount","ceil","rowRenderer","overscanRowCount","outline","scrollToIndex"],"mappings":"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","file":"chunks/32.chunk.js","sourcesContent":["var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../../../node_modules/sass-loader/dist/cjs.js!./LeftPanelPageTabsContainer.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                function findNestedWebComponents(tagName, root = document) {\n                  const elements = [];\n\n                  // Check direct children\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\n\n                  // Check shadow DOMs\n                  root.querySelectorAll('*').forEach(el => {\n                    if (el.shadowRoot) {\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\n                    }\n                  });\n\n                  return elements;\n                }\n                if (!window.isApryseWebViewerWebComponent) {\n                  document.head.appendChild(styleTag);\n                  return;\n                }\n\n                let webComponents;\n                // First we see if the webcomponent is at the document level\n                webComponents = document.getElementsByTagName('apryse-webviewer');\n                // If not, we check have to check if it is nested in another webcomponent\n                if (!webComponents.length) {\n                  webComponents = findNestedWebComponents('apryse-webviewer');\n                }\n                // Now we append the style tag to each webcomponent\n                const clonedStyleTags = [];\n                for (let i = 0; i < webComponents.length; i++) {\n                  const webComponent = webComponents[i];\n                  if (i === 0) {\n                    webComponent.shadowRoot.appendChild(styleTag);\n                    styleTag.onload = function () {\n                      if (clonedStyleTags.length > 0) {\n                        clonedStyleTags.forEach((styleNode) => {\n                          // eslint-disable-next-line no-unsanitized/property\n                          styleNode.innerHTML = styleTag.innerHTML;\n                        });\n                      }\n                    };\n                  } else {\n                    const styleNode = styleTag.cloneNode(true);\n                    webComponent.shadowRoot.appendChild(styleNode);\n                    clonedStyleTags.push(styleNode);\n                  }\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../../node_modules/sass-loader/dist/cjs.js!./ThumbnailControls.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                function findNestedWebComponents(tagName, root = document) {\n                  const elements = [];\n\n                  // Check direct children\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\n\n                  // Check shadow DOMs\n                  root.querySelectorAll('*').forEach(el => {\n                    if (el.shadowRoot) {\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\n                    }\n                  });\n\n                  return elements;\n                }\n                if (!window.isApryseWebViewerWebComponent) {\n                  document.head.appendChild(styleTag);\n                  return;\n                }\n\n                let webComponents;\n                // First we see if the webcomponent is at the document level\n                webComponents = document.getElementsByTagName('apryse-webviewer');\n                // If not, we check have to check if it is nested in another webcomponent\n                if (!webComponents.length) {\n                  webComponents = findNestedWebComponents('apryse-webviewer');\n                }\n                // Now we append the style tag to each webcomponent\n                const clonedStyleTags = [];\n                for (let i = 0; i < webComponents.length; i++) {\n                  const webComponent = webComponents[i];\n                  if (i === 0) {\n                    webComponent.shadowRoot.appendChild(styleTag);\n                    styleTag.onload = function () {\n                      if (clonedStyleTags.length > 0) {\n                        clonedStyleTags.forEach((styleNode) => {\n                          // eslint-disable-next-line no-unsanitized/property\n                          styleNode.innerHTML = styleTag.innerHTML;\n                        });\n                      }\n                    };\n                  } else {\n                    const styleNode = styleTag.cloneNode(true);\n                    webComponent.shadowRoot.appendChild(styleNode);\n                    clonedStyleTags.push(styleNode);\n                  }\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}.thumbnailControls-overlay{display:grid;text-align:center;z-index:2;margin-top:5px;grid-template-areas:\\\"rotate delete . more\\\";grid-template-columns:repeat(3,1fr)}@media (-ms-high-contrast:active),(-ms-high-contrast:none){.thumbnailControls-overlay{display:flex}}.thumbnailControls-overlay .Button{height:32px;padding:0;width:32px}.thumbnailControls-overlay .Button .Icon{height:24px;width:24px;color:var(--icon-color)}.thumbnailControls-overlay .Button:hover{background:var(--view-header-button-hover);border-radius:4px}.thumbnailControls-overlay .Button.active{background:var(--view-header-button-active)}.thumbnailControls-overlay .Button.active .Icon{color:var(--selected-icon-color)}.thumbnailControls-overlay .rotate-button{grid-area:rotate}.thumbnailControls-overlay .delete-button{grid-area:delete}.thumbnailControls-overlay .more-options{grid-area:more}.thumbnailControls-overlay.custom-buttons .Button{grid-area:auto}.thumbnailControls{display:flex;flex-direction:row;text-align:center;z-index:2;margin-top:5px}.thumbnailControls .Button{height:32px;padding:0;width:32px;margin:0 4px}.thumbnailControls .Button .Icon{height:24px;width:24px;color:var(--icon-color)}.thumbnailControls .Button:hover{background:var(--view-header-button-hover);border-radius:4px}\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../../node_modules/sass-loader/dist/cjs.js!./Thumbnail.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                function findNestedWebComponents(tagName, root = document) {\n                  const elements = [];\n\n                  // Check direct children\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\n\n                  // Check shadow DOMs\n                  root.querySelectorAll('*').forEach(el => {\n                    if (el.shadowRoot) {\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\n                    }\n                  });\n\n                  return elements;\n                }\n                if (!window.isApryseWebViewerWebComponent) {\n                  document.head.appendChild(styleTag);\n                  return;\n                }\n\n                let webComponents;\n                // First we see if the webcomponent is at the document level\n                webComponents = document.getElementsByTagName('apryse-webviewer');\n                // If not, we check have to check if it is nested in another webcomponent\n                if (!webComponents.length) {\n                  webComponents = findNestedWebComponents('apryse-webviewer');\n                }\n                // Now we append the style tag to each webcomponent\n                const clonedStyleTags = [];\n                for (let i = 0; i < webComponents.length; i++) {\n                  const webComponent = webComponents[i];\n                  if (i === 0) {\n                    webComponent.shadowRoot.appendChild(styleTag);\n                    styleTag.onload = function () {\n                      if (clonedStyleTags.length > 0) {\n                        clonedStyleTags.forEach((styleNode) => {\n                          // eslint-disable-next-line no-unsanitized/property\n                          styleNode.innerHTML = styleTag.innerHTML;\n                        });\n                      }\n                    };\n                  } else {\n                    const styleNode = styleTag.cloneNode(true);\n                    webComponent.shadowRoot.appendChild(styleNode);\n                    clonedStyleTags.push(styleNode);\n                  }\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}.Thumbnail{display:flex;flex-direction:column;justify-content:center;align-items:center;text-align:center;cursor:pointer}.Thumbnail.active .container .page-image{border:2px solid var(--focus-border);box-shadow:none;box-sizing:content-box}.Thumbnail .container{position:relative;display:flex;justify-content:center;align-items:center;cursor:pointer}.Thumbnail .container .page-image{box-shadow:0 0 3px 0 var(--box-shadow)}.Thumbnail .container .annotation-image,.Thumbnail .container .page-image{position:absolute;left:50%;top:50%;transform:translate(-50%,-50%)}.Thumbnail .container .checkbox{position:absolute;border-radius:4px;z-index:4}.Thumbnail .container .default{top:3%;right:15%}.Thumbnail .container .rotated{top:15%;right:3%}.Thumbnail .page-label{margin-top:11px}.Thumbnail.selected .container .thumbnail:before{color:#fff;background:var(--focus-border);width:16px;height:16px;position:absolute;z-index:10}.Thumbnail.selected .container canvas{background:hsla(0,0%,100%,.6)}.Thumbnail.active .page-label{color:var(--focus-border)!important}\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}.documentControlsContainer .PageControlContainer{display:flex;background-color:var(--gray-2);justify-content:center;align-content:center;margin:0 8px 0 16px;border-radius:4px}.documentControlsContainer .PageControlContainer .dropdown-menu{position:relative}.documentControlsContainer .PageControlContainer .dropdown-menu .indicator{position:absolute;bottom:1px;right:1px;width:0;height:0;border-left:4px solid transparent;border-right:4px solid transparent;border-top:4px solid #c4c4c4;transform:rotateY(0deg) rotate(315deg)}.documentControlsContainer .PageControlContainer button .Icon{height:21px;width:21px;color:var(--icon-color)}.documentControlsContainer .PageControlContainer .button-hover:hover{background:var(--view-header-button-hover);border-radius:4px}.documentControlsContainer .PageControlContainer .divider{height:20px;width:1px;background:var(--divider);margin:6px}\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../../node_modules/sass-loader/dist/cjs.js!./DocumentControls.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                function findNestedWebComponents(tagName, root = document) {\n                  const elements = [];\n\n                  // Check direct children\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\n\n                  // Check shadow DOMs\n                  root.querySelectorAll('*').forEach(el => {\n                    if (el.shadowRoot) {\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\n                    }\n                  });\n\n                  return elements;\n                }\n                if (!window.isApryseWebViewerWebComponent) {\n                  document.head.appendChild(styleTag);\n                  return;\n                }\n\n                let webComponents;\n                // First we see if the webcomponent is at the document level\n                webComponents = document.getElementsByTagName('apryse-webviewer');\n                // If not, we check have to check if it is nested in another webcomponent\n                if (!webComponents.length) {\n                  webComponents = findNestedWebComponents('apryse-webviewer');\n                }\n                // Now we append the style tag to each webcomponent\n                const clonedStyleTags = [];\n                for (let i = 0; i < webComponents.length; i++) {\n                  const webComponent = webComponents[i];\n                  if (i === 0) {\n                    webComponent.shadowRoot.appendChild(styleTag);\n                    styleTag.onload = function () {\n                      if (clonedStyleTags.length > 0) {\n                        clonedStyleTags.forEach((styleNode) => {\n                          // eslint-disable-next-line no-unsanitized/property\n                          styleNode.innerHTML = styleTag.innerHTML;\n                        });\n                      }\n                    };\n                  } else {\n                    const styleNode = styleTag.cloneNode(true);\n                    webComponent.shadowRoot.appendChild(styleNode);\n                    clonedStyleTags.push(styleNode);\n                  }\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}.documentControls{display:flex;flex-direction:column}.documentControls .divider{height:1px;background:var(--divider);margin:16px 8px 8px 16px}.documentControls .documentControlsInput{display:flex;flex-direction:row;padding:8px 8px 16px 16px}.documentControls .documentControlsInput .pagesInput{width:100%;height:30px;border:1px solid var(--border);border-radius:4px;color:var(--text-color);padding:4px 8px}.documentControls .documentControlsInput .pagesInput:focus{outline:none;border:1px solid var(--focus-border)}.documentControls .documentControlsInput .pagesInput::-moz-placeholder{color:var(--placeholder-text)}.documentControls .documentControlsInput .pagesInput:-ms-input-placeholder{color:var(--placeholder-text)}.documentControls .documentControlsInput .pagesInput::placeholder{color:var(--placeholder-text)}.documentControls .documentControlsInput .documentControlsButton{display:flex;flex-direction:row;padding-left:2px}.documentControls .documentControlsInput .documentControlsButton .Button{height:30px;padding:0;width:30px;margin:0 4px}.documentControls .documentControlsInput .documentControlsButton .Button .Icon{height:24px;width:24px;color:var(--icon-color)}.documentControls .documentControlsInput .documentControlsButton .Button:hover{background:var(--view-header-button-hover);border-radius:4px}\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../../node_modules/sass-loader/dist/cjs.js!./ThumbnailsPanel.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                function findNestedWebComponents(tagName, root = document) {\n                  const elements = [];\n\n                  // Check direct children\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\n\n                  // Check shadow DOMs\n                  root.querySelectorAll('*').forEach(el => {\n                    if (el.shadowRoot) {\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\n                    }\n                  });\n\n                  return elements;\n                }\n                if (!window.isApryseWebViewerWebComponent) {\n                  document.head.appendChild(styleTag);\n                  return;\n                }\n\n                let webComponents;\n                // First we see if the webcomponent is at the document level\n                webComponents = document.getElementsByTagName('apryse-webviewer');\n                // If not, we check have to check if it is nested in another webcomponent\n                if (!webComponents.length) {\n                  webComponents = findNestedWebComponents('apryse-webviewer');\n                }\n                // Now we append the style tag to each webcomponent\n                const clonedStyleTags = [];\n                for (let i = 0; i < webComponents.length; i++) {\n                  const webComponent = webComponents[i];\n                  if (i === 0) {\n                    webComponent.shadowRoot.appendChild(styleTag);\n                    styleTag.onload = function () {\n                      if (clonedStyleTags.length > 0) {\n                        clonedStyleTags.forEach((styleNode) => {\n                          // eslint-disable-next-line no-unsanitized/property\n                          styleNode.innerHTML = styleTag.innerHTML;\n                        });\n                      }\n                    };\n                  } else {\n                    const styleNode = styleTag.cloneNode(true);\n                    webComponent.shadowRoot.appendChild(styleNode);\n                    clonedStyleTags.push(styleNode);\n                  }\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}.thumbnail-slider-container{display:flex;align-items:center;width:230px;margin:0 auto}.thumbnail-slider-container .thumbnail-slider{width:100%;height:20px;padding:0;color:transparent;background-color:transparent;border:0 transparent}.thumbnail-slider-container input[type=range]{-webkit-appearance:none;margin:10px 0;width:100%}.thumbnail-slider-container input[type=range]:focus{outline:none;box-shadow:0 0 5px var(--focus-border)}.thumbnail-slider-container input[type=range]::-webkit-slider-runnable-track{width:100%;height:3px;cursor:pointer;animate:.2s;box-shadow:0 0 0 #000;background:var(--slider-filled);border-radius:5px;border:0 solid #000}.thumbnail-slider-container input[type=range]::-webkit-slider-thumb{box-shadow:0 0 1px #000;border:0 solid #000;height:15px;width:15px;border-radius:50px;background:var(--slider-filled);cursor:pointer;-webkit-appearance:none;margin-top:-5px}.thumbnail-slider-container input[type=range]:focus::-webkit-slider-runnable-track{background:var(--slider-filled)}.thumbnail-slider-container input[type=range]::-moz-range-track{width:100%;height:3px;cursor:pointer;animate:.2s;box-shadow:0 0 0 #000;background:var(--slider-filled);border-radius:5px;border:0 solid #000}.thumbnail-slider-container input[type=range]::-moz-range-thumb{box-shadow:0 0 1px #000;border:0 solid #000;height:15px;width:15px;border-radius:50px;background:var(--slider-filled);cursor:pointer}.thumbnail-slider-container input[type=range]::-ms-track{padding:5px 0 0;width:100%;height:3px;background:transparent;border-color:transparent;color:transparent;cursor:pointer;border-width:6px 0;animate:.2s}.thumbnail-slider-container input[type=range]::-ms-fill-lower,.thumbnail-slider-container input[type=range]::-ms-fill-upper{background:var(--slider-filled);border:0 solid #000;border-radius:10px;box-shadow:0 0 0 #000}.thumbnail-slider-container input[type=range]::-ms-thumb{box-shadow:0 0 1px #000;border:0 solid #000;height:15px;width:15px;border-radius:50%;background:var(--slider-filled);cursor:pointer}.thumbnail-slider-container input[type=range]:focus::-ms-fill-lower,.thumbnail-slider-container input[type=range]:focus::-ms-fill-upper{background:var(--slider-filled)}.thumbnail-slider-container Button{width:15px;height:15px;margin:2.5px;padding-top:6px}.thumbnail-slider-container Button:hover{background:var(--view-header-button-hover);border-radius:4px}.ThumbnailsPanel{overflow:hidden!important;display:flex;height:100%}.ThumbnailsPanel #virtualized-thumbnails-container{flex:1}.ThumbnailsPanel .row{display:flex;justify-content:space-around;align-items:center;flex-direction:column}.ThumbnailsPanel .thumbnailPlaceholder{width:150px;margin:2px;border:1px solid var(--focus-border)}.ThumbnailsPanel .columnsOfThumbnails.row{display:flex;justify-content:left;align-items:center;flex-direction:row}.ThumbnailsPanel .columnsOfThumbnails .cellThumbContainer{display:flex;flex-direction:row}.ThumbnailsPanel .columnsOfThumbnails .Thumbnail{display:inline-flex}.ThumbnailsPanel .columnsOfThumbnails .thumbnailPlaceholder{width:116px;min-width:116px;height:150px;margin-bottom:30px}.thumbnailAutoScrollArea{position:absolute;width:calc(100% - 55px);z-index:10;background:hsla(0,0%,100%,0)}\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};","import React from 'react';\nimport ToggleElementButton from '../ToggleElementButton';\nimport { useDispatch, useSelector } from 'react-redux';\nimport selectors from 'selectors';\nimport actions from 'actions';\nimport DataElements from 'constants/dataElement';\n\nfunction PageManipulationOverlayButtonContainer(props) {\n  const { className, pageIndex } = props;\n\n  const dispatch = useDispatch();\n  const selectedPageIndexes = useSelector((state) => selectors.getSelectedThumbnailPageIndexes(state));\n\n  const onClickPageManipulationOverlayButton = () => {\n    if (selectedPageIndexes.indexOf(pageIndex) === -1) {\n      dispatch(actions.setSelectedPageThumbnails([pageIndex]));\n    }\n  };\n\n  return (\n    <div\n      className={className}\n      onClick={onClickPageManipulationOverlayButton}\n    >\n      <ToggleElementButton\n        dataElement={DataElements.PAGE_MANIPULATION_OVERLAY_BUTTON}\n        element={DataElements.PAGE_MANIPULATION_OVERLAY}\n        img=\"icon-tool-more\"\n        title=\"option.thumbnailPanel.moreOptions\"\n      />\n    </div>\n  );\n}\n\nexport default PageManipulationOverlayButtonContainer;","import PageManipulationOverlayButton from './PageManipulationOverlayButtonContainer';\n\nexport default PageManipulationOverlayButton;","import React from 'react';\nimport { useDispatch, shallowEqual, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { deletePages, rotateClockwise, rotateCounterClockwise } from 'helpers/pageManipulationFunctions';\nimport Button from 'components/Button';\nimport selectors from 'selectors';\nimport './ThumbnailControls.scss';\nimport PageManipulationOverlayButton from 'components/PageManipulationOverlayButton';\nimport { workerTypes } from 'constants/types';\nimport core from 'src/core';\nimport DataElements from 'constants/dataElement';\nimport { useTranslation } from 'react-i18next';\n\nconst propTypes = {\n  index: PropTypes.number.isRequired,\n};\n\nconst dataElementName = 'thumbnailControl';\n\nconst ThumbnailControls = ({ index }) => {\n  const { t } = useTranslation();\n  const [isElementDisabled] = useSelector((state) => [selectors.isElementDisabled(state, dataElementName)]);\n  const [isMoreOptionDisabled] = useSelector((state) => [selectors.isElementDisabled(state, DataElements.PAGE_MANIPULATION_OVERLAY_BUTTON)]);\n  const [isPageDeletionConfirmationModalEnabled, selectedIndexes] = useSelector((state) => [\n    selectors.pageDeletionConfirmationModalEnabled(state),\n    selectors.getSelectedThumbnailPageIndexes(state),\n  ]);\n  const dispatch = useDispatch();\n\n  const [\n    currentPage,\n    pageThumbnailControlMenuItems,\n  ] = useSelector((state) => [\n    selectors.getCurrentPage(state),\n    selectors.getThumbnailControlMenuItems(state),\n  ], shallowEqual);\n\n  let pageNumbers = selectedIndexes.length > 0 ? selectedIndexes.map((i) => i + 1) : [index + 1];\n\n  const isCurrentPageInTheSelection = pageNumbers.includes(currentPage);\n\n  if (!isCurrentPageInTheSelection) {\n    pageNumbers = [currentPage];\n  }\n\n  const document = core.getDocument();\n  const documentType = document?.type;\n  const isXod = documentType === workerTypes.XOD;\n  const isOffice = documentType === workerTypes.OFFICE || documentType === workerTypes.LEGACY_OFFICE;\n\n  const BUTTONS_MAP = {\n    'thumbRotateClockwise': <Button\n      className=\"rotate-button\"\n      img=\"icon-header-page-manipulation-page-rotation-clockwise-line\"\n      onClick={() => rotateClockwise(pageNumbers)}\n      title=\"option.thumbnailPanel.rotatePageClockwise\"\n      dataElement=\"thumbRotateClockwise\"\n    />,\n    'thumbRotateCounterClockwise': <Button\n      img=\"icon-header-page-manipulation-page-rotation-counterclockwise-line\"\n      onClick={() => rotateCounterClockwise(pageNumbers)}\n      title=\"option.thumbnailPanel.rotatePageCounterClockwise\"\n      dataElement=\"thumbRotateCounterClockwise\"\n    />,\n    'thumbDelete': <Button\n      className=\"delete-button\"\n      img=\"icon-delete-line\"\n      onClick={() => deletePages(pageNumbers, dispatch, isPageDeletionConfirmationModalEnabled)}\n      title=\"option.thumbnailPanel.delete\"\n      dataElement=\"thumbDelete\"\n      onClickAnnouncement={`${t('action.delete')} ${t('action.modal')} ${t('action.isOpen')}`}\n    />,\n  };\n  let isCustomized = false;\n  const occurredButtons = [];\n  const buttons = pageThumbnailControlMenuItems.map((item) => {\n    const { dataElement } = item;\n    const key = dataElement;\n    let component = BUTTONS_MAP[dataElement];\n    if (occurredButtons.indexOf(dataElement) > -1) {\n      return null;\n    }\n    occurredButtons.push(dataElement);\n\n    /* Example button object:\n    {\n      title: 'Alert me',\n      img: '/path-to-image',\n      onClick: (selectedPageNumbers) => alert(``),\n      dataElement: 'alertMeDataElement',\n    } */\n    if (!component) {\n      isCustomized = true;\n      const { img, onClick, title } = item;\n      component = <Button\n        className={`${dataElement}-button`}\n        img={img}\n        onClick={() => onClick(currentPage)}\n        title={title}\n        dataElement={dataElement}\n      />;\n    }\n\n    return component\n      ? React.cloneElement(component, {\n        key,\n      })\n      : null;\n  });\n\n  if (isElementDisabled) {\n    return null;\n  } if (isXod || isOffice || document?.isWebViewerServerDocument()) {\n    return (\n      <div className=\"thumbnailControls-overlay\" data-element={dataElementName}\n        style={{ display: 'flex' }}\n      >\n        <Button\n          img=\"icon-header-page-manipulation-page-rotation-counterclockwise-line\"\n          onClick={() => rotateCounterClockwise(pageNumbers)}\n          title=\"option.thumbnailPanel.rotatePageCounterClockwise\"\n          dataElement=\"thumbRotateCounterClockwise\"\n        />\n        <Button\n          img=\"icon-header-page-manipulation-page-rotation-clockwise-line\"\n          onClick={() => rotateClockwise(pageNumbers)}\n          title=\"option.thumbnailPanel.rotatePageClockwise\"\n          dataElement=\"thumbRotateClockwise\"\n        />\n      </div>\n    );\n  }\n  return (\n    <div className={classNames({\n      'thumbnailControls-overlay': true,\n      'custom-buttons': isCustomized,\n    })}\n    data-element={dataElementName}\n    >\n      {buttons}\n      {\n        (isMoreOptionDisabled) ? null : <PageManipulationOverlayButton\n          className={'more-options'}\n          pageIndex={index}\n        />\n      }\n\n    </div>\n  );\n};\n\n\nThumbnailControls.propTypes = propTypes;\n\nexport default ThumbnailControls;\n","import ThumbnailControls from './ThumbnailControls';\n\nexport default ThumbnailControls;\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport useDidUpdate from 'hooks/useDidUpdate';\nimport core from 'core';\nimport ThumbnailControls from 'components/ThumbnailControls';\nimport thumbnailSelectionModes from 'constants/thumbnailSelectionModes';\n\nimport './Thumbnail.scss';\nimport { Choice } from '@pdftron/webviewer-react-toolkit';\nimport getRootNode from 'helpers/getRootNode';\n\n// adds a delay in ms so thumbs that are only on the screen briefly are not loaded.\nconst THUMBNAIL_LOAD_DELAY = 50;\n\nconst Thumbnail = ({\n  index,\n  isSelected,\n  updateAnnotations,\n  shiftKeyThumbnailPivotIndex,\n  onFinishLoading,\n  onLoad,\n  onRemove = () => { },\n  onDragStart,\n  onDragOver,\n  isDraggable,\n  shouldShowControls,\n  thumbnailSize,\n  currentPage,\n  pageLabels = [],\n  selectedPageIndexes,\n  isThumbnailMultiselectEnabled,\n  isReaderModeOrReadOnly,\n  dispatch,\n  actions,\n  isMobile,\n  canLoad,\n  onCancel,\n  isThumbnailSelectingPages,\n  thumbnailSelectionMode,\n  activeDocumentViewerKey,\n  panelSelector\n}) => {\n  const thumbSize = thumbnailSize ? Number(thumbnailSize) : 150;\n\n  const [dimensions, setDimensions] = useState({ width: thumbSize, height: thumbSize });\n  // To ensure checkmark loads after thumbnail\n  const [loaded, setLoaded] = useState(false);\n\n  let loadTimeout = null;\n\n  const loadThumbnailAsync = () => {\n    loadTimeout = setTimeout(() => {\n      const thumbnailContainer = getRootNode().querySelector(`.ThumbnailsPanel.${panelSelector} #pageThumb${index}`);\n\n      const pageNum = index + 1;\n      const viewerRotation = core.getRotation(pageNum);\n\n      const doc = core.getDocument(activeDocumentViewerKey);\n      // Possible race condition can happen where we try to render a thumbnail for a page that has\n      // been deleted. Prevent that by checking if pageInfo exists\n\n      if (doc && doc.getPageInfo(pageNum)) {\n        const id = doc.loadCanvas({\n          pageNumber: pageNum,\n          width: thumbSize,\n          height: thumbSize,\n          drawComplete: async (thumb) => {\n            const thumbnailContainer = getRootNode().querySelector(`.ThumbnailsPanel.${panelSelector} #pageThumb${index}`);\n            if (thumbnailContainer) {\n              const childElement = thumbnailContainer.querySelector('.page-image');\n              if (childElement) {\n                thumbnailContainer.removeChild(childElement);\n              }\n\n              thumb.className = 'page-image';\n\n              const ratio = Math.min(thumbSize / thumb.width, thumbSize / thumb.height);\n              thumb.style.width = `${thumb.width * ratio}px`;\n              thumb.style.height = `${thumb.height * ratio}px`;\n              setDimensions({ width: Number(thumb.width), height: Number(thumb.height) });\n\n              if (Math.abs(viewerRotation)) {\n                const cssTransform = `rotate(${viewerRotation * 90}deg) translate(-50%,-50%)`;\n                const cssTransformOrigin = 'top left';\n                thumb.style['transform'] = cssTransform;\n                thumb.style['transform-origin'] = cssTransformOrigin;\n                thumb.style['ms-transform'] = cssTransform;\n                thumb.style['ms-transform-origin'] = cssTransformOrigin;\n                thumb.style['-moz-transform'] = cssTransform;\n                thumb.style['-moz-transform-origin'] = cssTransformOrigin;\n                thumb.style['-webkit-transform-origin'] = cssTransformOrigin;\n                thumb.style['-webkit-transform'] = cssTransform;\n                thumb.style['-o-transform'] = cssTransform;\n                thumb.style['-o-transform-origin'] = cssTransformOrigin;\n              }\n\n              thumbnailContainer.appendChild(thumb);\n            }\n\n            if (updateAnnotations) {\n              updateAnnotations(index);\n            }\n\n            onFinishLoading(index);\n            setLoaded(true);\n          },\n          allowUseOfOptimizedThumbnail: true,\n        });\n        onLoad(index, thumbnailContainer, id);\n      }\n    }, THUMBNAIL_LOAD_DELAY);\n  };\n\n  useEffect(() => {\n    const onPagesUpdated = (changes) => {\n      const { contentChanged, moved, added, removed } = changes;\n\n      const currentPage = index + 1;\n\n      const isPageAdded = added.includes(currentPage);\n      const didPageChange = contentChanged.some((changedPage) => currentPage === changedPage);\n      const didPageMove = Object.keys(moved).some((movedPage) => currentPage === parseInt(movedPage));\n      const isPageRemoved = removed.includes(currentPage);\n      const newPageCount = core.getTotalPages();\n\n      if (removed.length > 0 && index + 1 > newPageCount) {\n        return;\n      }\n\n      if (isPageAdded || didPageChange || didPageMove || isPageRemoved) {\n        loadThumbnailAsync();\n      }\n    };\n\n    const onRotationUpdated = () => {\n      setLoaded(false);\n      loadThumbnailAsync();\n    };\n\n    core.addEventListener('pagesUpdated', onPagesUpdated);\n    core.addEventListener('rotationUpdated', onRotationUpdated);\n    if (canLoad) {\n      loadThumbnailAsync();\n    }\n    return () => {\n      core.removeEventListener('pagesUpdated', onPagesUpdated);\n      core.removeEventListener('rotationUpdated', onRotationUpdated);\n      clearTimeout(loadTimeout);\n      onRemove(index);\n    };\n  }, []);\n\n  useDidUpdate(() => {\n    if (canLoad) {\n      loadThumbnailAsync();\n      updateAnnotations(index);\n    } else {\n      onCancel(index);\n    }\n  }, [canLoad, activeDocumentViewerKey]);\n\n  const handleClick = (e) => {\n    const checkboxToggled = e.target.type && e.target.type === 'checkbox';\n    if (isThumbnailMultiselectEnabled && !isReaderModeOrReadOnly) {\n      const multiSelectionKeyPressed = e.ctrlKey || e.metaKey;\n      const shiftKeyPressed = e.shiftKey;\n      let updatedSelectedPages = [...selectedPageIndexes];\n\n      if (shiftKeyPressed) {\n        dispatch(actions.setThumbnailSelectingPages(true));\n        // Include current page as part of selection if we just started shift-selecting\n        let shiftKeyPivot = shiftKeyThumbnailPivotIndex;\n        if (shiftKeyPivot === null) {\n          shiftKeyPivot = currentPage - 1;\n          dispatch(actions.setShiftKeyThumbnailsPivotIndex(shiftKeyPivot));\n        }\n        // get the range of the selected index and update selected page\n        const currSelectMinIndex = Math.min(shiftKeyPivot, index);\n        const currSelectMaxIndex = Math.max(shiftKeyPivot, index);\n        updatedSelectedPages = [...new Set([...Array.from(\n          { length: currSelectMaxIndex - currSelectMinIndex + 1 },\n          (_, i) => i + currSelectMinIndex,\n        )])];\n      } else if (multiSelectionKeyPressed || isThumbnailSelectingPages) {\n        dispatch(actions.setThumbnailSelectingPages(true));\n        // Only select a page if multiSelectionKeyPressed or if checkbox is checked unless in 'thumbnail' mode\n        if (multiSelectionKeyPressed || checkboxToggled || thumbnailSelectionMode === thumbnailSelectionModes['THUMBNAIL']) {\n          // Include current page as part of selection if we just started multi-selecting\n          if (selectedPageIndexes.length === 0 && !isThumbnailSelectingPages) {\n            updatedSelectedPages.push(currentPage - 1);\n          } else if (selectedPageIndexes.includes(index)) {\n            updatedSelectedPages = selectedPageIndexes.filter((pageIndex) => index !== pageIndex);\n          } else {\n            updatedSelectedPages.push(index);\n          }\n        }\n        dispatch(actions.setShiftKeyThumbnailsPivotIndex(index));\n      } else {\n        updatedSelectedPages = [index];\n      }\n      // set shiftKeyPivot when press ctr key or single key\n      const lastSelectedPageIndex = updatedSelectedPages[updatedSelectedPages.length - 1];\n      const shouldUpdateShiftKeyPivotIndex = !isThumbnailSelectingPages && !shiftKeyPressed;\n\n      if (shouldUpdateShiftKeyPivotIndex) {\n        dispatch(actions.setShiftKeyThumbnailsPivotIndex(lastSelectedPageIndex));\n      }\n\n      dispatch(actions.setSelectedPageThumbnails(updatedSelectedPages));\n    } else if (isMobile()) {\n      dispatch(actions.closeElement('leftPanel'));\n    }\n\n    // due to the race condition, we need a settimeout here\n    // otherwise, sometimes the current page will not be visible in left panel\n    setTimeout(() => {\n      // If user clicks on checkbox, it should not automatically jump to that page,\n      // only if the user clicks on thumbnail then go to page and view it, unless in 'thumbnail' mode\n      if (!checkboxToggled || thumbnailSelectionMode === thumbnailSelectionModes['THUMBNAIL']) {\n        core.setCurrentPage(index + 1);\n      }\n    }, 0);\n  };\n\n  const isActive = currentPage === index + 1;\n  const pageLabel = pageLabels[index];\n  let checkboxRotateClass = 'default';\n  const rotation = core.getRotation(index + 1);\n  if ((!rotation || rotation === 2) && dimensions.width > dimensions.height) {\n    checkboxRotateClass = 'rotated';\n  } else if ((rotation === 1 || rotation === 3) && dimensions.width < dimensions.height) {\n    checkboxRotateClass = 'rotated';\n  }\n\n  return (\n    <div\n      className={classNames({\n        Thumbnail: true,\n        active: isActive,\n        selected: isSelected && isThumbnailSelectingPages,\n      })}\n      onDragOver={(e) => onDragOver(e, index)}\n      id=\"Thumbnail-container\"\n    >\n      <div\n        className=\"container\"\n        style={{\n          width: thumbSize,\n          height: thumbSize,\n        }}\n        onDragStart={(e) => onDragStart(e, index)}\n        draggable={isDraggable}\n        onClick={handleClick}\n      >\n        <div id={`pageThumb${index}`} className=\"thumbnail\" />\n        {isThumbnailSelectingPages && loaded && (\n          <Choice className={`checkbox ${checkboxRotateClass}`} checked={selectedPageIndexes.includes(index)} />\n        )}\n      </div>\n      <div className=\"page-label\">{pageLabel}</div>\n      {!isThumbnailSelectingPages && isActive && shouldShowControls && <ThumbnailControls index={index} />}\n    </div>\n  );\n};\n\nexport default Thumbnail;\n","import React from 'react';\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux';\n\nimport selectors from 'selectors';\nimport actions from 'actions';\nimport { isMobile } from 'helpers/device';\n\nimport Thumbnail from './Thumbnail';\n\nconst ThumbnailRedux = (props) => {\n  const [\n    currentPage,\n    pageLabels,\n    selectedPageIndexes,\n    isThumbnailMultiselectEnabled,\n    isReaderMode,\n    isDocumentReadOnly,\n    shiftKeyThumbnailPivotIndex,\n    isThumbnailSelectingPages,\n    thumbnailSelectionMode,\n    activeDocumentViewerKey,\n    selectionModes\n  ] = useSelector(\n    (state) => [\n      selectors.getCurrentPage(state),\n      selectors.getPageLabels(state),\n      selectors.getSelectedThumbnailPageIndexes(state),\n      selectors.isThumbnailMultiselectEnabled(state),\n      selectors.isReaderMode(state),\n      selectors.isDocumentReadOnly(state),\n      selectors.getShiftKeyThumbnailPivotIndex(state),\n      selectors.isThumbnailSelectingPages(state),\n      selectors.getThumbnailSelectionMode(state),\n      selectors.getActiveDocumentViewerKey(state),\n    ],\n    shallowEqual,\n  );\n\n  const dispatch = useDispatch();\n\n  return <Thumbnail {...props} {...{\n    currentPage,\n    pageLabels,\n    selectedPageIndexes,\n    isThumbnailMultiselectEnabled,\n    isReaderModeOrReadOnly: isReaderMode || isDocumentReadOnly,\n    dispatch,\n    actions,\n    isMobile,\n    shiftKeyThumbnailPivotIndex,\n    isThumbnailSelectingPages,\n    thumbnailSelectionMode,\n    selectionModes,\n    activeDocumentViewerKey,\n  }}\n  />;\n};\n\nexport default ThumbnailRedux;\n","import Thumbnail from './ThumbnailRedux';\n\nexport default Thumbnail;","import React from 'react';\nimport ToggleElementButton from 'components/ToggleElementButton';\nimport '../LeftPanelPageTabs/LeftPanelPageTabsContainer.scss';\nimport DataElements from 'constants/dataElement';\n\nfunction LeftPanelPageTabsMoreSmall() {\n  return (\n    <div className={'dropdown-menu button-hover'}>\n      <ToggleElementButton\n        title=\"action.more\"\n        className={'dropdown-menu'}\n        element={DataElements.THUMBNAILS_CONTROL_MANIPULATE_POPUP_SMALL}\n        dataElement={DataElements.THUMBNAILS_CONTROL_MANIPULATE_POPUP_SMALL_TRIGGER}\n        img=\"icon-tool-more\"\n      />\n      <div className={'indicator'} />\n    </div>\n  );\n}\n\nexport default LeftPanelPageTabsMoreSmall;\n","import React from 'react';\n\nimport ToggleElementButton from 'components/ToggleElementButton';\nimport '../LeftPanelPageTabs/LeftPanelPageTabsContainer.scss';\n\nfunction LeftPanelPageTabsInsertSmall() {\n  return (\n    <div className={'dropdown-menu'}>\n      <ToggleElementButton\n        title=\"action.PageInsertion\"\n        className={'dropdown-menu'}\n        element=\"thumbnailsControlInsertPopup\"\n        dataElement=\"thumbnailsControlInsertPopupTrigger\"\n        img=\"icon-header-page-manipulation-insert-above\"\n      />\n      <div className={'indicator'} />\n    </div>\n  );\n}\n\nexport default LeftPanelPageTabsInsertSmall;\n","import React from 'react';\nimport Button from 'components/Button';\n\nfunction CustomLeftPanelOperations({ pageNumbers, operations }) {\n  return (\n    <>\n      {operations.map((operation, index) => {\n        return (\n          <Button\n            key={index}\n            className={'button-hover'}\n            dataElement={operation.dataElement}\n            img={operation.img}\n            onClick={() => operation.onClick(pageNumbers)}\n            title={operation.title}\n          />);\n      })\n      }\n    </>\n  );\n}\n\nexport default CustomLeftPanelOperations;\n","import React from 'react';\nimport Button from 'components/Button';\nimport '../LeftPanelPageTabs/LeftPanelPageTabsContainer.scss';\n\nfunction LeftPanelPageTabsRotate({ onRotateClockwise, onRotateCounterClockwise }) {\n  return (\n    <>\n      <Button\n        className={'button-hover'}\n        dataElement=\"thumbnailsControlRotateCounterClockwise\"\n        img=\"icon-header-page-manipulation-page-rotation-counterclockwise-line\"\n        onClick={onRotateCounterClockwise}\n        title=\"action.rotateCounterClockwise\"\n      />\n      <Button\n        className={'button-hover'}\n        dataElement=\"thumbnailsControlRotateClockwise\"\n        img=\"icon-header-page-manipulation-page-rotation-clockwise-line\"\n        onClick={onRotateClockwise}\n        title=\"action.rotateClockwise\"\n      />\n    </>\n  );\n}\n\nexport default LeftPanelPageTabsRotate;\n","import React from 'react';\nimport '../LeftPanelPageTabs/LeftPanelPageTabsContainer.scss';\nimport LeftPanelPageTabsMoreSmall from '../LeftPanelPageTabsMoreSmall/LeftPanelPageTabsMoreSmall';\nimport LeftPanelPageTabsInsertSmall from '../LeftPanelPageTabsInsertSmall/LeftPanelPageTabsInsertSmall';\nimport CustomLeftPanelOperations from '../CustomLeftPanelOperations/CustomLeftPanelOperations';\nimport LeftPanelPageTabsRotate from '../LeftPanelPageTabsRotate/LeftPanelPageTabsRotate';\n\nfunction InitialLeftPanelPageTabsSmall({ children, pageNumbers, multiPageManipulationControlsItems }) {\n  const childrenArray = React.Children.toArray(children);\n  if (!multiPageManipulationControlsItems) {\n    return childrenArray;\n  }\n  return multiPageManipulationControlsItems.map((item, index) => {\n    const { dataElement, type } = item;\n    let component = childrenArray.find((child) => child.props.dataElement === dataElement);\n    const key = dataElement || `${type}-${index}`;\n\n    if (!component) {\n      if (type === 'divider') {\n        component = <div className=\"divider\" />;\n      }\n\n      if (type === 'customPageOperation') {\n        component = <CustomLeftPanelOperations key={dataElement} pageNumbers={pageNumbers} {...item} />;\n      }\n    }\n    return component\n      ? React.cloneElement(component, {\n        key,\n      })\n      : null;\n  });\n}\n\n\nfunction LeftPanelPageTabsSmall(props) {\n  const { pageNumbers, multiPageManipulationControlsItemsSmall, onRotateClockwise, onRotateCounterClockwise } = props;\n  return (\n    <div className={'PageControlContainer root small'}>\n      <InitialLeftPanelPageTabsSmall pageNumbers={pageNumbers} multiPageManipulationControlsItems={multiPageManipulationControlsItemsSmall}>\n        <LeftPanelPageTabsRotate onRotateClockwise={onRotateClockwise}\n          onRotateCounterClockwise={onRotateCounterClockwise}\n          dataElement=\"leftPanelPageTabsRotate\"/>\n        <LeftPanelPageTabsInsertSmall dataElement=\"leftPanelPageTabsInsertSmall\" />\n        <LeftPanelPageTabsMoreSmall dataElement=\"leftPanelPageTabsMoreSmall\" />\n      </InitialLeftPanelPageTabsSmall>\n    </div>\n  );\n}\n\nexport default LeftPanelPageTabsSmall;\n","import React from 'react';\nimport ToggleElementButton from 'components/ToggleElementButton';\nimport '../LeftPanelPageTabs/LeftPanelPageTabsContainer.scss';\nimport DataElements from 'constants/dataElement';\n\nfunction LeftPanelPageTabsMore() {\n  return (\n    <div className={'dropdown-menu button-hover'}>\n      <ToggleElementButton\n        title=\"action.more\"\n        className={'dropdown-menu'}\n        element={DataElements.THUMBNAILS_CONTROL_MANIPULATE_POPUP}\n        dataElement={DataElements.THUMBNAILS_CONTROL_MANIPULATE_POPUP_TRIGGER}\n        img=\"icon-tool-more\"\n      />\n      <div className={'indicator'} />\n    </div>\n  );\n}\n\nexport default LeftPanelPageTabsMore;\n","import React from 'react';\nimport Button from 'components/Button';\nimport '../LeftPanelPageTabs/LeftPanelPageTabsContainer.scss';\n\nfunction LeftPanelPageTabsMove({ moveToTop, moveToBottom }) {\n  return (\n    <>\n      <Button\n        className={'button-hover'}\n        dataElement=\"moveToTop\"\n        img=\"icon-page-move-up\"\n        onClick={moveToTop}\n        title=\"action.moveToTop\"\n      />\n      <Button\n        className={'button-hover'}\n        dataElement=\"moveToBottom\"\n        img=\"icon-page-move-down\"\n        onClick={moveToBottom}\n        title=\"action.moveToBottom\"\n      />\n    </>\n  );\n}\n\nexport default LeftPanelPageTabsMove;\n","import React from 'react';\n\nimport LeftPanelPageTabsMore from '../LeftPanelPageTabsMore/LeftPanelPageTabsMore';\nimport LeftPanelPageTabsRotate from '../LeftPanelPageTabsRotate/LeftPanelPageTabsRotate';\nimport CustomLeftPanelOperations from '../CustomLeftPanelOperations/CustomLeftPanelOperations';\nimport LeftPanelPageTabsMove from 'components/LeftPanelPageTabs/LeftPanelPageTabsMove/LeftPanelPageTabsMove';\n\n\nfunction InitialLeftPanelPageTabs({ children, pageNumbers, multiPageManipulationControlsItems }) {\n  const childrenArray = React.Children.toArray(children);\n  if (!multiPageManipulationControlsItems) {\n    return childrenArray;\n  }\n  return multiPageManipulationControlsItems.map((item, index) => {\n    const { dataElement, type } = item;\n    let component = childrenArray.find((child) => child.props.dataElement === dataElement);\n    const key = dataElement || `${type}-${index}`;\n\n    if (!component) {\n      if (type === 'divider') {\n        component = <div className=\"divider\" />;\n      }\n\n      if (type === 'customPageOperation') {\n        component = <CustomLeftPanelOperations key={dataElement} pageNumbers={pageNumbers} {...item} />;\n      }\n    }\n    return component\n      ? React.cloneElement(component, {\n        key,\n      })\n      : null;\n  });\n}\n\n\nfunction LeftPanelPageTabs(props) {\n  const {\n    pageNumbers,\n    onRotateClockwise,\n    onRotateCounterClockwise,\n    multiPageManipulationControlsItems,\n    moveToTop,\n    moveToBottom\n  } = props;\n  return (\n    <div className={'PageControlContainer root'}>\n      <InitialLeftPanelPageTabs pageNumbers={pageNumbers} multiPageManipulationControlsItems={multiPageManipulationControlsItems} >\n        <LeftPanelPageTabsRotate onRotateClockwise={onRotateClockwise} onRotateCounterClockwise={onRotateCounterClockwise} dataElement=\"leftPanelPageTabsRotate\" />\n        <LeftPanelPageTabsMove moveToTop={moveToTop} moveToBottom={moveToBottom} dataElement=\"leftPanelPageTabsMove\"/>\n        <LeftPanelPageTabsMore dataElement=\"leftPanelPageTabsMore\" />\n      </InitialLeftPanelPageTabs>\n    </div>\n  );\n}\n\n\nexport default LeftPanelPageTabs;\n","import React from 'react';\nimport Button from 'components/Button';\nimport '../LeftPanelPageTabs/LeftPanelPageTabsContainer.scss';\n\nfunction LeftPanelPageTabsInsert({ onInsert }) {\n  return (\n    <>\n      <Button\n        className={'button-hover'}\n        dataElement=\"thumbnailsControlInsert\"\n        img=\"icon-page-insertion-insert\"\n        onClick={onInsert}\n        title=\"action.insert\"\n      />\n    </>\n  );\n}\n\nexport default LeftPanelPageTabsInsert;\n","import React from 'react';\nimport Button from 'components/Button';\nimport '../LeftPanelPageTabs/LeftPanelPageTabsContainer.scss';\n\nfunction LeftPanelPageTabsOperations({ onInsert, onReplace, onExtractPages, onDeletePages }) {\n  return (\n    <>\n      <Button\n        className={'button-hover'}\n        dataElement=\"thumbnailsControlInsert\"\n        img=\"icon-page-insertion-insert\"\n        onClick={onInsert}\n        title=\"action.insert\"\n      />\n      <Button\n        className={'button-hover'}\n        dataElement=\"thumbnailsControlReplace\"\n        img=\"icon-page-replacement\"\n        onClick={onReplace}\n        title=\"action.replace\"\n      />\n      <Button\n        className={'button-hover'}\n        dataElement=\"thumbnailsControlExtract\"\n        img=\"icon-page-manipulation-extract\"\n        onClick={onExtractPages}\n        title=\"action.extract\"\n      />\n      <Button\n        className={'button-hover'}\n        dataElement=\"thumbnailsControlDelete\"\n        img=\"icon-delete-line\"\n        onClick={onDeletePages}\n        title=\"action.delete\"\n      />\n    </>\n  );\n}\n\nexport default LeftPanelPageTabsOperations;\n","import React from 'react';\n\nimport LeftPanelPageTabsInsert from '../LeftPanelPageTabsInsert/LeftPanelPageTabsInsert';\nimport LeftPanelPageTabsRotate from '../LeftPanelPageTabsRotate/LeftPanelPageTabsRotate';\nimport LeftPanelPageTabsOperations from '../LeftPanelPageTabsOperations/LeftPanelPageTabsOperations';\nimport CustomLeftPanelOperations from '../CustomLeftPanelOperations/CustomLeftPanelOperations';\nimport LeftPanelPageTabsMove from '../LeftPanelPageTabsMove/LeftPanelPageTabsMove';\n\n\nfunction InitialLeftPanelPageTabs({ children, pageNumbers, multiPageManipulationControlsItems }) {\n  const childrenArray = React.Children.toArray(children);\n  if (!multiPageManipulationControlsItems) {\n    return childrenArray;\n  }\n  return multiPageManipulationControlsItems.map((item, index) => {\n    const { dataElement, type } = item;\n    let component = childrenArray.find((child) => child.props.dataElement === dataElement);\n    const key = dataElement || `${type}-${index}`;\n\n    if (!component) {\n      if (type === 'divider') {\n        component = <div className=\"divider\" />;\n      }\n\n      if (type === 'customPageOperation') {\n        component = <CustomLeftPanelOperations key={dataElement} pageNumbers={pageNumbers} {...item} />;\n      }\n    }\n    return component\n      ? React.cloneElement(component, {\n        key,\n      })\n      : null;\n  });\n}\n\n\nfunction LeftPanelPageTabsLarge(props) {\n  const { pageNumbers, onRotateClockwise, onRotateCounterClockwise, onInsert, onReplace, onExtractPages, onDeletePages, moveToTop, moveToBottom, multiPageManipulationControlsItems } = props;\n  return (\n    <div className={'PageControlContainer root'}>\n      <InitialLeftPanelPageTabs pageNumbers={pageNumbers} multiPageManipulationControlsItems={multiPageManipulationControlsItems} >\n        <LeftPanelPageTabsRotate onRotateClockwise={onRotateClockwise} onRotateCounterClockwise={onRotateCounterClockwise} dataElement=\"leftPanelPageTabsRotate\" />\n        <LeftPanelPageTabsInsert onInsert={onInsert} dataElement=\"leftPanelPageTabsInsert\" />\n        <LeftPanelPageTabsOperations onReplace={onReplace} onExtractPages={onExtractPages} onDeletePages={onDeletePages} dataElement=\"leftPanelPageTabsOperations\" />\n        <LeftPanelPageTabsMove moveToTop={moveToTop} moveToBottom={moveToBottom} dataElement=\"leftPanelPageTabsMove\" />\n      </InitialLeftPanelPageTabs>\n    </div>\n  );\n}\n\n\nexport default LeftPanelPageTabsLarge;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport selectors from 'selectors';\nimport actions from 'actions';\nimport {\n  deletePages,\n  extractPages,\n  noPagesSelectedWarning,\n  replace,\n  rotateClockwise,\n  rotateCounterClockwise,\n  movePagesToBottom,\n  movePagesToTop\n} from 'helpers/pageManipulationFunctions';\nimport LeftPanelPageTabsSmall from 'src/components/LeftPanelPageTabs/LeftPanelPageTabsSmall/LeftPanelPageTabsSmall';\nimport LeftPanelPageTabs from 'components/LeftPanelPageTabs/LeftPanelPageTabs/LeftPanelPageTabs';\nimport { workerTypes } from 'constants/types';\nimport core from 'src/core';\nimport LeftPanelPageTabsRotate from 'components/LeftPanelPageTabs/LeftPanelPageTabsRotate/LeftPanelPageTabsRotate';\nimport LeftPanelPageTabsLarge from './LeftPanelPageTabsLarge/LeftPanelPageTabsLarge';\nimport DataElements from 'constants/dataElement';\nimport { panelMinWidth } from 'constants/panel';\nimport { isMobile as isInMobile } from 'helpers/device';\nimport getRootNode from 'helpers/getRootNode';\n\n// Values come from the CSS\nconst WIDTH_MARGINS = 16 + 8 + 16 + 16 + 16 + 16;\n\nfunction LeftPanelPageTabsContainer({ parentElement }) {\n  const dispatch = useDispatch();\n  const isMobile = isInMobile();\n  const [\n    selectedPageIndexes,\n    panelWidth,\n    deleteModalEnabled,\n    multiPageManipulationControlsItems,\n    multiPageManipulationControlsSmall,\n    multiPageManipulationControlsLarge,\n    isDesktopOnlyMode,\n  ] = useSelector((state) => [\n    selectors.getSelectedThumbnailPageIndexes(state),\n    !parentElement || parentElement === 'leftPanel' ? selectors.getLeftPanelWidth(state) : selectors.getPanelWidth(state, parentElement),\n    selectors.pageDeletionConfirmationModalEnabled(state),\n    selectors.getMultiPageManipulationControlsItems(state),\n    selectors.getMultiPageManipulationControlsItemsSmall(state),\n    selectors.getMultiPageManipulationControlsItemsLarge(state),\n    selectors.isInDesktopOnlyMode(state),\n  ]);\n\n  const pageNumbers = selectedPageIndexes.map((index) => index + 1);\n\n  const openInsertPageModal = () => {\n    dispatch(actions.closeElement(DataElements.PAGE_MANIPULATION_OVERLAY));\n    dispatch(actions.openElement('insertPageModal'));\n  };\n\n  const onReplace = () => !noPagesSelectedWarning(pageNumbers, dispatch) && replace(dispatch);\n  const onExtractPages = () => !noPagesSelectedWarning(pageNumbers, dispatch) && extractPages(pageNumbers, dispatch);\n  const onDeletePages = () => !noPagesSelectedWarning(pageNumbers, dispatch) && deletePages(pageNumbers, dispatch, deleteModalEnabled);\n  const onRotateClockwise = () => !noPagesSelectedWarning(pageNumbers, dispatch) && rotateClockwise(pageNumbers);\n  const onRotateCounterClockwise = () => !noPagesSelectedWarning(pageNumbers, dispatch) && rotateCounterClockwise(pageNumbers);\n  const onInsert = () => !noPagesSelectedWarning(pageNumbers, dispatch) && openInsertPageModal();\n  const moveToTop = () => !noPagesSelectedWarning(pageNumbers, dispatch) && movePagesToTop(pageNumbers);\n  const moveToBottom = () => !noPagesSelectedWarning(pageNumbers, dispatch) && movePagesToBottom(pageNumbers);\n\n  const document = core.getDocument();\n  const documentType = document?.type;\n  const isXod = documentType === workerTypes.XOD;\n  const isOffice = documentType === workerTypes.OFFICE || documentType === workerTypes.LEGACY_OFFICE;\n\n  if (isXod || isOffice || document?.isWebViewerServerDocument()) {\n    return (\n      <div className={'PageControlContainer root small'}>\n        <LeftPanelPageTabsRotate onRotateClockwise={onRotateClockwise} onRotateCounterClockwise={onRotateCounterClockwise} />\n      </div>\n    );\n  }\n\n  const smallBreakPoint = 190;\n  const largeBreakPoint = 290;\n  let widthMinusMargins;\n  if (!isDesktopOnlyMode && isMobile) {\n    try {\n      const appRect = getRootNode().querySelector('.App').getBoundingClientRect();\n      widthMinusMargins = appRect.width - WIDTH_MARGINS;\n    } catch (e) {\n      widthMinusMargins = (panelWidth || panelMinWidth) - WIDTH_MARGINS;\n    }\n  } else {\n    widthMinusMargins = (panelWidth || panelMinWidth) - WIDTH_MARGINS;\n  }\n  const isPanelSmall = widthMinusMargins < smallBreakPoint;\n  const isPanelLarge = widthMinusMargins > largeBreakPoint;\n\n  const childProps = {\n    onReplace,\n    onExtractPages,\n    onDeletePages,\n    onRotateCounterClockwise,\n    onRotateClockwise,\n    onInsert,\n    moveToTop,\n    moveToBottom,\n    pageNumbers,\n  };\n\n  if (isPanelSmall) {\n    return <LeftPanelPageTabsSmall\n      {...childProps}\n      multiPageManipulationControlsItemsSmall={multiPageManipulationControlsSmall}\n    />;\n  }\n\n  if (isPanelLarge) {\n    return <LeftPanelPageTabsLarge\n      {...childProps}\n      multiPageManipulationControlsItems={multiPageManipulationControlsLarge}\n    />;\n  }\n\n\n  return (\n    <LeftPanelPageTabs\n      {...childProps}\n      multiPageManipulationControlsItems={multiPageManipulationControlsItems}\n    />\n  );\n}\n\nexport default LeftPanelPageTabsContainer;\n","import LeftPanelPageTabsContainer from './LeftPanelPageTabsContainer';\n\nexport default LeftPanelPageTabsContainer;","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Button from 'components/Button';\nimport getPageArrayFromString from 'helpers/getPageArrayFromString';\nimport selectors from 'selectors';\nimport actions from 'actions';\nimport pageNumberPlaceholder from 'constants/pageNumberPlaceholder';\nimport core from 'src/core';\nimport { useTranslation } from 'react-i18next';\nimport LeftPanelPageTabs from 'components/LeftPanelPageTabs';\nimport './DocumentControls.scss';\n\nfunction getPageString(selectedPageArray, pageLabels) {\n  let pagesToPrint = '';\n  const sortedPages = selectedPageArray.sort((a, b) => a - b);\n  let prevIndex = null;\n\n  for (let i = 0; sortedPages.length > i; i++) {\n    if (sortedPages[i + 1] === sortedPages[i] + 1) {\n      prevIndex = prevIndex !== null ? prevIndex : sortedPages[i];\n    } else if (prevIndex !== null) {\n      pagesToPrint = `${pagesToPrint}${pageLabels[prevIndex]}-${pageLabels[sortedPages[i]]}, `;\n      prevIndex = null;\n    } else {\n      pagesToPrint = `${pagesToPrint}${pageLabels[sortedPages[i]]}, `;\n    }\n  }\n\n  return pagesToPrint.slice(0, -2);\n}\n\nconst DocumentControls = ({ shouldShowControls, parentElement }) => {\n  const [t] = useTranslation();\n  const dispatch = useDispatch();\n\n  const [\n    selectedPageIndexes,\n    isDisabled,\n    pageLabels,\n    isThumbnailSelectingPages,\n  ] = useSelector((state) => [\n    selectors.getSelectedThumbnailPageIndexes(state),\n    selectors.isElementDisabled(state, 'documentControl'),\n    selectors.getPageLabels(state),\n    selectors.isThumbnailSelectingPages(state),\n  ]);\n\n  const initialPagesString = getPageString(selectedPageIndexes, pageLabels);\n\n  const [pageString, setPageString] = useState(initialPagesString);\n  const [previousPageString, setPreviousPageString] = useState(initialPagesString);\n\n  useEffect(() => {\n    setPageString(getPageString(selectedPageIndexes, pageLabels));\n  }, [setPageString, selectedPageIndexes, shouldShowControls, pageLabels]);\n\n  const onBlur = (e) => {\n    const selectedPagesString = e.target.value.replace(/ /g, '');\n    const pages = !selectedPagesString ? [] : getPageArrayFromString(selectedPagesString, pageLabels);\n    const pageIndexes = pages.map((page) => page - 1);\n\n    if (pages.length || !selectedPagesString) {\n      dispatch(actions.setSelectedPageThumbnails(pageIndexes));\n\n      const updatedString = getPageString(selectedPageIndexes, pageLabels);\n\n      setPageString(updatedString);\n      setPreviousPageString(updatedString);\n    } else {\n      setPageString(previousPageString);\n    }\n\n    if (selectedPageIndexes.length > 0 && !isThumbnailSelectingPages) {\n      // set a short timeout due to race condition caused by onBlur and\n      // changing the documentControlsButton based on isThumbnailSelectingPages\n      setTimeout(() => {\n        enableThumbnailSelectingPages();\n      }, 100);\n    }\n  };\n\n  const pageStringUpdate = (e) => {\n    setPageString(e.target.value);\n  };\n\n  const disableThumbnailSelectingPages = () => {\n    dispatch(actions.setSelectedPageThumbnails([core.getCurrentPage() - 1]));\n    dispatch(actions.setThumbnailSelectingPages(false));\n  };\n\n  const enableThumbnailSelectingPages = () => {\n    dispatch(actions.setThumbnailSelectingPages(true));\n  };\n\n  return isDisabled ? null : (\n    <div className={'documentControlsContainer'} data-element={'documentControl'}>\n      {shouldShowControls ? (\n        <div className={'documentControls'}>\n          <div className={'divider'}></div>\n          {isThumbnailSelectingPages && <LeftPanelPageTabs parentElement={parentElement}/>}\n          <div className={'documentControlsInput'}>\n            <input\n              onBlur={onBlur}\n              onChange={pageStringUpdate}\n              value={pageString}\n              placeholder={pageNumberPlaceholder}\n              aria-label={t('option.thumbnailPanel.enterPageNumbers')}\n              className=\"pagesInput\"\n              type=\"text\"\n            />\n            <div className={'documentControlsButton'}>\n              {!isThumbnailSelectingPages ? (\n                <Button\n                  img={'icon-tool-select-pages'}\n                  title={'option.documentControls.selectTooltip'}\n                  onClick={enableThumbnailSelectingPages}\n                  dataElement={'thumbMultiSelect'}\n                />\n              ) : (\n                <Button\n                  img={'icon-close'}\n                  title={'option.documentControls.closeTooltip'}\n                  onClick={disableThumbnailSelectingPages}\n                  dataElement={'thumbCloseMultiSelect'}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nDocumentControls.propTypes = {\n  isDisabled: PropTypes.bool,\n  pageLabels: PropTypes.arrayOf(PropTypes.string),\n  toggleDocumentControl: PropTypes.func,\n  shouldShowControls: PropTypes.bool,\n};\n\nexport default DocumentControls;\n","import DocumentControls from './DocumentControls';\n\nexport default DocumentControls;","import core from 'core';\nimport actions from 'actions';\nimport extractPagesWithAnnotations from './extractPagesWithAnnotations';\nimport fireEvent from './fireEvent';\nimport Events from 'constants/events';\nimport DataElements from 'src/constants/dataElement';\n\nexport const extractPagesToMerge = (pageNumbers) => {\n  // extract pages and put the data on the iFrame window element for another instance of WebViewer to access\n  window.extractedDataPromise = extractPagesWithAnnotations(pageNumbers);\n  window.pagesExtracted = pageNumbers;\n};\n\nexport const mergeDocument = (srcToMerge, mergeToPage, shouldFireEvent = true) => (dispatch) => {\n  dispatch(actions.openElement(DataElements.LOADING_MODAL));\n\n  return new Promise((resolve, reject) => {\n    core.mergeDocument(srcToMerge, mergeToPage).then((mergeResults) => {\n      dispatch(actions.closeElement(DataElements.LOADING_MODAL));\n      core.setCurrentPage(mergeToPage);\n\n      if (shouldFireEvent) {\n        fireEvent(Events.DOCUMENT_MERGED, mergeResults);\n      }\n\n      resolve(mergeResults);\n    }).catch((err) => {\n      reject(err);\n      dispatch(actions.closeElement(DataElements.LOADING_MODAL));\n    });\n  });\n};\n\nexport const mergeExternalWebViewerDocument = (viewerID, mergeToPage) => (dispatch) => {\n  return new Promise((resolve, reject) => {\n    const otherWebViewerIframe = window.parent.document.querySelector(`#${viewerID}`);\n    if (!otherWebViewerIframe) {\n      console.warn('Could not find other instance of WebViewer');\n      reject();\n    }\n\n    const extractedDataPromise = otherWebViewerIframe.contentWindow.extractedDataPromise;\n    if (!extractedDataPromise) {\n      console.warn('Could not retrieve data from other instance of WebViewer');\n      reject();\n    }\n\n    dispatch(actions.openElement(DataElements.LOADING_MODAL));\n    extractedDataPromise.then((docToMerge) => {\n      dispatch(mergeDocument(docToMerge, mergeToPage, false)).then(({ filename, pages }) => {\n        fireEvent(Events.DOCUMENT_MERGED, { filename, pages: otherWebViewerIframe.contentWindow.pagesExtracted });\n        dispatch(actions.closeElement(DataElements.LOADING_MODAL));\n        resolve({ filename, pages });\n      });\n    }).catch((err) => {\n      dispatch(actions.closeElement(DataElements.LOADING_MODAL));\n      reject(err);\n    });\n  });\n};","import debounce from 'lodash/debounce';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { List } from 'react-virtualized';\nimport Measure from 'react-measure';\nimport classNames from 'classnames';\nimport { isIE11 } from 'helpers/device';\n\nimport Thumbnail from 'components/Thumbnail';\nimport DocumentControls from 'components/DocumentControls';\nimport Button from 'components/Button';\n\nimport core from 'core';\nimport { extractPagesToMerge, mergeDocument, mergeExternalWebViewerDocument } from 'helpers/pageManipulation';\nimport selectors from 'selectors';\nimport actions from 'actions';\nimport Events from 'constants/events';\nimport DataElements from 'constants/dataElement';\nimport fireEvent from 'helpers/fireEvent';\n\nimport './ThumbnailsPanel.scss';\nimport getRootNode from 'helpers/getRootNode';\nimport { useTranslation } from 'react-i18next';\n\nconst dataTransferWebViewerFrameKey = 'dataTransferWebViewerFrame';\n\nconst ZOOM_RANGE_MIN = '100';\nconst ZOOM_RANGE_MAX = '1000';\nconst ZOOM_RANGE_STEP = '50';\nconst MAX_COLUMNS = 16;\n\nconst hoverAreaHeight = 25;\n\nconst ThumbnailsPanel = ({ panelSelector }) => {\n  const [\n    isLeftPanelOpen,\n    isDisabled,\n    totalPages,\n    currentPage,\n    selectedPageIndexes,\n    isThumbnailMergingEnabled,\n    isThumbnailReorderingEnabled,\n    isMultipleViewerMerging,\n    isThumbnailControlDisabled,\n    isThumbnailSliderDisabled,\n    isReaderMode,\n    isDocumentReadOnly,\n    totalPagesFromSecondaryDocumentViewer,\n    activeDocumentViewerKey,\n    isRightClickEnabled,\n  ] = useSelector(\n    (state) => [\n      selectors.isElementOpen(state, 'leftPanel'),\n      selectors.isElementDisabled(state, 'thumbnailsPanel'),\n      selectors.getTotalPages(state),\n      selectors.getCurrentPage(state),\n      selectors.getSelectedThumbnailPageIndexes(state),\n      selectors.getIsThumbnailMergingEnabled(state),\n      selectors.getIsThumbnailReorderingEnabled(state),\n      selectors.getIsMultipleViewerMerging(state),\n      selectors.isElementDisabled(state, 'thumbnailControl'),\n      selectors.isElementDisabled(state, 'thumbnailsSizeSlider'),\n      selectors.isReaderMode(state),\n      selectors.isDocumentReadOnly(state),\n      selectors.getTotalPages(state, 2),\n      selectors.getActiveDocumentViewerKey(state),\n      selectors.openingPageManipulationOverlayByRightClickEnabled(state),\n    ],\n    shallowEqual,\n  );\n\n  const [t] = useTranslation();\n\n  const listRef = useRef();\n  const pendingThumbs = useRef([]);\n  const thumbs = useRef([]);\n  const afterMovePageNumber = useRef(null);\n\n  const [isOfficeEditor, setIsOfficeEditor] = useState(false);\n  const [canLoad, setCanLoad] = useState(true);\n  const [height, setHeight] = useState(0);\n  const [width, setWidth] = useState(0);\n  const [draggingOverPageIndex, setDraggingOverPageIndex] = useState(null);\n  const [isDraggingToPreviousPage, setDraggingToPreviousPage] = useState(false);\n  const [numberOfColumns, setNumberOfColumns] = useState(1);\n  const [isDragging, setIsDragging] = useState(false);\n\n  const [thumbnailSize, setThumbnailSize] = useState(150);\n  const [lastTimeTriggered, setLastTimeTriggered] = useState(0);\n  const [globalIndex, setGlobalIndex] = useState(0);\n  const pageCount = activeDocumentViewerKey === 2 ? totalPagesFromSecondaryDocumentViewer : totalPages;\n\n  const dispatch = useDispatch();\n\n  // If memory becomes an issue, change this to use pageNumbers.\n  // Instead of a debounced drawAnnotations function, perhaps use\n  // a function that first checks for the pageNumber in this map\n  // before calling drawAnnotations on a page.\n  let activeThumbRenders = {};\n\n  const getThumbnailSize = (pageWidth, pageHeight) => {\n    let width;\n    let height;\n    let ratio;\n\n    if (pageWidth > pageHeight) {\n      ratio = pageWidth / thumbnailSize;\n      width = thumbnailSize;\n      height = Math.round(pageHeight / ratio);\n    } else {\n      ratio = pageHeight / thumbnailSize;\n      width = Math.round(pageWidth / ratio); // Chrome has trouble displaying borders of non integer width canvases.\n      height = thumbnailSize;\n    }\n\n    return {\n      width,\n      height,\n    };\n  };\n\n  const updateAnnotations = (pageIndex) => {\n    const thumbContainer = thumbs.current && thumbs.current[pageIndex] && thumbs.current[pageIndex].element;\n    if (!thumbContainer) {\n      return;\n    }\n\n    const pageNumber = pageIndex + 1;\n    const pageWidth = core.getPageWidth(pageNumber);\n    const pageHeight = core.getPageHeight(pageNumber);\n\n    const { width, height } = getThumbnailSize(pageWidth, pageHeight);\n\n    const annotCanvas = thumbContainer.querySelector('.annotation-image') || document.createElement('canvas');\n    annotCanvas.className = 'annotation-image';\n    annotCanvas.style.maxWidth = `${thumbnailSize}px`;\n    annotCanvas.style.maxHeight = `${thumbnailSize}px`;\n    const ctx = annotCanvas.getContext('2d');\n\n    let zoom = 1;\n    let rotation = core.getCompleteRotation(pageNumber);\n    if (rotation < 0) {\n      rotation += 4;\n    }\n    const multiplier = window.Core.getCanvasMultiplier();\n\n    if (rotation % 2 === 0) {\n      annotCanvas.width = width;\n      annotCanvas.height = height;\n      zoom = annotCanvas.width / pageWidth;\n      zoom /= multiplier;\n    } else {\n      annotCanvas.width = height;\n      annotCanvas.height = width;\n\n      zoom = annotCanvas.height / pageWidth;\n      zoom /= multiplier;\n    }\n\n    thumbContainer.appendChild(annotCanvas);\n    core.setAnnotationCanvasTransform(ctx, zoom, rotation);\n\n    let options = {\n      pageNumber,\n      overrideCanvas: annotCanvas,\n    };\n\n    const thumb = thumbContainer.querySelector('.page-image');\n\n    if (thumb) {\n      options = {\n        ...options,\n        overridePageRotation: rotation,\n        overridePageCanvas: thumb,\n      };\n    } else {\n      return;\n    }\n\n    if (!activeThumbRenders[pageNumber]) {\n      activeThumbRenders[pageNumber] = debounce(core.drawAnnotations, 112);\n    }\n    const debouncedDraw = activeThumbRenders[pageNumber];\n    debouncedDraw(options);\n  };\n\n  useEffect(() => {\n    const onBeginRendering = () => {\n      setCanLoad(false);\n    };\n\n    const onFinishedRendering = (needsMoreRendering) => {\n      if (!needsMoreRendering) {\n        setCanLoad(true);\n      }\n    };\n\n    const onDocumentLoaded = () => {\n      if (core.getDocument()?.getType() === 'officeEditor') {\n        setIsOfficeEditor(true);\n      } else {\n        setIsOfficeEditor(false);\n      }\n      activeThumbRenders = {};\n      dispatch(actions.setSelectedPageThumbnails([]));\n    };\n\n    const onPageComplete = () => {\n      if (afterMovePageNumber.current) {\n        core.setCurrentPage(afterMovePageNumber.current);\n        afterMovePageNumber.current = null;\n      }\n    };\n\n    core.addEventListener('beginRendering', onBeginRendering);\n    core.addEventListener('finishedRendering', onFinishedRendering);\n    core.addEventListener('documentLoaded', onDocumentLoaded);\n    core.addEventListener('pageComplete', onPageComplete);\n\n\n    // The document might have already been loaded before this component is mounted.\n    // If document is already loaded, call 'onDocumentLoaded()' manually to update the state properly.\n    if (core.getDocument()) {\n      onDocumentLoaded();\n    }\n\n    return () => {\n      core.removeEventListener('beginRendering', onBeginRendering);\n      core.removeEventListener('finishedRendering', onFinishedRendering);\n      core.removeEventListener('documentLoaded', onDocumentLoaded);\n      core.removeEventListener('pageComplete', onPageComplete);\n    };\n  }, []);\n\n  useEffect(() => {\n    const onPagesUpdated = (changes) => {\n      if (!changes) {\n        return;\n      }\n      let updatedPagesIndexes = Array.from(selectedPageIndexes);\n\n      if (changes.removed) {\n        updatedPagesIndexes = updatedPagesIndexes.filter((pageIndex) => changes.removed.indexOf(pageIndex + 1) === -1);\n      }\n\n      if (changes.moved) {\n        updatedPagesIndexes = updatedPagesIndexes.map((pageIndex) => (changes.moved[pageIndex + 1] ? changes.moved[pageIndex + 1] - 1 : pageIndex),\n        );\n      }\n\n      dispatch(actions.setSelectedPageThumbnails(updatedPagesIndexes));\n    };\n\n    core.addEventListener('pagesUpdated', onPagesUpdated);\n\n    return () => core.removeEventListener('pagesUpdated', onPagesUpdated);\n  }, [selectedPageIndexes]);\n\n  useEffect(() => {\n    listRef.current?.scrollToRow(Math.floor((currentPage - 1) / numberOfColumns));\n    const onAnnotationChanged = (annots) => {\n      const indices = [];\n\n      annots.forEach((annot) => {\n        const pageIndex = annot.PageNumber - 1;\n        if (!annot.Listable || indices.indexOf(pageIndex) > -1) {\n          return;\n        }\n        indices.push(pageIndex);\n\n        updateAnnotations(pageIndex);\n      });\n    };\n\n    const onPageNumberUpdated = (pageNumber) => {\n      const pageIndex = pageNumber - 1;\n      listRef.current?.scrollToRow(Math.floor(pageIndex / numberOfColumns));\n    };\n\n    core.addEventListener('pageNumberUpdated', onPageNumberUpdated);\n    core.addEventListener('annotationChanged', onAnnotationChanged);\n    core.addEventListener('annotationHidden', onAnnotationChanged);\n\n    return () => {\n      core.removeEventListener('pageNumberUpdated', onPageNumberUpdated);\n      core.removeEventListener('annotationChanged', onAnnotationChanged);\n      core.removeEventListener('annotationHidden', onAnnotationChanged);\n    };\n  }, [thumbnailSize, numberOfColumns]);\n\n  useEffect(() => {\n    if (isReaderMode || isDocumentReadOnly) {\n      dispatch(actions.setSelectedPageThumbnails([]));\n      dispatch(actions.setThumbnailSelectingPages(false));\n    }\n  }, [isReaderMode, isDocumentReadOnly]);\n\n  // if disabled, or is office editor or left panel is not open when we are not in customize mode, return\n  if (isDisabled || isOfficeEditor || (!isLeftPanelOpen && !panelSelector)) {\n    return null;\n  }\n  const onDragEnd = () => {\n    setIsDragging(false);\n    setDraggingOverPageIndex(null);\n  };\n\n  const scrollToRowHelper = (index, change, time) => {\n    const now = new Date().getTime();\n    if (index < pageCount - 1 && index > 0 && now - lastTimeTriggered >= time) {\n      listRef.current?.scrollToRow(Math.floor((index + change) / numberOfColumns));\n      setLastTimeTriggered(now);\n      return index + change;\n    }\n    return index;\n  };\n\n  const onDragOver = (e, index) => {\n    // 'preventDefault' to prevent opening pdf dropped in and 'stopPropagation' to keep parent from opening pdf\n    e.preventDefault();\n    e.stopPropagation();\n    if (!isThumbnailReorderingEnabled && !isThumbnailMergingEnabled) {\n      return;\n    }\n\n    const thumbnail = e.target.getBoundingClientRect();\n    if (numberOfColumns > 1) {\n      // row with more than 1 thumbnail so user are dragging to the left and right\n      setDraggingToPreviousPage(!(e.pageX > thumbnail.x + thumbnail.width / 2));\n    } else {\n      setDraggingToPreviousPage(!(e.pageY > thumbnail.y + thumbnail.height / 2));\n    }\n\n    setDraggingOverPageIndex(index);\n    const virtualizedThumbnailContainerElement = getRootNode().querySelector('#virtualized-thumbnails-container');\n    const { y, bottom } = virtualizedThumbnailContainerElement.getBoundingClientRect();\n\n    if (e.pageY < y + hoverAreaHeight * 4) {\n      setGlobalIndex(scrollToRowHelper(index, -1, 400));\n    } else if (e.pageY > bottom - hoverAreaHeight * 4) {\n      setGlobalIndex(scrollToRowHelper(index, 1, 400));\n    }\n  };\n\n  const scrollDown = () => {\n    setGlobalIndex(scrollToRowHelper(globalIndex, 1, 200));\n  };\n  const scrollUp = () => {\n    setGlobalIndex(scrollToRowHelper(globalIndex, -1, 200));\n  };\n\n  const onDragStart = (e, index) => {\n    setGlobalIndex(index);\n    setIsDragging(true);\n    const draggingSelectedPage = selectedPageIndexes.some((i) => i === index);\n    const pagesToMove = draggingSelectedPage ? selectedPageIndexes.map((index) => index + 1) : [index + 1];\n    fireEvent(Events.THUMBNAIL_DRAGGED);\n    // need to set 'text' to empty for drag to work in FireFox and mobile\n    e.dataTransfer.setData('text', '');\n\n    if (pagesToMove.length > 1) {\n      // can't set to null so set to new instance of an image\n      e.dataTransfer.setDragImage(new Image(), 0, 0);\n    }\n\n    if (isThumbnailMergingEnabled && isMultipleViewerMerging) {\n      e.dataTransfer.dropEffect = 'move';\n      e.dataTransfer.effectAllowed = 'all';\n      e.dataTransfer.setData(dataTransferWebViewerFrameKey, window.frameElement.id);\n      extractPagesToMerge(pagesToMove);\n    }\n\n    if (!draggingSelectedPage) {\n      dispatch(actions.setSelectedPageThumbnails([index]));\n    }\n\n    core.setCurrentPage(index + 1);\n  };\n\n  const onDrop = (e) => {\n    e.preventDefault();\n    const { files } = e.dataTransfer;\n    const insertTo = isDraggingToPreviousPage ? draggingOverPageIndex + 1 : draggingOverPageIndex + 2;\n    let externalPageWebViewerFrameId;\n    if (!isIE11) {\n      // at this time of writing, IE11 does not really have support for getData\n      externalPageWebViewerFrameId = e.dataTransfer.getData(dataTransferWebViewerFrameKey);\n    }\n    const mergingDocument =\n      (externalPageWebViewerFrameId && window.frameElement.id !== externalPageWebViewerFrameId) || files.length;\n    const currentPageIndex = currentPage - 1;\n\n    if (isThumbnailMergingEnabled && mergingDocument) {\n      if (externalPageWebViewerFrameId && window.frameElement.id !== externalPageWebViewerFrameId) {\n        dispatch(mergeExternalWebViewerDocument(externalPageWebViewerFrameId, insertTo));\n      } else if (files.length) {\n        Array.from(files).forEach((file) => {\n          dispatch(mergeDocument(file, insertTo));\n        });\n      }\n    } else if (isThumbnailReorderingEnabled && !mergingDocument) {\n      if (draggingOverPageIndex !== null) {\n        const targetPageNumber = isDraggingToPreviousPage ? draggingOverPageIndex + 1 : draggingOverPageIndex + 2;\n        const draggingSelectedPage = selectedPageIndexes.some((i) => i === currentPageIndex);\n        const pageNumbersToMove = draggingSelectedPage ? selectedPageIndexes.map((i) => i + 1) : [currentPage];\n        afterMovePageNumber.current = targetPageNumber - pageNumbersToMove.filter((p) => p < targetPageNumber).length;\n        core.movePages(pageNumbersToMove, targetPageNumber);\n        const updatedPagesNumbers = [];\n        for (let offset = 0; offset < pageNumbersToMove.length; offset++) {\n          updatedPagesNumbers.push(afterMovePageNumber.current + offset);\n        }\n        fireEvent(Events.THUMBNAIL_DROPPED, { pageNumbersBeforeMove: pageNumbersToMove, pagesNumbersAfterMove: updatedPagesNumbers, numberOfPagesMoved: updatedPagesNumbers.length });\n      }\n    }\n    setDraggingOverPageIndex(null);\n    setIsDragging(false);\n  };\n\n  const onLoad = (pageIndex, element, id) => {\n    if (!thumbIsLoaded(pageIndex) && !thumbIsPending(pageIndex)) {\n      thumbs.current[pageIndex] = {\n        element,\n        loaded: false,\n      };\n\n      pendingThumbs.current.push({\n        pageIndex,\n        id,\n      });\n    }\n  };\n\n  const removeFromPendingThumbs = (pageIndex) => {\n    const index = getPendingThumbIndex(pageIndex);\n    if (index !== -1) {\n      pendingThumbs.current.splice(index, 1);\n    }\n  };\n\n  const thumbIsLoaded = (pageIndex) => thumbs.current[pageIndex]?.loaded;\n\n  const thumbIsPending = (pageIndex) => getPendingThumbIndex(pageIndex) !== -1;\n\n  const onCancel = (pageIndex) => {\n    const index = getPendingThumbIndex(pageIndex);\n    if (index !== -1) {\n      core.cancelLoadThumbnail(pendingThumbs.current[index].id);\n      pendingThumbs.current.splice(index, 1);\n    }\n  };\n\n  const onRightClick = (event, pageIndex) => {\n    event.preventDefault();\n    core.setCurrentPage(pageIndex + 1);\n    if (!selectedPageIndexes.includes(pageIndex)) {\n      dispatch(actions.setSelectedPageThumbnails([pageIndex]));\n    }\n\n    if (isReaderMode || isDocumentReadOnly) {\n      return;\n    }\n\n    dispatch(actions.setPageManipulationOverlayAlternativePosition({ left: event.pageX, right: 'auto', top: event.pageY }));\n    dispatch(actions.openElements([DataElements.PAGE_MANIPULATION_OVERLAY]));\n  };\n\n  const getPendingThumbIndex = (pageIndex) => pendingThumbs.current.findIndex((thumbStatus) => thumbStatus.pageIndex === pageIndex);\n\n  const onRemove = (pageIndex) => {\n    onCancel(pageIndex);\n    const canvases = thumbs.current[pageIndex]?.element?.querySelectorAll('canvas');\n    if (canvases?.length) {\n      canvases.forEach((c) => {\n        c.height = 0;\n        c.width = 0;\n      });\n    }\n\n    if (activeThumbRenders[pageIndex]) {\n      activeThumbRenders[pageIndex].cancel();\n    }\n    thumbs.current[pageIndex] = null;\n  };\n\n  const renderThumbnails = ({ index, key, style }) => {\n    const className = classNames({\n      columnsOfThumbnails: numberOfColumns > 1,\n      row: true,\n    });\n    const allowPageOperationsUI = !(isReaderMode || isDocumentReadOnly);\n\n    return (\n      <div role=\"row\" aria-label=\"row\" className={className} key={key} style={style}>\n        {new Array(numberOfColumns).fill().map((_, columnIndex) => {\n          const thumbIndex = index * numberOfColumns + columnIndex;\n          const allowDragAndDrop = allowPageOperationsUI && (isThumbnailMergingEnabled || isThumbnailReorderingEnabled);\n          const showPlaceHolder = allowDragAndDrop && draggingOverPageIndex === thumbIndex;\n\n          return thumbIndex < pageCount ? (\n            <React.Fragment key={thumbIndex}>\n              {(numberOfColumns > 1 || thumbIndex === 0) && showPlaceHolder && isDraggingToPreviousPage && <div key={`placeholder1-${thumbIndex}`} className=\"thumbnailPlaceholder\" />}\n              <div key={thumbIndex} role=\"cell\" onDragEnd={onDragEnd} className=\"cellThumbContainer\" onContextMenu={(e) => isRightClickEnabled && onRightClick(e, thumbIndex)}>\n                <Thumbnail\n                  isDraggable={allowDragAndDrop}\n                  isSelected={selectedPageIndexes.includes(thumbIndex)}\n                  index={thumbIndex}\n                  canLoad={canLoad}\n                  onLoad={onLoad}\n                  onCancel={onCancel}\n                  onRemove={onRemove}\n                  onDragStart={onDragStart}\n                  onDragOver={onDragOver}\n                  onFinishLoading={removeFromPendingThumbs}\n                  updateAnnotations={updateAnnotations}\n                  shouldShowControls={allowPageOperationsUI}\n                  thumbnailSize={thumbnailSize}\n                  panelSelector={panelSelector}\n                />\n              </div>\n              {showPlaceHolder && !isDraggingToPreviousPage && <div key={`placeholder2-${thumbIndex}`} className=\"thumbnailPlaceholder\" />}\n            </React.Fragment>\n          ) : null;\n        })}\n      </div>\n    );\n  };\n\n  const onPanelResize = ({ bounds }) => {\n    setHeight(bounds.height);\n    setWidth(bounds.width);\n    setNumberOfColumns(Math.min(MAX_COLUMNS, Math.max(1, Math.floor(bounds.width / thumbnailSize))));\n  };\n\n  const updateNumberOfColumns = () => {\n    setNumberOfColumns(Math.min(MAX_COLUMNS, Math.max(1, Math.floor(width / thumbnailSize))));\n  };\n\n  const thumbnailHeight = isThumbnailControlDisabled ? Number(thumbnailSize) + 50 : Number(thumbnailSize) + 80;\n  const shouldShowControls = !(isReaderMode || isDocumentReadOnly);\n  const thumbnailAutoScrollAreaStyle = {\n    'height': `${hoverAreaHeight}px`,\n  };\n\n  return (\n    <React.Fragment>\n      {!isThumbnailSliderDisabled && <div data-element=\"thumbnailsSizeSlider\" className=\"thumbnail-slider-container\">\n        <Button\n          img=\"icon-zoom-thumb-out\"\n          title=\"action.zoomOut\"\n          hideTooltipShortcut\n          onClick={() => {\n            if (thumbnailSize - Number(ZOOM_RANGE_STEP) > Number(ZOOM_RANGE_STEP)) {\n              setThumbnailSize(thumbnailSize - Number(ZOOM_RANGE_STEP));\n              updateNumberOfColumns();\n            }\n          }}\n          dataElement=\"zoomThumbOutButton\"\n        />\n        <input\n          role='slider'\n          type=\"range\"\n          aria-label='thumbnail size slider'\n          min={ZOOM_RANGE_MIN}\n          max={ZOOM_RANGE_MAX}\n          value={thumbnailSize}\n          aria-valuemin={ZOOM_RANGE_MIN}\n          aria-valuemax={ZOOM_RANGE_MAX}\n          aria-valuenow={thumbnailSize}\n          onChange={(e) => {\n            setThumbnailSize(Number(e.target.value));\n            updateNumberOfColumns();\n          }}\n          step={ZOOM_RANGE_STEP}\n          className=\"thumbnail-slider\"\n          id=\"thumbnailSize\"\n        />\n        <Button\n          img=\"icon-zoom-thumb-in\"\n          title=\"action.zoomIn\"\n          hideTooltipShortcut\n          onClick={() => {\n            if (thumbnailSize + Number(ZOOM_RANGE_STEP) < 1001) {\n              setThumbnailSize(thumbnailSize + Number(ZOOM_RANGE_STEP));\n              updateNumberOfColumns();\n            }\n          }}\n          dataElement=\"zoomThumbInButton\"\n        />\n      </div>}\n      <Measure bounds onResize={onPanelResize} key={thumbnailSize}>\n        {({ measureRef }) => (\n          <div className={`Panel ThumbnailsPanel ${panelSelector}`} id=\"virtualized-thumbnails-container\" data-element=\"thumbnailsPanel\" onDrop={onDrop} ref={measureRef}>\n            <div className=\"virtualized-thumbnails-container\">\n              {isDragging ?\n                <div className=\"thumbnailAutoScrollArea\" onDragOver={scrollUp} style={thumbnailAutoScrollAreaStyle}></div> : ''\n              }\n              <List\n                ref={listRef}\n                height={height}\n                width={width}\n                rowHeight={thumbnailHeight}\n                // Round it to a whole number because React-Virtualized list library doesn't round it for us and throws errors when rendering non whole number rows\n                // use ceiling rather than floor so that an extra row can be created in case the items can't be evenly distributed between rows\n                rowCount={Math.ceil(pageCount / numberOfColumns)}\n                rowRenderer={renderThumbnails}\n                overscanRowCount={3}\n                className={'thumbnailsList'}\n                style={{ outline: 'none' }}\n                // Ensure we show the current page in the thumbnails when we open the panel\n                scrollToIndex={Math.floor((currentPage - 1) / numberOfColumns)}\n                role='grid'\n                aria-label={t('component.thumbnailsPanel')}\n              />\n              {isDragging ?\n                <div className=\"thumbnailAutoScrollArea\" onDragOver={scrollDown} style={{ ...thumbnailAutoScrollAreaStyle, 'bottom': '70px' }}></div> : ''\n              }\n            </div>\n          </div>\n        )}\n      </Measure>\n      <DocumentControls shouldShowControls={shouldShowControls} parentElement={panelSelector}/>\n    </React.Fragment>\n  );\n};\n\nexport default ThumbnailsPanel;\n","import ThumbnailsPanel from './ThumbnailsPanel';\n\nexport default ThumbnailsPanel;\n"],"sourceRoot":""}