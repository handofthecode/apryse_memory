{"version":3,"sources":["webpack:///./src/ui/node_modules/react-virtualized/dist/es/Grid/utils/calculateSizeAndPositionDataAndUpdateScrollOffset.js","webpack:///./src/ui/node_modules/react-virtualized/dist/es/Grid/utils/CellSizeAndPositionManager.js","webpack:///./src/ui/node_modules/react-virtualized/dist/es/Grid/utils/maxElementSize.js","webpack:///./src/ui/node_modules/react-virtualized/dist/es/Grid/utils/ScalingCellSizeAndPositionManager.js","webpack:///./src/ui/node_modules/react-virtualized/dist/es/utils/createCallbackMemoizer.js","webpack:///./src/ui/node_modules/react-virtualized/dist/es/Grid/utils/updateScrollIndexHelper.js","webpack:///./src/ui/node_modules/react-virtualized/dist/es/utils/animationFrame.js","webpack:///./src/ui/node_modules/react-virtualized/dist/es/Grid/Grid.js","webpack:///./src/ui/node_modules/react-virtualized/dist/es/utils/requestAnimationTimeout.js","webpack:///./src/ui/node_modules/react-virtualized/dist/es/Grid/defaultOverscanIndicesGetter.js","webpack:///./src/ui/node_modules/react-virtualized/dist/es/Grid/defaultCellRangeRenderer.js","webpack:///./src/ui/node_modules/react-virtualized/dist/es/Grid/accessibilityOverscanIndicesGetter.js","webpack:///./src/ui/node_modules/react-virtualized/dist/es/ArrowKeyStepper/types.js","webpack:///./src/ui/node_modules/react-virtualized/dist/es/ArrowKeyStepper/ArrowKeyStepper.js","webpack:///./src/ui/node_modules/react-virtualized/dist/es/AutoSizer/AutoSizer.js","webpack:///./src/ui/node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurer.js","webpack:///./src/ui/node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurerCache.js","webpack:///./src/ui/node_modules/react-virtualized/dist/es/Collection/CollectionView.js","webpack:///./src/ui/node_modules/react-virtualized/dist/es/Collection/Section.js","webpack:///./src/ui/node_modules/react-virtualized/dist/es/Collection/SectionManager.js","webpack:///./src/ui/node_modules/react-virtualized/dist/es/utils/getUpdatedOffsetForIndex.js","webpack:///./src/ui/node_modules/react-virtualized/dist/es/Collection/Collection.js","webpack:///./src/ui/node_modules/react-virtualized/dist/es/Collection/utils/calculateSizeAndPositionData.js","webpack:///./src/ui/node_modules/react-virtualized/dist/es/Collection/index.js","webpack:///./src/ui/node_modules/react-virtualized/dist/es/ColumnSizer/ColumnSizer.js","webpack:///./src/ui/node_modules/react-virtualized/dist/es/ColumnSizer/index.js","webpack:///./src/ui/node_modules/react-virtualized/dist/es/InfiniteLoader/InfiniteLoader.js","webpack:///./src/ui/node_modules/react-virtualized/dist/es/InfiniteLoader/index.js","webpack:///./src/ui/node_modules/react-virtualized/dist/es/List/List.js","webpack:///./src/ui/node_modules/react-virtualized/dist/es/vendor/binarySearchBounds.js","webpack:///./src/ui/node_modules/react-virtualized/dist/es/vendor/intervalTree.js","webpack:///./src/ui/node_modules/react-virtualized/dist/es/Masonry/PositionCache.js","webpack:///./src/ui/node_modules/react-virtualized/dist/es/Masonry/Masonry.js","webpack:///./src/ui/node_modules/react-virtualized/dist/es/Masonry/index.js","webpack:///./src/ui/node_modules/react-virtualized/dist/es/MultiGrid/CellMeasurerCacheDecorator.js","webpack:///./src/ui/node_modules/react-virtualized/dist/es/MultiGrid/MultiGrid.js","webpack:///./src/ui/node_modules/react-virtualized/dist/es/ScrollSync/ScrollSync.js","webpack:///./src/ui/node_modules/react-virtualized/dist/es/Table/defaultHeaderRowRenderer.js","webpack:///./src/ui/node_modules/react-virtualized/dist/es/Table/SortDirection.js","webpack:///./src/ui/node_modules/react-virtualized/dist/es/Table/SortIndicator.js","webpack:///./src/ui/node_modules/react-virtualized/dist/es/Table/defaultHeaderRenderer.js","webpack:///./src/ui/node_modules/react-virtualized/dist/es/Table/defaultRowRenderer.js","webpack:///./src/ui/node_modules/react-virtualized/dist/es/Table/Column.js","webpack:///./src/ui/node_modules/react-virtualized/dist/es/Table/Table.js","webpack:///./src/ui/node_modules/react-virtualized/dist/es/Table/defaultCellDataGetter.js","webpack:///./src/ui/node_modules/react-virtualized/dist/es/Table/defaultCellRenderer.js","webpack:///./src/ui/node_modules/react-virtualized/dist/es/Table/index.js","webpack:///./src/ui/node_modules/react-virtualized/dist/es/WindowScroller/utils/onScroll.js","webpack:///./src/ui/node_modules/react-virtualized/dist/es/WindowScroller/utils/dimensions.js","webpack:///./src/ui/node_modules/react-virtualized/dist/es/WindowScroller/WindowScroller.js","webpack:///./src/ui/node_modules/react-virtualized/dist/es/vendor/detectElementResize.js"],"names":["calculateSizeAndPositionDataAndUpdateScrollOffset","_ref","cellCount","cellSize","computeMetadataCallback","computeMetadataCallbackProps","nextCellsCount","nextCellSize","nextScrollToIndex","scrollToIndex","updateScrollOffsetForScrollToIndex","CellSizeAndPositionManager","cellSizeGetter","estimatedCellSize","this","_cellSizeGetter","_cellCount","_estimatedCellSize","key","value","_ref2","_lastMeasuredIndex","index","Error","concat","lastMeasuredCellSizeAndPosition","getSizeAndPositionOfLastMeasuredCell","offset","size","i","undefined","isNaN","_cellSizeAndPositionData","_lastBatchedIndex","_ref3","_ref3$align","align","containerSize","currentOffset","targetIndex","idealOffset","datum","getSizeAndPositionOfCell","maxOffset","minOffset","Math","max","min","totalSize","getTotalSize","params","start","_findNearestCell","stop","high","low","middle","floor","interval","_binarySearch","lastMeasuredIndex","_exponentialSearch","getMaxElementSize","window","chrome","ScalingCellSizeAndPositionManager","_ref$maxScrollSize","maxScrollSize","_cellSizeAndPositionManager","_maxScrollSize","configure","getCellCount","getEstimatedCellSize","getLastMeasuredIndex","safeTotalSize","offsetPercentage","_getOffsetPercentage","round","_safeOffsetToOffset","getUpdatedOffsetForIndex","_offsetToSafeOffset","_ref4","getVisibleCellRange","resetCell","_ref5","_ref6","_ref7","createCallbackMemoizer","requireAllKeys","arguments","length","cachedIndices","callback","indices","keys","Object","allInitialized","every","Array","isArray","indexChanged","some","cachedValue","join","updateScrollIndexHelper","cellSizeAndPositionManager","previousCellsCount","previousCellSize","previousScrollToAlignment","previousScrollToIndex","previousSize","scrollOffset","scrollToAlignment","sizeJustIncreasedFromZero","updateScrollIndexCallback","hasScrollToIndex","win","_class","_temp","request","self","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","cancel","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","id","clearTimeout","raf","caf","frame","delay","Promise","resolve","then","Date","now","timeout","call","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","source","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","SCROLL_POSITION_CHANGE_REASONS","_React$PureComponent","Grid","props","_this","_disablePointerEventsTimeoutId","setState","isScrolling","needToResetStyleCache","onSectionRendered","_onGridRenderedMemoizer","columnOverscanStartIndex","_columnStartIndex","columnOverscanStopIndex","_columnStopIndex","columnStartIndex","_renderedColumnStartIndex","columnStopIndex","_renderedColumnStopIndex","rowOverscanStartIndex","_rowStartIndex","rowOverscanStopIndex","_rowStopIndex","rowStartIndex","_renderedRowStartIndex","rowStopIndex","_renderedRowStopIndex","ref","_scrollingContainer","event","handleScrollEvent","columnSizeAndPositionManager","columnCount","_wrapSizeGetter","columnWidth","_getEstimatedColumnSize","rowSizeAndPositionManager","rowCount","rowHeight","_getEstimatedRowSize","state","instanceProps","prevColumnWidth","prevRowHeight","prevColumnCount","prevRowCount","prevIsScrolling","prevScrollToColumn","scrollToColumn","prevScrollToRow","scrollToRow","scrollbarSize","scrollbarSizeMeasured","scrollDirectionHorizontal","scrollDirectionVertical","scrollLeft","scrollTop","scrollPositionChangeReason","_initialScrollTop","_getCalculatedScrollTop","_initialScrollLeft","_getCalculatedScrollLeft","_ref$alignment","alignment","_ref$columnIndex","columnIndex","_ref$rowIndex","rowIndex","offsetProps","_ref2$scrollLeft","scrollLeftParam","_ref2$scrollTop","scrollTopParam","_debounceScrollEnded","_this$props","autoHeight","autoWidth","height","width","totalRowsHeight","totalColumnsWidth","newState","_invokeOnScrollMemoizer","_deferredInvalidateColumnIndex","_deferredInvalidateRowIndex","_this$props2","_ref4$columnIndex","_ref4$rowIndex","_this$props3","_recomputeScrollLeftFlag","_recomputeScrollTopFlag","_styleCache","_cellCache","forceUpdate","_updateScrollLeftForScrollToColumn","_updateScrollTopForScrollToRow","_this$props4","getScrollbarSize","_handleInvalidatedGridSize","prevState","stateUpdate","_getScrollToPositionStateUpdate","sizeIsBiggerThanZero","_invokeOnGridRenderedHelper","_maybeCallOnScrollbarPresenceChange","prevProps","_this2","_this$props5","_this$state","columnOrRowCountJustIncreasedFromZero","_this$props6","autoContainerWidth","className","containerProps","containerRole","containerStyle","noContentRenderer","role","style","tabIndex","_this$state2","_isScrolling","gridStyle","boxSizing","direction","position","WebkitOverflowScrolling","willChange","_resetStyleCache","_calculateChildrenToRender","verticalScrollBarSize","horizontalScrollBarSize","_horizontalScrollBarSize","_verticalScrollBarSize","_scrollbarPresenceChanged","overflowX","overflowY","childrenToDisplay","_childrenToDisplay","showNoContentRenderer","_setScrollingContainerRef","onScroll","_onScroll","maxWidth","maxHeight","overflow","pointerEvents","cellRenderer","cellRangeRenderer","deferredMeasurementCache","overscanColumnCount","overscanIndicesGetter","overscanRowCount","isScrollingOptOut","visibleColumnIndices","visibleRowIndices","horizontalOffsetAdjustment","getOffsetAdjustment","verticalOffsetAdjustment","overscanColumnIndices","overscanCellsCount","scrollDirection","startIndex","stopIndex","overscanRowIndices","overscanStartIndex","overscanStopIndex","hasFixedHeight","has","hasFixedWidth","cellCache","parent","styleCache","scrollingResetTimeInterval","_debounceScrollEndedCallback","recomputeGridSize","_this3","_onScrollMemoizer","_this3$props","clientHeight","clientWidth","scrollHeight","scrollWidth","hasOwnProperty","Boolean","onScrollbarPresenceChange","horizontal","vertical","_ref8","_getScrollLeftForScrollToColumnStateUpdate","_getScrollTopForScrollToRowStateUpdate","nextProps","assign","maybeStateA","maybeStateB","estimatedColumnSize","estimatedRowSize","_ref9","finalColumn","scrollBarSize","calculatedScrollLeft","finalRow","calculatedScrollTop","renderedCells","areOffsetsAdjusted","canCacheStyle","rowDatum","columnDatum","isVisible","left","top","cellRendererParams","renderedCell","ArrowKeyStepper","_getPrototypeOf2","_len","args","_key","disabled","mode","_this$_getScrollState","_getScrollState","scrollToColumnPrevious","scrollToRowPrevious","_this$_getScrollState2","preventDefault","_updateScrollState","children","_this$_getScrollState3","onKeyDown","_onKeyDown","_onSectionRendered","isControlled","onScrollToChange","_React$Component","AutoSizer","defaultHeight","defaultWidth","disableHeight","disableWidth","onResize","_parentNode","offsetHeight","offsetWidth","_window","getComputedStyle","paddingLeft","parseInt","paddingRight","paddingTop","paddingBottom","newHeight","newWidth","autoSizer","_autoSizer","nonce","parentNode","ownerDocument","defaultView","HTMLElement","_detectElementResize","addResizeListener","_onResize","removeResizeListener","outerStyle","childParams","_setRef","CellMeasurer","cache","_this$props$columnInd","_this$props$rowIndex","_this$_getCellMeasure","_getCellMeasurements","getHeight","getWidth","set","element","Element","console","warn","_child","_maybeMeasureCell","measure","_measure","registerChild","_registerChild","node","styleWidth","styleHeight","ceil","_this$props2$columnIn","_this$props2$rowIndex","_this$_getCellMeasure2","invalidateCellSizeAfterRender","CellMeasurerCache","_keyMapper","_columnWidthCache","_defaultWidth","_rowHeightCache","_defaultHeight","fixedHeight","fixedWidth","keyMapper","minHeight","minWidth","_hasFixedHeight","_hasFixedWidth","_minHeight","_minWidth","defaultKeyMapper","_cellHeightCache","_cellWidthCache","_updateCachedColumnAndRowSizes","_rowCount","_columnCount","_key2","columnKey","_i","rowKey","get","CollectionView","cellLayoutManager","_onSectionRenderedMemoizer","getLastRenderedIndices","scrollToCell","scrollPosition","getScrollPositionForCell","cellIndex","_setScrollPosition","_enablePointerEventsAfterDelay","isScrollingChange","_scrollbarSize","_cellLayoutManager$ge","totalHeight","totalWidth","cancelable","_scrollbarSizeMeasured","_calculateSizeAndPositionDataOnNextUpdate","_updateScrollPositionForScrollToCell","_invokeOnSectionRenderedHelper","_cellLayoutManager$ge2","horizontalOverscanSize","verticalOverscanSize","_this$state3","_lastRenderedCellCount","_lastRenderedCellLayoutManager","calculateSizeAndPositionData","_cellLayoutManager$ge3","right","bottom","cellRenderers","x","y","collectionStyle","propTypes","Section","_indexMap","_indices","SectionManager","sectionSize","_sectionSize","_cellMetadata","_sections","getSections","section","getCellIndices","map","sectionXStart","sectionXStop","sectionYStart","sectionYStop","sections","sectionX","sectionY","toString","cellMetadatum","addCellIndex","_ref$align","cellOffset","Collection","context","_lastRenderedCellIndices","_isScrollingChange","bind","_setCollectionViewRef","_collectionView","recomputeCellSizesAndPositions","data","cellSizeAndPositionGetter","cellMetadata","sectionManager","registerCell","_sectionManager","_height","_width","cellGroupRenderer","getCellMetadata","cellRendererProps","ColumnSizer","columnMaxWidth","columnMinWidth","_registeredChild","safeColumnMinWidth","safeColumnMaxWidth","adjustedWidth","getColumnWidth","child","InfiniteLoader","_loadMoreRowsMemoizer","_onRowsRendered","autoReload","_doStuff","_lastRenderedStartIndex","_lastRenderedStopIndex","onRowsRendered","unloadedRanges","loadMoreRows","unloadedRange","promise","lastRenderedStartIndex","lastRenderedStopIndex","component","currentIndex","recomputeSize","recomputeRowHeights","forceUpdateReactVirtualizedComponent","isRowLoaded","minimumBatchSize","threshold","rangeStartIndex","rangeStopIndex","potentialStopIndex","_index","firstUnloadedRange","_index2","scanForUnloadedRanges","squashedUnloadedRanges","_loadUnloadedRanges","registeredChild","List","rowRenderer","widthDescriptor","writable","getOffsetForCell","measureAllCells","_ref6$columnIndex","_ref6$rowIndex","scrollToPosition","noRowsRenderer","classNames","_cellRenderer","ge","a","c","l","h","m","_GEP","_GEA","gt","_GTP","_GTA","lt","_LTP","_LTA","le","_LEP","_LEA","eq","p","_EQP","_EQA","IntervalTreeNode","mid","leftPoints","rightPoints","count","proto","prototype","copy","b","rebuild","intervals","ntree","createIntervalTree","rebuildWithInterval","rebuildWithoutInterval","idx","indexOf","splice","reportLeftRange","arr","hi","cb","r","reportRightRange","lo","reportRange","compareNumbers","compareBegin","d","compareEnd","pts","sort","leftIntervals","rightIntervals","centerIntervals","s","slice","IntervalTree","root","result","insert","weight","remove","n","queryPoint","queryInterval","tproto","PositionCache","defaultCellHeight","unmeasuredCellCount","tallestColumnSize","renderCallback","_intervalTree","_leftMap","columnSizeMap","_columnSizeMap","columnHeight","Masonry","eventScrollTop","currentTarget","_getEstimatedTotalHeight","_debounceResetIsScrolling","_positionCache","_invalidateOnUpdateStartIndex","_invalidateOnUpdateStopIndex","_populatePositionCache","_checkInvalidateOnUpdate","_invokeOnScrollCallback","_invokeOnCellsRenderedCallback","_debounceResetIsScrollingId","cellMeasurerCache","overscanByPixels","rowDirection","estimateTotalHeight","shortestColumnSize","measuredCellCount","range","_style","batchSize","_startIndex","_stopIndex","_debounceResetIsScrollingCallback","estimatedColumnCount","_onScrollMemoized","_startIndexMemoized","_stopIndexMemoized","onCellsRendered","cellPositioner","_cellPositioner","setPosition","noop","CellMeasurerCacheDecorator","_cellMeasurerCache","_columnIndexOffset","_rowIndexOffset","_params$columnIndexOf","columnIndexOffset","_params$rowIndexOffse","rowIndexOffset","clear","clearAll","MultiGrid","showHorizontalScrollbar","showVerticalScrollbar","_bottomLeftGrid","_bottomRightGrid","rest","fixedRowCount","fixedColumnCount","scrollInfo","_topLeftGrid","_topRightGrid","_fixedColumnCount","_fixedRowCount","_maybeCalculateCachedStyles","_deferredMeasurementCacheBottomLeftGrid","_deferredMeasurementCacheBottomRightGrid","_deferredMeasurementCacheTopRightGrid","_ref7$columnIndex","_ref7$rowIndex","_ref8$columnIndex","_ref8$rowIndex","adjustedColumnIndex","adjustedRowIndex","_leftGridWidth","_topGridHeight","_this$props7","_this$props8","_prepareForRender","_this$state4","_containerOuterStyle","_containerTopStyle","_renderTopLeftGrid","_renderTopRightGrid","_containerBottomStyle","_renderBottomLeftGrid","_renderBottomRightGrid","_getTopGridHeight","leftGridWidth","_getLeftGridWidth","topGridHeight","resetAll","_this$props9","enableFixedColumnScroll","enableFixedRowScroll","styleBottomLeftGrid","styleBottomRightGrid","styleTopLeftGrid","styleTopRightGrid","sizeChange","_lastRenderedHeight","_lastRenderedWidth","leftSizeChange","_lastRenderedColumnWidth","_lastRenderedFixedColumnCount","topSizeChange","_lastRenderedFixedRowCount","_lastRenderedRowHeight","_lastRenderedStyle","_lastRenderedStyleBottomLeftGrid","_bottomLeftGridStyle","_lastRenderedStyleBottomRightGrid","_bottomRightGridStyle","_lastRenderedStyleTopLeftGrid","_topLeftGridStyle","_lastRenderedStyleTopRightGrid","_topRightGridStyle","hideBottomLeftGridScrollbar","additionalRowCount","_getBottomGridHeight","gridWidth","bottomLeftGrid","_cellRendererBottomLeftGrid","classNameBottomLeftGrid","_onScrollTop","_bottomLeftGridRef","_rowHeightBottomGrid","_cellRendererBottomRightGrid","classNameBottomRightGrid","_columnWidthRightGrid","_onScrollbarPresenceChange","_bottomRightGridRef","_getRightGridWidth","classNameTopLeftGrid","_topLeftGridRef","hideTopRightGridScrollbar","_this$state5","additionalColumnCount","additionalHeight","gridHeight","topRightGrid","_cellRendererTopRightGrid","classNameTopRightGrid","_onScrollLeft","_topRightGridRef","ScrollSync","defaultHeaderRowRenderer","columns","ASC","DESC","SortIndicator","sortDirection","viewBox","fill","defaultHeaderRenderer","dataKey","label","sortBy","showSortIndicator","title","defaultRowRenderer","onRowClick","onRowDoubleClick","onRowMouseOut","onRowMouseOver","onRowRightClick","rowData","a11yProps","onClick","onDoubleClick","onMouseOut","onMouseOver","onContextMenu","Column","cellDataGetter","cellData","String","defaultSortDirection","flexGrow","flexShrink","headerRenderer","Table","scrollbarWidth","_createColumn","_createRow","_ref3$columnIndex","_ref3$rowIndex","_Grid","_setScrollbarWidth","disableHeader","gridClassName","headerHeight","headerRowRenderer","rowClassName","rowStyle","availableRowsHeight","rowClass","rowStyleObject","_cachedColumnStyles","toArray","column","flexStyles","_getFlexStyleForColumn","_getHeaderColumns","onColumnClick","_column$props","columnData","headerOnClick","headerOnKeyDown","headerTabIndex","headerAriaSort","headerAriaLabel","headerClassName","headerStyle","onHeaderClick","_column$props2","disableSort","sortEnabled","ReactVirtualized__Table__sortableHeaderColumn","renderedHeader","newSortDirection","rowGetter","flattenedStyle","_getRowHeight","customStyle","flexValue","flex","msFlex","WebkitFlex","_this4","_createHeader","getScrollbarWidth","mountedInstances","originalBodyPointerEvents","disablePointerEventsTimeoutId","enablePointerEventsIfDisabled","document","body","enablePointerEventsAfterDelayCallback","instance","__resetIsScrolling","onScrollWindow","maximumTimeout","enablePointerEventsAfterDelay","scrollElement","__handleWindowScrollEvent","registerScrollListener","addEventListener","unregisterScrollListener","removeEventListener","isWindow","getBoundingBox","getBoundingClientRect","getDimensions","innerHeight","innerWidth","serverHeight","serverWidth","getPositionOffset","container","documentElement","containerElement","elementRect","containerRect","getScrollOffset","_elementRect","_containerRect","scrollY","scrollX","getWindow","WindowScroller","updatePosition","scrollTo","_positionFromTop","_isMounted","_positionFromLeft","thisNode","dimensions","_registerResizeListener","prevScrollElement","_unregisterResizeListener","onChildScroll","_onChildScroll","createDetectElementResize","hostWindow","attachEvent","global","requestFrame","fn","cancelFrame","resetTriggers","triggers","__resizeTriggers__","expand","firstElementChild","contract","lastElementChild","expandChild","scrollListener","e","__resizeRAF__","__resizeLast__","checkTriggers","__resizeListeners__","animation","keyframeprefix","animationstartevent","domPrefixes","split","startEvents","elm","createElement","animationName","toLowerCase","animationKeyframes","animationStyle","doc","elementStyle","getElementById","css","head","getElementsByTagName","type","setAttribute","styleSheet","cssText","appendChild","createTextNode","createStyles","resizeTriggersHtml","trustedTypes","staticPolicy","createPolicy","createHTML","innerHTML","__animationListener__","detachEvent","removeChild"],"mappings":"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","file":"chunks/4.chunk.js","sourcesContent":["/**\n * Helper method that determines when to recalculate row or column metadata.\n */\nexport default function calculateSizeAndPositionDataAndUpdateScrollOffset(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSize = _ref.cellSize,\n      computeMetadataCallback = _ref.computeMetadataCallback,\n      computeMetadataCallbackProps = _ref.computeMetadataCallbackProps,\n      nextCellsCount = _ref.nextCellsCount,\n      nextCellSize = _ref.nextCellSize,\n      nextScrollToIndex = _ref.nextScrollToIndex,\n      scrollToIndex = _ref.scrollToIndex,\n      updateScrollOffsetForScrollToIndex = _ref.updateScrollOffsetForScrollToIndex;\n\n  // Don't compare cell sizes if they are functions because inline functions would cause infinite loops.\n  // In that event users should use the manual recompute methods to inform of changes.\n  if (cellCount !== nextCellsCount || (typeof cellSize === 'number' || typeof nextCellSize === 'number') && cellSize !== nextCellSize) {\n    computeMetadataCallback(computeMetadataCallbackProps); // Updated cell metadata may have hidden the previous scrolled-to item.\n    // In this case we should also update the scrollTop to ensure it stays visible.\n\n    if (scrollToIndex >= 0 && scrollToIndex === nextScrollToIndex) {\n      updateScrollOffsetForScrollToIndex();\n    }\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\n/**\n * Just-in-time calculates and caches size and position information for a collection of cells.\n */\nvar CellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  // Cache of size and position data for cells, mapped by cell index.\n  // Note that invalid values may exist in this map so only rely on cells up to this._lastMeasuredIndex\n  // Measurements for cells up to this index can be trusted; cells afterward should be estimated.\n  // Used in deferred mode to track which cells have been queued for measurement.\n  function CellSizeAndPositionManager(_ref) {\n    var cellCount = _ref.cellCount,\n        cellSizeGetter = _ref.cellSizeGetter,\n        estimatedCellSize = _ref.estimatedCellSize;\n\n    _classCallCheck(this, CellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionData\", {});\n\n    _defineProperty(this, \"_lastMeasuredIndex\", -1);\n\n    _defineProperty(this, \"_lastBatchedIndex\", -1);\n\n    _defineProperty(this, \"_cellCount\", void 0);\n\n    _defineProperty(this, \"_cellSizeGetter\", void 0);\n\n    _defineProperty(this, \"_estimatedCellSize\", void 0);\n\n    this._cellSizeGetter = cellSizeGetter;\n    this._cellCount = cellCount;\n    this._estimatedCellSize = estimatedCellSize;\n  }\n\n  _createClass(CellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return false;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(_ref2) {\n      var cellCount = _ref2.cellCount,\n          estimatedCellSize = _ref2.estimatedCellSize,\n          cellSizeGetter = _ref2.cellSizeGetter;\n      this._cellCount = cellCount;\n      this._estimatedCellSize = estimatedCellSize;\n      this._cellSizeGetter = cellSizeGetter;\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellCount;\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._estimatedCellSize;\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._lastMeasuredIndex;\n    }\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment() {\n      return 0;\n    }\n    /**\n     * This method returns the size and position for the cell at the specified index.\n     * It just-in-time calculates (or used cached values) for cells leading up to the index.\n     */\n\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      if (index < 0 || index >= this._cellCount) {\n        throw Error(\"Requested index \".concat(index, \" is outside of range 0..\").concat(this._cellCount));\n      }\n\n      if (index > this._lastMeasuredIndex) {\n        var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n        var offset = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n\n        for (var i = this._lastMeasuredIndex + 1; i <= index; i++) {\n          var size = this._cellSizeGetter({\n            index: i\n          }); // undefined or NaN probably means a logic error in the size getter.\n          // null means we're using CellMeasurer and haven't yet measured a given index.\n\n\n          if (size === undefined || isNaN(size)) {\n            throw Error(\"Invalid size returned for cell \".concat(i, \" of value \").concat(size));\n          } else if (size === null) {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: 0\n            };\n            this._lastBatchedIndex = index;\n          } else {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: size\n            };\n            offset += size;\n            this._lastMeasuredIndex = index;\n          }\n        }\n      }\n\n      return this._cellSizeAndPositionData[index];\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._lastMeasuredIndex >= 0 ? this._cellSizeAndPositionData[this._lastMeasuredIndex] : {\n        offset: 0,\n        size: 0\n      };\n    }\n    /**\n     * Total size of all cells being measured.\n     * This value will be completely estimated initially.\n     * As cells are measured, the estimate will be updated.\n     */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var totalSizeOfMeasuredCells = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n      var numUnmeasuredCells = this._cellCount - this._lastMeasuredIndex - 1;\n      var totalSizeOfUnmeasuredCells = numUnmeasuredCells * this._estimatedCellSize;\n      return totalSizeOfMeasuredCells + totalSizeOfUnmeasuredCells;\n    }\n    /**\n     * Determines a new offset that ensures a certain cell is visible, given the current offset.\n     * If the cell is already visible then the current offset will be returned.\n     * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n     *\n     * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n     * @param containerSize Size (width or height) of the container viewport\n     * @param currentOffset Container's current (x or y) offset\n     * @param totalSize Total size (width or height) of all cells\n     * @return Offset to use to ensure the specified cell is visible\n     */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n\n      if (containerSize <= 0) {\n        return 0;\n      }\n\n      var datum = this.getSizeAndPositionOfCell(targetIndex);\n      var maxOffset = datum.offset;\n      var minOffset = maxOffset - containerSize + datum.size;\n      var idealOffset;\n\n      switch (align) {\n        case 'start':\n          idealOffset = maxOffset;\n          break;\n\n        case 'end':\n          idealOffset = minOffset;\n          break;\n\n        case 'center':\n          idealOffset = maxOffset - (containerSize - datum.size) / 2;\n          break;\n\n        default:\n          idealOffset = Math.max(minOffset, Math.min(maxOffset, currentOffset));\n          break;\n      }\n\n      var totalSize = this.getTotalSize();\n      return Math.max(0, Math.min(totalSize - containerSize, idealOffset));\n    }\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(params) {\n      var containerSize = params.containerSize,\n          offset = params.offset;\n      var totalSize = this.getTotalSize();\n\n      if (totalSize === 0) {\n        return {};\n      }\n\n      var maxOffset = offset + containerSize;\n\n      var start = this._findNearestCell(offset);\n\n      var datum = this.getSizeAndPositionOfCell(start);\n      offset = datum.offset + datum.size;\n      var stop = start;\n\n      while (offset < maxOffset && stop < this._cellCount - 1) {\n        stop++;\n        offset += this.getSizeAndPositionOfCell(stop).size;\n      }\n\n      return {\n        start: start,\n        stop: stop\n      };\n    }\n    /**\n     * Clear all cached values for cells after the specified index.\n     * This method should be called for any cell that has changed its size.\n     * It will not immediately perform any calculations; they'll be performed the next time getSizeAndPositionOfCell() is called.\n     */\n\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._lastMeasuredIndex = Math.min(this._lastMeasuredIndex, index - 1);\n    }\n  }, {\n    key: \"_binarySearch\",\n    value: function _binarySearch(high, low, offset) {\n      while (low <= high) {\n        var middle = low + Math.floor((high - low) / 2);\n        var currentOffset = this.getSizeAndPositionOfCell(middle).offset;\n\n        if (currentOffset === offset) {\n          return middle;\n        } else if (currentOffset < offset) {\n          low = middle + 1;\n        } else if (currentOffset > offset) {\n          high = middle - 1;\n        }\n      }\n\n      if (low > 0) {\n        return low - 1;\n      } else {\n        return 0;\n      }\n    }\n  }, {\n    key: \"_exponentialSearch\",\n    value: function _exponentialSearch(index, offset) {\n      var interval = 1;\n\n      while (index < this._cellCount && this.getSizeAndPositionOfCell(index).offset < offset) {\n        index += interval;\n        interval *= 2;\n      }\n\n      return this._binarySearch(Math.min(index, this._cellCount - 1), Math.floor(index / 2), offset);\n    }\n    /**\n     * Searches for the cell (index) nearest the specified offset.\n     *\n     * If no exact match is found the next lowest cell index will be returned.\n     * This allows partially visible cells (with offsets just before/above the fold) to be visible.\n     */\n\n  }, {\n    key: \"_findNearestCell\",\n    value: function _findNearestCell(offset) {\n      if (isNaN(offset)) {\n        throw Error(\"Invalid offset \".concat(offset, \" specified\"));\n      } // Our search algorithms find the nearest match at or below the specified offset.\n      // So make sure the offset is at least 0 or no match will be found.\n\n\n      offset = Math.max(0, offset);\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var lastMeasuredIndex = Math.max(0, this._lastMeasuredIndex);\n\n      if (lastMeasuredCellSizeAndPosition.offset >= offset) {\n        // If we've already measured cells within this range just use a binary search as it's faster.\n        return this._binarySearch(lastMeasuredIndex, 0, offset);\n      } else {\n        // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n        // The exponential search avoids pre-computing sizes for the full set of cells as a binary search would.\n        // The overall complexity for this approach is O(log n).\n        return this._exponentialSearch(lastMeasuredIndex, offset);\n      }\n    }\n  }]);\n\n  return CellSizeAndPositionManager;\n}();\n\nexport { CellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","var DEFAULT_MAX_ELEMENT_SIZE = 1500000;\nvar CHROME_MAX_ELEMENT_SIZE = 1.67771e7;\n\nvar isBrowser = function isBrowser() {\n  return typeof window !== 'undefined';\n};\n\nvar isChrome = function isChrome() {\n  return !!window.chrome;\n};\n\nexport var getMaxElementSize = function getMaxElementSize() {\n  if (isBrowser()) {\n    if (isChrome()) {\n      return CHROME_MAX_ELEMENT_SIZE;\n    }\n  }\n\n  return DEFAULT_MAX_ELEMENT_SIZE;\n};","import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport CellSizeAndPositionManager from './CellSizeAndPositionManager';\nimport { getMaxElementSize } from './maxElementSize.js';\n\n/**\n * Extends CellSizeAndPositionManager and adds scaling behavior for lists that are too large to fit within a browser's native limits.\n */\nvar ScalingCellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  function ScalingCellSizeAndPositionManager(_ref) {\n    var _ref$maxScrollSize = _ref.maxScrollSize,\n        maxScrollSize = _ref$maxScrollSize === void 0 ? getMaxElementSize() : _ref$maxScrollSize,\n        params = _objectWithoutProperties(_ref, [\"maxScrollSize\"]);\n\n    _classCallCheck(this, ScalingCellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionManager\", void 0);\n\n    _defineProperty(this, \"_maxScrollSize\", void 0);\n\n    // Favor composition over inheritance to simplify IE10 support\n    this._cellSizeAndPositionManager = new CellSizeAndPositionManager(params);\n    this._maxScrollSize = maxScrollSize;\n  }\n\n  _createClass(ScalingCellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return this._cellSizeAndPositionManager.getTotalSize() > this._maxScrollSize;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(params) {\n      this._cellSizeAndPositionManager.configure(params);\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellSizeAndPositionManager.getCellCount();\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._cellSizeAndPositionManager.getEstimatedCellSize();\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._cellSizeAndPositionManager.getLastMeasuredIndex();\n    }\n    /**\n     * Number of pixels a cell at the given position (offset) should be shifted in order to fit within the scaled container.\n     * The offset passed to this function is scaled (safe) as well.\n     */\n\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment(_ref2) {\n      var containerSize = _ref2.containerSize,\n          offset = _ref2.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      var offsetPercentage = this._getOffsetPercentage({\n        containerSize: containerSize,\n        offset: offset,\n        totalSize: safeTotalSize\n      });\n\n      return Math.round(offsetPercentage * (safeTotalSize - totalSize));\n    }\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfCell(index);\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfLastMeasuredCell();\n    }\n    /** See CellSizeAndPositionManager#getTotalSize */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return Math.min(this._maxScrollSize, this._cellSizeAndPositionManager.getTotalSize());\n    }\n    /** See CellSizeAndPositionManager#getUpdatedOffsetForIndex */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n      currentOffset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: currentOffset\n      });\n\n      var offset = this._cellSizeAndPositionManager.getUpdatedOffsetForIndex({\n        align: align,\n        containerSize: containerSize,\n        currentOffset: currentOffset,\n        targetIndex: targetIndex\n      });\n\n      return this._offsetToSafeOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n    /** See CellSizeAndPositionManager#getVisibleCellRange */\n\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(_ref4) {\n      var containerSize = _ref4.containerSize,\n          offset = _ref4.offset;\n      offset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n      return this._cellSizeAndPositionManager.getVisibleCellRange({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._cellSizeAndPositionManager.resetCell(index);\n    }\n  }, {\n    key: \"_getOffsetPercentage\",\n    value: function _getOffsetPercentage(_ref5) {\n      var containerSize = _ref5.containerSize,\n          offset = _ref5.offset,\n          totalSize = _ref5.totalSize;\n      return totalSize <= containerSize ? 0 : offset / (totalSize - containerSize);\n    }\n  }, {\n    key: \"_offsetToSafeOffset\",\n    value: function _offsetToSafeOffset(_ref6) {\n      var containerSize = _ref6.containerSize,\n          offset = _ref6.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: totalSize\n        });\n\n        return Math.round(offsetPercentage * (safeTotalSize - containerSize));\n      }\n    }\n  }, {\n    key: \"_safeOffsetToOffset\",\n    value: function _safeOffsetToOffset(_ref7) {\n      var containerSize = _ref7.containerSize,\n          offset = _ref7.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: safeTotalSize\n        });\n\n        return Math.round(offsetPercentage * (totalSize - containerSize));\n      }\n    }\n  }]);\n\n  return ScalingCellSizeAndPositionManager;\n}();\n\nexport { ScalingCellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","/**\n * Helper utility that updates the specified callback whenever any of the specified indices have changed.\n */\nexport default function createCallbackMemoizer() {\n  var requireAllKeys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var cachedIndices = {};\n  return function (_ref) {\n    var callback = _ref.callback,\n        indices = _ref.indices;\n    var keys = Object.keys(indices);\n    var allInitialized = !requireAllKeys || keys.every(function (key) {\n      var value = indices[key];\n      return Array.isArray(value) ? value.length > 0 : value >= 0;\n    });\n    var indexChanged = keys.length !== Object.keys(cachedIndices).length || keys.some(function (key) {\n      var cachedValue = cachedIndices[key];\n      var value = indices[key];\n      return Array.isArray(value) ? cachedValue.join(',') !== value.join(',') : cachedValue !== value;\n    });\n    cachedIndices = indices;\n\n    if (allInitialized && indexChanged) {\n      callback(indices);\n    }\n  };\n}","import ScalingCellSizeAndPositionManager from './ScalingCellSizeAndPositionManager.js';\n/**\n * Helper function that determines when to update scroll offsets to ensure that a scroll-to-index remains visible.\n * This function also ensures that the scroll ofset isn't past the last column/row of cells.\n */\n\nexport default function updateScrollIndexHelper(_ref) {\n  var cellSize = _ref.cellSize,\n      cellSizeAndPositionManager = _ref.cellSizeAndPositionManager,\n      previousCellsCount = _ref.previousCellsCount,\n      previousCellSize = _ref.previousCellSize,\n      previousScrollToAlignment = _ref.previousScrollToAlignment,\n      previousScrollToIndex = _ref.previousScrollToIndex,\n      previousSize = _ref.previousSize,\n      scrollOffset = _ref.scrollOffset,\n      scrollToAlignment = _ref.scrollToAlignment,\n      scrollToIndex = _ref.scrollToIndex,\n      size = _ref.size,\n      sizeJustIncreasedFromZero = _ref.sizeJustIncreasedFromZero,\n      updateScrollIndexCallback = _ref.updateScrollIndexCallback;\n  var cellCount = cellSizeAndPositionManager.getCellCount();\n  var hasScrollToIndex = scrollToIndex >= 0 && scrollToIndex < cellCount;\n  var sizeHasChanged = size !== previousSize || sizeJustIncreasedFromZero || !previousCellSize || typeof cellSize === 'number' && cellSize !== previousCellSize; // If we have a new scroll target OR if height/row-height has changed,\n  // We should ensure that the scroll target is visible.\n\n  if (hasScrollToIndex && (sizeHasChanged || scrollToAlignment !== previousScrollToAlignment || scrollToIndex !== previousScrollToIndex)) {\n    updateScrollIndexCallback(scrollToIndex); // If we don't have a selected item but list size or number of children have decreased,\n    // Make sure we aren't scrolled too far past the current content.\n  } else if (!hasScrollToIndex && cellCount > 0 && (size < previousSize || cellCount < previousCellsCount)) {\n    // We need to ensure that the current scroll offset is still within the collection's range.\n    // To do this, we don't need to measure everything; CellMeasurer would perform poorly.\n    // Just check to make sure we're still okay.\n    // Only adjust the scroll position if we've scrolled below the last set of rows.\n    if (scrollOffset > cellSizeAndPositionManager.getTotalSize() - size) {\n      updateScrollIndexCallback(cellCount - 1);\n    }\n  }\n}\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSize } from \"../types\";","// Properly handle server-side rendering.\nvar win;\n\nif (typeof window !== 'undefined') {\n  win = window;\n} else if (typeof self !== 'undefined') {\n  win = self;\n} else {\n  win = {};\n} // requestAnimationFrame() shim by Paul Irish\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\nvar request = win.requestAnimationFrame || win.webkitRequestAnimationFrame || win.mozRequestAnimationFrame || win.oRequestAnimationFrame || win.msRequestAnimationFrame || function (callback) {\n  return win.setTimeout(callback, 1000 / 60);\n};\n\nvar cancel = win.cancelAnimationFrame || win.webkitCancelAnimationFrame || win.mozCancelAnimationFrame || win.oCancelAnimationFrame || win.msCancelAnimationFrame || function (id) {\n  win.clearTimeout(id);\n};\n\nexport var raf = request;\nexport var caf = cancel;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport calculateSizeAndPositionDataAndUpdateScrollOffset from './utils/calculateSizeAndPositionDataAndUpdateScrollOffset';\nimport ScalingCellSizeAndPositionManager from './utils/ScalingCellSizeAndPositionManager';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport defaultOverscanIndicesGetter, { SCROLL_DIRECTION_BACKWARD, SCROLL_DIRECTION_FORWARD } from './defaultOverscanIndicesGetter';\nimport updateScrollIndexHelper from './utils/updateScrollIndexHelper';\nimport defaultCellRangeRenderer from './defaultCellRangeRenderer';\nimport scrollbarSize from 'dom-helpers/scrollbarSize';\nimport { polyfill } from 'react-lifecycles-compat';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n\nvar renderNull = function renderNull() {\n  return null;\n};\n\n/**\n * Renders tabular data with virtualization along the vertical and horizontal axes.\n * Row heights and column widths must be known ahead of time and specified as properties.\n */\nvar Grid = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Grid, _React$PureComponent);\n\n  // Invokes onSectionRendered callback only when start/stop row or column indices change\n  function Grid(props) {\n    var _this;\n\n    _classCallCheck(this, Grid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Grid).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"_onGridRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollLeftFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollTopFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_horizontalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_verticalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollbarPresenceChanged\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollingContainer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_childrenToDisplay\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollTop\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollLeft\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_disablePointerEventsTimeoutId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_styleCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceScrollEndedCallback\", function () {\n      _this._disablePointerEventsTimeoutId = null; // isScrolling is used to determine if we reset styleCache\n\n      _this.setState({\n        isScrolling: false,\n        needToResetStyleCache: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnGridRenderedHelper\", function () {\n      var onSectionRendered = _this.props.onSectionRendered;\n\n      _this._onGridRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          columnOverscanStartIndex: _this._columnStartIndex,\n          columnOverscanStopIndex: _this._columnStopIndex,\n          columnStartIndex: _this._renderedColumnStartIndex,\n          columnStopIndex: _this._renderedColumnStopIndex,\n          rowOverscanStartIndex: _this._rowStartIndex,\n          rowOverscanStopIndex: _this._rowStopIndex,\n          rowStartIndex: _this._renderedRowStartIndex,\n          rowStopIndex: _this._renderedRowStopIndex\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target === _this._scrollingContainer) {\n        _this.handleScrollEvent(event.target);\n      }\n    });\n\n    var columnSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.columnCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.columnWidth)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedColumnSize(props)\n    });\n    var rowSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.rowCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.rowHeight)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedRowSize(props)\n    });\n    _this.state = {\n      instanceProps: {\n        columnSizeAndPositionManager: columnSizeAndPositionManager,\n        rowSizeAndPositionManager: rowSizeAndPositionManager,\n        prevColumnWidth: props.columnWidth,\n        prevRowHeight: props.rowHeight,\n        prevColumnCount: props.columnCount,\n        prevRowCount: props.rowCount,\n        prevIsScrolling: props.isScrolling === true,\n        prevScrollToColumn: props.scrollToColumn,\n        prevScrollToRow: props.scrollToRow,\n        scrollbarSize: 0,\n        scrollbarSizeMeasured: false\n      },\n      isScrolling: false,\n      scrollDirectionHorizontal: SCROLL_DIRECTION_FORWARD,\n      scrollDirectionVertical: SCROLL_DIRECTION_FORWARD,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollPositionChangeReason: null,\n      needToResetStyleCache: false\n    };\n\n    if (props.scrollToRow > 0) {\n      _this._initialScrollTop = _this._getCalculatedScrollTop(props, _this.state);\n    }\n\n    if (props.scrollToColumn > 0) {\n      _this._initialScrollLeft = _this._getCalculatedScrollLeft(props, _this.state);\n    }\n\n    return _this;\n  }\n  /**\n   * Gets offsets for a given cell and alignment.\n   */\n\n\n  _createClass(Grid, [{\n    key: \"getOffsetForCell\",\n    value: function getOffsetForCell() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$alignment = _ref.alignment,\n          alignment = _ref$alignment === void 0 ? this.props.scrollToAlignment : _ref$alignment,\n          _ref$columnIndex = _ref.columnIndex,\n          columnIndex = _ref$columnIndex === void 0 ? this.props.scrollToColumn : _ref$columnIndex,\n          _ref$rowIndex = _ref.rowIndex,\n          rowIndex = _ref$rowIndex === void 0 ? this.props.scrollToRow : _ref$rowIndex;\n\n      var offsetProps = _objectSpread({}, this.props, {\n        scrollToAlignment: alignment,\n        scrollToColumn: columnIndex,\n        scrollToRow: rowIndex\n      });\n\n      return {\n        scrollLeft: this._getCalculatedScrollLeft(offsetProps),\n        scrollTop: this._getCalculatedScrollTop(offsetProps)\n      };\n    }\n    /**\n     * Gets estimated total rows' height.\n     */\n\n  }, {\n    key: \"getTotalRowsHeight\",\n    value: function getTotalRowsHeight() {\n      return this.state.instanceProps.rowSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * Gets estimated total columns' width.\n     */\n\n  }, {\n    key: \"getTotalColumnsWidth\",\n    value: function getTotalColumnsWidth() {\n      return this.state.instanceProps.columnSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * This method handles a scroll event originating from an external scroll control.\n     * It's an advanced method and should probably not be used unless you're implementing a custom scroll-bar solution.\n     */\n\n  }, {\n    key: \"handleScrollEvent\",\n    value: function handleScrollEvent(_ref2) {\n      var _ref2$scrollLeft = _ref2.scrollLeft,\n          scrollLeftParam = _ref2$scrollLeft === void 0 ? 0 : _ref2$scrollLeft,\n          _ref2$scrollTop = _ref2.scrollTop,\n          scrollTopParam = _ref2$scrollTop === void 0 ? 0 : _ref2$scrollTop;\n\n      // On iOS, we can arrive at negative offsets by swiping past the start.\n      // To prevent flicker here, we make playing in the negative offset zone cause nothing to happen.\n      if (scrollTopParam < 0) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      this._debounceScrollEnded();\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          autoWidth = _this$props.autoWidth,\n          height = _this$props.height,\n          width = _this$props.width;\n      var instanceProps = this.state.instanceProps; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollbarSize = instanceProps.scrollbarSize;\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var scrollLeft = Math.min(Math.max(0, totalColumnsWidth - width + scrollbarSize), scrollLeftParam);\n      var scrollTop = Math.min(Math.max(0, totalRowsHeight - height + scrollbarSize), scrollTopParam); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (this.state.scrollLeft !== scrollLeft || this.state.scrollTop !== scrollTop) {\n        // Track scrolling direction so we can more efficiently overscan rows to reduce empty space around the edges while scrolling.\n        // Don't change direction for an axis unless scroll offset has changed.\n        var scrollDirectionHorizontal = scrollLeft !== this.state.scrollLeft ? scrollLeft > this.state.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionHorizontal;\n        var scrollDirectionVertical = scrollTop !== this.state.scrollTop ? scrollTop > this.state.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionVertical;\n        var newState = {\n          isScrolling: true,\n          scrollDirectionHorizontal: scrollDirectionHorizontal,\n          scrollDirectionVertical: scrollDirectionVertical,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.OBSERVED\n        };\n\n        if (!autoHeight) {\n          newState.scrollTop = scrollTop;\n        }\n\n        if (!autoWidth) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        newState.needToResetStyleCache = false;\n        this.setState(newState);\n      }\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalColumnsWidth: totalColumnsWidth,\n        totalRowsHeight: totalRowsHeight\n      });\n    }\n    /**\n     * Invalidate Grid size and recompute visible cells.\n     * This is a deferred wrapper for recomputeGridSize().\n     * It sets a flag to be evaluated on cDM/cDU to avoid unnecessary renders.\n     * This method is intended for advanced use-cases like CellMeasurer.\n     */\n    // @TODO (bvaughn) Add automated test coverage for this.\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rowIndex = _ref3.rowIndex;\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /**\n     * Pre-measure all columns and rows in a Grid.\n     * Typically cells are only measured as needed and estimated sizes are used for cells that have not yet been measured.\n     * This method ensures that the next call to getTotalSize() returns an exact size (as opposed to just an estimated one).\n     */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      var _this$props2 = this.props,\n          columnCount = _this$props2.columnCount,\n          rowCount = _this$props2.rowCount;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.getSizeAndPositionOfCell(columnCount - 1);\n      instanceProps.rowSizeAndPositionManager.getSizeAndPositionOfCell(rowCount - 1);\n    }\n    /**\n     * Forced recompute of row heights and column widths.\n     * This function should be called if dynamic column or row sizes have changed but nothing else has.\n     * Since Grid only receives :columnCount and :rowCount it has no way of detecting when the underlying data changes.\n     */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref4$columnIndex = _ref4.columnIndex,\n          columnIndex = _ref4$columnIndex === void 0 ? 0 : _ref4$columnIndex,\n          _ref4$rowIndex = _ref4.rowIndex,\n          rowIndex = _ref4$rowIndex === void 0 ? 0 : _ref4$rowIndex;\n\n      var _this$props3 = this.props,\n          scrollToColumn = _this$props3.scrollToColumn,\n          scrollToRow = _this$props3.scrollToRow;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.resetCell(columnIndex);\n      instanceProps.rowSizeAndPositionManager.resetCell(rowIndex); // Cell sizes may be determined by a function property.\n      // In this case the cDU handler can't know if they changed.\n      // Store this flag to let the next cDU pass know it needs to recompute the scroll offset.\n\n      this._recomputeScrollLeftFlag = scrollToColumn >= 0 && (this.state.scrollDirectionHorizontal === SCROLL_DIRECTION_FORWARD ? columnIndex <= scrollToColumn : columnIndex >= scrollToColumn);\n      this._recomputeScrollTopFlag = scrollToRow >= 0 && (this.state.scrollDirectionVertical === SCROLL_DIRECTION_FORWARD ? rowIndex <= scrollToRow : rowIndex >= scrollToRow); // Clear cell cache in case we are scrolling;\n      // Invalid row heights likely mean invalid cached content as well.\n\n      this._styleCache = {};\n      this._cellCache = {};\n      this.forceUpdate();\n    }\n    /**\n     * Ensure column and row are visible.\n     */\n\n  }, {\n    key: \"scrollToCell\",\n    value: function scrollToCell(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n      var columnCount = this.props.columnCount;\n      var props = this.props; // Don't adjust scroll offset for single-column grids (eg List, Table).\n      // This can cause a funky scroll offset because of the vertical scrollbar width.\n\n      if (columnCount > 1 && columnIndex !== undefined) {\n        this._updateScrollLeftForScrollToColumn(_objectSpread({}, props, {\n          scrollToColumn: columnIndex\n        }));\n      }\n\n      if (rowIndex !== undefined) {\n        this._updateScrollTopForScrollToRow(_objectSpread({}, props, {\n          scrollToRow: rowIndex\n        }));\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          getScrollbarSize = _this$props4.getScrollbarSize,\n          height = _this$props4.height,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToColumn = _this$props4.scrollToColumn,\n          scrollTop = _this$props4.scrollTop,\n          scrollToRow = _this$props4.scrollToRow,\n          width = _this$props4.width;\n      var instanceProps = this.state.instanceProps; // Reset initial offsets to be ignored in browser\n\n      this._initialScrollTop = 0;\n      this._initialScrollLeft = 0; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n\n      if (!instanceProps.scrollbarSizeMeasured) {\n        this.setState(function (prevState) {\n          var stateUpdate = _objectSpread({}, prevState, {\n            needToResetStyleCache: false\n          });\n\n          stateUpdate.instanceProps.scrollbarSize = getScrollbarSize();\n          stateUpdate.instanceProps.scrollbarSizeMeasured = true;\n          return stateUpdate;\n        });\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 || typeof scrollTop === 'number' && scrollTop >= 0) {\n        var stateUpdate = Grid._getScrollToPositionStateUpdate({\n          prevState: this.state,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        if (stateUpdate) {\n          stateUpdate.needToResetStyleCache = false;\n          this.setState(stateUpdate);\n        }\n      } // refs don't work in `react-test-renderer`\n\n\n      if (this._scrollingContainer) {\n        // setting the ref's scrollLeft and scrollTop.\n        // Somehow in MultiGrid the main grid doesn't trigger a update on mount.\n        if (this._scrollingContainer.scrollLeft !== this.state.scrollLeft) {\n          this._scrollingContainer.scrollLeft = this.state.scrollLeft;\n        }\n\n        if (this._scrollingContainer.scrollTop !== this.state.scrollTop) {\n          this._scrollingContainer.scrollTop = this.state.scrollTop;\n        }\n      } // Don't update scroll offset if the size is 0; we don't render any cells in this case.\n      // Setting a state may cause us to later thing we've updated the offce when we haven't.\n\n\n      var sizeIsBiggerThanZero = height > 0 && width > 0;\n\n      if (scrollToColumn >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollLeftForScrollToColumn();\n      }\n\n      if (scrollToRow >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollTopForScrollToRow();\n      } // Update onRowsRendered callback\n\n\n      this._invokeOnGridRenderedHelper(); // Initialize onScroll callback\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalColumnsWidth: instanceProps.columnSizeAndPositionManager.getTotalSize(),\n        totalRowsHeight: instanceProps.rowSizeAndPositionManager.getTotalSize()\n      });\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) New scroll-to-cell props have been set\n     */\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      var _this$props5 = this.props,\n          autoHeight = _this$props5.autoHeight,\n          autoWidth = _this$props5.autoWidth,\n          columnCount = _this$props5.columnCount,\n          height = _this$props5.height,\n          rowCount = _this$props5.rowCount,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToColumn = _this$props5.scrollToColumn,\n          scrollToRow = _this$props5.scrollToRow,\n          width = _this$props5.width;\n      var _this$state = this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollPositionChangeReason = _this$state.scrollPositionChangeReason,\n          scrollTop = _this$state.scrollTop,\n          instanceProps = _this$state.instanceProps; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // Handle edge case where column or row count has only just increased over 0.\n      // In this case we may have to restore a previously-specified scroll offset.\n      // For more info see bvaughn/react-virtualized/issues/218\n\n\n      var columnOrRowCountJustIncreasedFromZero = columnCount > 0 && prevProps.columnCount === 0 || rowCount > 0 && prevProps.rowCount === 0; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        // @TRICKY :autoHeight and :autoWidth properties instructs Grid to leave :scrollTop and :scrollLeft management to an external HOC (eg WindowScroller).\n        // In this case we should avoid checking scrollingContainer.scrollTop and scrollingContainer.scrollLeft since it forces layout/flow.\n        if (!autoWidth && scrollLeft >= 0 && (scrollLeft !== this._scrollingContainer.scrollLeft || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (!autoHeight && scrollTop >= 0 && (scrollTop !== this._scrollingContainer.scrollTop || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Special case where the previous size was 0:\n      // In this case we don't show any windowed cells at all.\n      // So we should always recalculate offset afterwards.\n\n\n      var sizeJustIncreasedFromZero = (prevProps.width === 0 || prevProps.height === 0) && height > 0 && width > 0; // Update scroll offsets if the current :scrollToColumn or :scrollToRow values requires it\n      // @TODO Do we also need this check or can the one in componentWillUpdate() suffice?\n\n      if (this._recomputeScrollLeftFlag) {\n        this._recomputeScrollLeftFlag = false;\n\n        this._updateScrollLeftForScrollToColumn(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          previousCellsCount: prevProps.columnCount,\n          previousCellSize: prevProps.columnWidth,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToColumn,\n          previousSize: prevProps.width,\n          scrollOffset: scrollLeft,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToColumn,\n          size: width,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollLeftForScrollToColumn(_this2.props);\n          }\n        });\n      }\n\n      if (this._recomputeScrollTopFlag) {\n        this._recomputeScrollTopFlag = false;\n\n        this._updateScrollTopForScrollToRow(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          previousCellsCount: prevProps.rowCount,\n          previousCellSize: prevProps.rowHeight,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToRow,\n          previousSize: prevProps.height,\n          scrollOffset: scrollTop,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToRow,\n          size: height,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollTopForScrollToRow(_this2.props);\n          }\n        });\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnGridRenderedHelper(); // Changes to :scrollLeft or :scrollTop should also notify :onScroll listeners\n\n\n      if (scrollLeft !== prevState.scrollLeft || scrollTop !== prevState.scrollTop) {\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n\n        this._invokeOnScrollMemoizer({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          totalColumnsWidth: totalColumnsWidth,\n          totalRowsHeight: totalRowsHeight\n        });\n      }\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n    /**\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoContainerWidth = _this$props6.autoContainerWidth,\n          autoHeight = _this$props6.autoHeight,\n          autoWidth = _this$props6.autoWidth,\n          className = _this$props6.className,\n          containerProps = _this$props6.containerProps,\n          containerRole = _this$props6.containerRole,\n          containerStyle = _this$props6.containerStyle,\n          height = _this$props6.height,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          role = _this$props6.role,\n          style = _this$props6.style,\n          tabIndex = _this$props6.tabIndex,\n          width = _this$props6.width;\n      var _this$state2 = this.state,\n          instanceProps = _this$state2.instanceProps,\n          needToResetStyleCache = _this$state2.needToResetStyleCache;\n\n      var isScrolling = this._isScrolling();\n\n      var gridStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        width: autoWidth ? 'auto' : width,\n        WebkitOverflowScrolling: 'touch',\n        willChange: 'transform'\n      };\n\n      if (needToResetStyleCache) {\n        this._styleCache = {};\n      } // calculate _styleCache here\n      // if state.isScrolling (not from _isScrolling) then reset\n\n\n      if (!this.state.isScrolling) {\n        this._resetStyleCache();\n      } // calculate children to render here\n\n\n      this._calculateChildrenToRender(this.props, this.state);\n\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize(); // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n      var horizontalScrollBarSize = totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n\n      if (horizontalScrollBarSize !== this._horizontalScrollBarSize || verticalScrollBarSize !== this._verticalScrollBarSize) {\n        this._horizontalScrollBarSize = horizontalScrollBarSize;\n        this._verticalScrollBarSize = verticalScrollBarSize;\n        this._scrollbarPresenceChanged = true;\n      } // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n\n      gridStyle.overflowX = totalColumnsWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      gridStyle.overflowY = totalRowsHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      var childrenToDisplay = this._childrenToDisplay;\n      var showNoContentRenderer = childrenToDisplay.length === 0 && height > 0 && width > 0;\n      return React.createElement(\"div\", _extends({\n        ref: this._setScrollingContainerRef\n      }, containerProps, {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-readonly\": this.props['aria-readonly'],\n        className: clsx('ReactVirtualized__Grid', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({}, gridStyle, {}, style),\n        tabIndex: tabIndex\n      }), childrenToDisplay.length > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Grid__innerScrollContainer\",\n        role: containerRole,\n        style: _objectSpread({\n          width: autoContainerWidth ? 'auto' : totalColumnsWidth,\n          height: totalRowsHeight,\n          maxWidth: totalColumnsWidth,\n          maxHeight: totalRowsHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }, containerStyle)\n      }, childrenToDisplay), showNoContentRenderer && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n  }, {\n    key: \"_calculateChildrenToRender\",\n    value: function _calculateChildrenToRender() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      var cellRenderer = props.cellRenderer,\n          cellRangeRenderer = props.cellRangeRenderer,\n          columnCount = props.columnCount,\n          deferredMeasurementCache = props.deferredMeasurementCache,\n          height = props.height,\n          overscanColumnCount = props.overscanColumnCount,\n          overscanIndicesGetter = props.overscanIndicesGetter,\n          overscanRowCount = props.overscanRowCount,\n          rowCount = props.rowCount,\n          width = props.width,\n          isScrollingOptOut = props.isScrollingOptOut;\n      var scrollDirectionHorizontal = state.scrollDirectionHorizontal,\n          scrollDirectionVertical = state.scrollDirectionVertical,\n          instanceProps = state.instanceProps;\n      var scrollTop = this._initialScrollTop > 0 ? this._initialScrollTop : state.scrollTop;\n      var scrollLeft = this._initialScrollLeft > 0 ? this._initialScrollLeft : state.scrollLeft;\n\n      var isScrolling = this._isScrolling(props, state);\n\n      this._childrenToDisplay = []; // Render only enough columns and rows to cover the visible area of the grid.\n\n      if (height > 0 && width > 0) {\n        var visibleColumnIndices = instanceProps.columnSizeAndPositionManager.getVisibleCellRange({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var visibleRowIndices = instanceProps.rowSizeAndPositionManager.getVisibleCellRange({\n          containerSize: height,\n          offset: scrollTop\n        });\n        var horizontalOffsetAdjustment = instanceProps.columnSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var verticalOffsetAdjustment = instanceProps.rowSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: height,\n          offset: scrollTop\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        this._renderedColumnStartIndex = visibleColumnIndices.start;\n        this._renderedColumnStopIndex = visibleColumnIndices.stop;\n        this._renderedRowStartIndex = visibleRowIndices.start;\n        this._renderedRowStopIndex = visibleRowIndices.stop;\n        var overscanColumnIndices = overscanIndicesGetter({\n          direction: 'horizontal',\n          cellCount: columnCount,\n          overscanCellsCount: overscanColumnCount,\n          scrollDirection: scrollDirectionHorizontal,\n          startIndex: typeof visibleColumnIndices.start === 'number' ? visibleColumnIndices.start : 0,\n          stopIndex: typeof visibleColumnIndices.stop === 'number' ? visibleColumnIndices.stop : -1\n        });\n        var overscanRowIndices = overscanIndicesGetter({\n          direction: 'vertical',\n          cellCount: rowCount,\n          overscanCellsCount: overscanRowCount,\n          scrollDirection: scrollDirectionVertical,\n          startIndex: typeof visibleRowIndices.start === 'number' ? visibleRowIndices.start : 0,\n          stopIndex: typeof visibleRowIndices.stop === 'number' ? visibleRowIndices.stop : -1\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        var columnStartIndex = overscanColumnIndices.overscanStartIndex;\n        var columnStopIndex = overscanColumnIndices.overscanStopIndex;\n        var rowStartIndex = overscanRowIndices.overscanStartIndex;\n        var rowStopIndex = overscanRowIndices.overscanStopIndex; // Advanced use-cases (eg CellMeasurer) require batched measurements to determine accurate sizes.\n\n        if (deferredMeasurementCache) {\n          // If rows have a dynamic height, scan the rows we are about to render.\n          // If any have not yet been measured, then we need to render all columns initially,\n          // Because the height of the row is equal to the tallest cell within that row,\n          // (And so we can't know the height without measuring all column-cells first).\n          if (!deferredMeasurementCache.hasFixedHeight()) {\n            for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n              if (!deferredMeasurementCache.has(rowIndex, 0)) {\n                columnStartIndex = 0;\n                columnStopIndex = columnCount - 1;\n                break;\n              }\n            }\n          } // If columns have a dynamic width, scan the columns we are about to render.\n          // If any have not yet been measured, then we need to render all rows initially,\n          // Because the width of the column is equal to the widest cell within that column,\n          // (And so we can't know the width without measuring all row-cells first).\n\n\n          if (!deferredMeasurementCache.hasFixedWidth()) {\n            for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n              if (!deferredMeasurementCache.has(0, columnIndex)) {\n                rowStartIndex = 0;\n                rowStopIndex = rowCount - 1;\n                break;\n              }\n            }\n          }\n        }\n\n        this._childrenToDisplay = cellRangeRenderer({\n          cellCache: this._cellCache,\n          cellRenderer: cellRenderer,\n          columnSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          columnStartIndex: columnStartIndex,\n          columnStopIndex: columnStopIndex,\n          deferredMeasurementCache: deferredMeasurementCache,\n          horizontalOffsetAdjustment: horizontalOffsetAdjustment,\n          isScrolling: isScrolling,\n          isScrollingOptOut: isScrollingOptOut,\n          parent: this,\n          rowSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          rowStartIndex: rowStartIndex,\n          rowStopIndex: rowStopIndex,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          styleCache: this._styleCache,\n          verticalOffsetAdjustment: verticalOffsetAdjustment,\n          visibleColumnIndices: visibleColumnIndices,\n          visibleRowIndices: visibleRowIndices\n        }); // update the indices\n\n        this._columnStartIndex = columnStartIndex;\n        this._columnStopIndex = columnStopIndex;\n        this._rowStartIndex = rowStartIndex;\n        this._rowStopIndex = rowStopIndex;\n      }\n    }\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Grid.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_debounceScrollEnded\",\n    value: function _debounceScrollEnded() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = requestAnimationTimeout(this._debounceScrollEndedCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n\n    /**\n     * Check for batched CellMeasurer size invalidations.\n     * This will occur the first time one or more previously unmeasured cells are rendered.\n     */\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number' && typeof this._deferredInvalidateRowIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n      }\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref6) {\n      var _this3 = this;\n\n      var scrollLeft = _ref6.scrollLeft,\n          scrollTop = _ref6.scrollTop,\n          totalColumnsWidth = _ref6.totalColumnsWidth,\n          totalRowsHeight = _ref6.totalRowsHeight;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref7) {\n          var scrollLeft = _ref7.scrollLeft,\n              scrollTop = _ref7.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalRowsHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalColumnsWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_isScrolling\",\n    value: function _isScrolling() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      // If isScrolling is defined in props, use it to override the value in state\n      // This is a performance optimization for WindowScroller + Grid\n      return Object.hasOwnProperty.call(props, 'isScrolling') ? Boolean(props.isScrolling) : Boolean(state.isScrolling);\n    }\n  }, {\n    key: \"_maybeCallOnScrollbarPresenceChange\",\n    value: function _maybeCallOnScrollbarPresenceChange() {\n      if (this._scrollbarPresenceChanged) {\n        var onScrollbarPresenceChange = this.props.onScrollbarPresenceChange;\n        this._scrollbarPresenceChanged = false;\n        onScrollbarPresenceChange({\n          horizontal: this._horizontalScrollBarSize > 0,\n          size: this.state.instanceProps.scrollbarSize,\n          vertical: this._verticalScrollBarSize > 0\n        });\n      }\n    }\n  }, {\n    key: \"scrollToPosition\",\n\n    /**\n     * Scroll to the specified offset(s).\n     * Useful for animating position changes.\n     */\n    value: function scrollToPosition(_ref8) {\n      var scrollLeft = _ref8.scrollLeft,\n          scrollTop = _ref8.scrollTop;\n\n      var stateUpdate = Grid._getScrollToPositionStateUpdate({\n        prevState: this.state,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollLeft(props, state);\n    }\n  }, {\n    key: \"_updateScrollLeftForScrollToColumn\",\n    value: function _updateScrollLeftForScrollToColumn() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollLeftForScrollToColumnStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollTop(props, state);\n    }\n  }, {\n    key: \"_resetStyleCache\",\n    value: function _resetStyleCache() {\n      var styleCache = this._styleCache;\n      var cellCache = this._cellCache;\n      var isScrollingOptOut = this.props.isScrollingOptOut; // Reset cell and style caches once scrolling stops.\n      // This makes Grid simpler to use (since cells commonly change).\n      // And it keeps the caches from growing too large.\n      // Performance is most sensitive when a user is scrolling.\n      // Don't clear visible cells from cellCache if isScrollingOptOut is specified.\n      // This keeps the cellCache to a resonable size.\n\n      this._cellCache = {};\n      this._styleCache = {}; // Copy over the visible cell styles so avoid unnecessary re-render.\n\n      for (var rowIndex = this._rowStartIndex; rowIndex <= this._rowStopIndex; rowIndex++) {\n        for (var columnIndex = this._columnStartIndex; columnIndex <= this._columnStopIndex; columnIndex++) {\n          var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n          this._styleCache[key] = styleCache[key];\n\n          if (isScrollingOptOut) {\n            this._cellCache[key] = cellCache[key];\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_updateScrollTopForScrollToRow\",\n    value: function _updateScrollTopForScrollToRow() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollTopForScrollToRowStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var newState = {};\n\n      if (nextProps.columnCount === 0 && prevState.scrollLeft !== 0 || nextProps.rowCount === 0 && prevState.scrollTop !== 0) {\n        newState.scrollLeft = 0;\n        newState.scrollTop = 0; // only use scroll{Left,Top} from props if scrollTo{Column,Row} isn't specified\n        // scrollTo{Column,Row} should override scroll{Left,Top}\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft && nextProps.scrollToColumn < 0 || nextProps.scrollTop !== prevState.scrollTop && nextProps.scrollToRow < 0) {\n        Object.assign(newState, Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: nextProps.scrollLeft,\n          scrollTop: nextProps.scrollTop\n        }));\n      }\n\n      var instanceProps = prevState.instanceProps; // Initially we should not clearStyleCache\n\n      newState.needToResetStyleCache = false;\n\n      if (nextProps.columnWidth !== instanceProps.prevColumnWidth || nextProps.rowHeight !== instanceProps.prevRowHeight) {\n        // Reset cache. set it to {} in render\n        newState.needToResetStyleCache = true;\n      }\n\n      instanceProps.columnSizeAndPositionManager.configure({\n        cellCount: nextProps.columnCount,\n        estimatedCellSize: Grid._getEstimatedColumnSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.columnWidth)\n      });\n      instanceProps.rowSizeAndPositionManager.configure({\n        cellCount: nextProps.rowCount,\n        estimatedCellSize: Grid._getEstimatedRowSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.rowHeight)\n      });\n\n      if (instanceProps.prevColumnCount === 0 || instanceProps.prevRowCount === 0) {\n        instanceProps.prevColumnCount = 0;\n        instanceProps.prevRowCount = 0;\n      } // If scrolling is controlled outside this component, clear cache when scrolling stops\n\n\n      if (nextProps.autoHeight && nextProps.isScrolling === false && instanceProps.prevIsScrolling === true) {\n        Object.assign(newState, {\n          isScrolling: false\n        });\n      }\n\n      var maybeStateA;\n      var maybeStateB;\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevColumnCount,\n        cellSize: typeof instanceProps.prevColumnWidth === 'number' ? instanceProps.prevColumnWidth : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.columnSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.columnCount,\n        nextCellSize: typeof nextProps.columnWidth === 'number' ? nextProps.columnWidth : null,\n        nextScrollToIndex: nextProps.scrollToColumn,\n        scrollToIndex: instanceProps.prevScrollToColumn,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateA = Grid._getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState);\n        }\n      });\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevRowCount,\n        cellSize: typeof instanceProps.prevRowHeight === 'number' ? instanceProps.prevRowHeight : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.rowSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.rowCount,\n        nextCellSize: typeof nextProps.rowHeight === 'number' ? nextProps.rowHeight : null,\n        nextScrollToIndex: nextProps.scrollToRow,\n        scrollToIndex: instanceProps.prevScrollToRow,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateB = Grid._getScrollTopForScrollToRowStateUpdate(nextProps, prevState);\n        }\n      });\n      instanceProps.prevColumnCount = nextProps.columnCount;\n      instanceProps.prevColumnWidth = nextProps.columnWidth;\n      instanceProps.prevIsScrolling = nextProps.isScrolling === true;\n      instanceProps.prevRowCount = nextProps.rowCount;\n      instanceProps.prevRowHeight = nextProps.rowHeight;\n      instanceProps.prevScrollToColumn = nextProps.scrollToColumn;\n      instanceProps.prevScrollToRow = nextProps.scrollToRow; // getting scrollBarSize (moved from componentWillMount)\n\n      instanceProps.scrollbarSize = nextProps.getScrollbarSize();\n\n      if (instanceProps.scrollbarSize === undefined) {\n        instanceProps.scrollbarSizeMeasured = false;\n        instanceProps.scrollbarSize = 0;\n      } else {\n        instanceProps.scrollbarSizeMeasured = true;\n      }\n\n      newState.instanceProps = instanceProps;\n      return _objectSpread({}, newState, {}, maybeStateA, {}, maybeStateB);\n    }\n  }, {\n    key: \"_getEstimatedColumnSize\",\n    value: function _getEstimatedColumnSize(props) {\n      return typeof props.columnWidth === 'number' ? props.columnWidth : props.estimatedColumnSize;\n    }\n  }, {\n    key: \"_getEstimatedRowSize\",\n    value: function _getEstimatedRowSize(props) {\n      return typeof props.rowHeight === 'number' ? props.rowHeight : props.estimatedRowSize;\n    }\n  }, {\n    key: \"_getScrollToPositionStateUpdate\",\n\n    /**\n     * Get the updated state after scrolling to\n     * scrollLeft and scrollTop\n     */\n    value: function _getScrollToPositionStateUpdate(_ref9) {\n      var prevState = _ref9.prevState,\n          scrollLeft = _ref9.scrollLeft,\n          scrollTop = _ref9.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0) {\n        newState.scrollDirectionHorizontal = scrollLeft > prevState.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (typeof scrollTop === 'number' && scrollTop >= 0) {\n        newState.scrollDirectionVertical = scrollTop > prevState.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollTop = scrollTop;\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft || typeof scrollTop === 'number' && scrollTop >= 0 && scrollTop !== prevState.scrollTop) {\n        return newState;\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_wrapSizeGetter\",\n    value: function _wrapSizeGetter(value) {\n      return typeof value === 'function' ? value : function () {\n        return value;\n      };\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft(nextProps, prevState) {\n      var columnCount = nextProps.columnCount,\n          height = nextProps.height,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToColumn = nextProps.scrollToColumn,\n          width = nextProps.width;\n      var scrollLeft = prevState.scrollLeft,\n          instanceProps = prevState.instanceProps;\n\n      if (columnCount > 0) {\n        var finalColumn = columnCount - 1;\n        var targetIndex = scrollToColumn < 0 ? finalColumn : Math.min(finalColumn, scrollToColumn);\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n        return instanceProps.columnSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: width - scrollBarSize,\n          currentOffset: scrollLeft,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollLeftForScrollToColumnStateUpdate\",\n    value: function _getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState) {\n      var scrollLeft = prevState.scrollLeft;\n\n      var calculatedScrollLeft = Grid._getCalculatedScrollLeft(nextProps, prevState);\n\n      if (typeof calculatedScrollLeft === 'number' && calculatedScrollLeft >= 0 && scrollLeft !== calculatedScrollLeft) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: calculatedScrollLeft,\n          scrollTop: -1\n        });\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop(nextProps, prevState) {\n      var height = nextProps.height,\n          rowCount = nextProps.rowCount,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToRow = nextProps.scrollToRow,\n          width = nextProps.width;\n      var scrollTop = prevState.scrollTop,\n          instanceProps = prevState.instanceProps;\n\n      if (rowCount > 0) {\n        var finalRow = rowCount - 1;\n        var targetIndex = scrollToRow < 0 ? finalRow : Math.min(finalRow, scrollToRow);\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n        return instanceProps.rowSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: height - scrollBarSize,\n          currentOffset: scrollTop,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollTopForScrollToRowStateUpdate\",\n    value: function _getScrollTopForScrollToRowStateUpdate(nextProps, prevState) {\n      var scrollTop = prevState.scrollTop;\n\n      var calculatedScrollTop = Grid._getCalculatedScrollTop(nextProps, prevState);\n\n      if (typeof calculatedScrollTop === 'number' && calculatedScrollTop >= 0 && scrollTop !== calculatedScrollTop) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: -1,\n          scrollTop: calculatedScrollTop\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return Grid;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string.isRequired,\n  \"aria-readonly\": PropTypes.bool,\n\n  /**\n   * Set the width of the inner scrollable container to 'auto'.\n   * This is useful for single-column Grids to ensure that the column doesn't extend below a vertical scrollbar.\n   */\n  \"autoContainerWidth\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed width from the scrollingContainer so that the total width of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoWidth\": PropTypes.bool.isRequired,\n\n  /** Responsible for rendering a cell given an row and column index.  */\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof bpfrpt_proptype_CellRenderer === \"function\" ? bpfrpt_proptype_CellRenderer.isRequired ? bpfrpt_proptype_CellRenderer.isRequired : bpfrpt_proptype_CellRenderer : PropTypes.shape(bpfrpt_proptype_CellRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a group of cells given their index ranges.  */\n  \"cellRangeRenderer\": function cellRangeRenderer() {\n    return (typeof bpfrpt_proptype_CellRangeRenderer === \"function\" ? bpfrpt_proptype_CellRangeRenderer.isRequired ? bpfrpt_proptype_CellRangeRenderer.isRequired : bpfrpt_proptype_CellRangeRenderer : PropTypes.shape(bpfrpt_proptype_CellRangeRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Optional custom CSS class name to attach to root Grid element.  */\n  \"className\": PropTypes.string,\n\n  /** Number of columns in grid.  */\n  \"columnCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed column width (number) or a function that returns the width of a column given its index.  */\n  \"columnWidth\": function columnWidth() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Unfiltered props for the Grid container. */\n  \"containerProps\": PropTypes.object,\n\n  /** ARIA role for the cell-container.  */\n  \"containerRole\": PropTypes.string.isRequired,\n\n  /** Optional inline style applied to inner cell-container */\n  \"containerStyle\": PropTypes.object.isRequired,\n\n  /**\n   * If CellMeasurer is used to measure this Grid's children, this should be a pointer to its CellMeasurerCache.\n   * A shared CellMeasurerCache reference enables Grid and CellMeasurer to share measurement data.\n   */\n  \"deferredMeasurementCache\": PropTypes.object,\n\n  /**\n   * Used to estimate the total width of a Grid before all of its columns have actually been measured.\n   * The estimated total width is adjusted as columns are rendered.\n   */\n  \"estimatedColumnSize\": PropTypes.number.isRequired,\n\n  /**\n   * Used to estimate the total height of a Grid before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Exposed for testing purposes only.  */\n  \"getScrollbarSize\": PropTypes.func.isRequired,\n\n  /** Height of Grid; this property determines the number of visible (vs virtualized) rows.  */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional custom id to attach to root Grid element.  */\n  \"id\": PropTypes.string,\n\n  /**\n   * Override internal is-scrolling state tracking.\n   * This property is primarily intended for use with the WindowScroller component.\n   */\n  \"isScrolling\": PropTypes.bool,\n\n  /**\n   * Opt-out of isScrolling param passed to cellRangeRenderer.\n   * To avoid the extra render when scroll stops.\n   */\n  \"isScrollingOptOut\": PropTypes.bool.isRequired,\n\n  /** Optional renderer to be used in place of rows when either :rowCount or :columnCount is 0.  */\n  \"noContentRenderer\": function noContentRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /**\n   * Called whenever a horizontal or vertical scrollbar is added or removed.\n   * This prop is not intended for end-user use;\n   * It is used by MultiGrid to support fixed-row/fixed-column scroll syncing.\n   */\n  \"onScrollbarPresenceChange\": PropTypes.func.isRequired,\n\n  /** Callback invoked with information about the section of the Grid that was just rendered.  */\n  \"onSectionRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Number of columns to render before/after the visible section of the grid.\n   * These columns can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanColumnCount\": PropTypes.number.isRequired,\n\n  /**\n   * Calculates the number of cells to overscan before and after a specified range.\n   * This function ensures that overscanning doesn't exceed the available cells.\n   */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible section of the grid.\n   * These rows can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** ARIA role for the grid element.  */\n  \"role\": PropTypes.string.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * Should implement the following interface: ({ index: number }): number\n   */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in grid.  */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** Wait this amount of time after the last scroll event before resetting Grid `pointer-events`. */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Horizontal offset. */\n  \"scrollLeft\": PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Column index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToColumn\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToRow\": PropTypes.number.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of Grid; this property determines the number of visible (vs virtualized) columns.  */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(Grid, \"defaultProps\", {\n  'aria-label': 'grid',\n  'aria-readonly': true,\n  autoContainerWidth: false,\n  autoHeight: false,\n  autoWidth: false,\n  cellRangeRenderer: defaultCellRangeRenderer,\n  containerRole: 'rowgroup',\n  containerStyle: {},\n  estimatedColumnSize: 100,\n  estimatedRowSize: 30,\n  getScrollbarSize: scrollbarSize,\n  noContentRenderer: renderNull,\n  onScroll: function onScroll() {},\n  onScrollbarPresenceChange: function onScrollbarPresenceChange() {},\n  onSectionRendered: function onSectionRendered() {},\n  overscanColumnCount: 0,\n  overscanIndicesGetter: defaultOverscanIndicesGetter,\n  overscanRowCount: 10,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  scrollToAlignment: 'auto',\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  tabIndex: 0,\n  isScrollingOptOut: false\n});\n\npolyfill(Grid);\nexport default Grid;\nimport { bpfrpt_proptype_CellRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellRangeRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellPosition } from \"./types\";\nimport { bpfrpt_proptype_CellSize } from \"./types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"./types\";\nimport { bpfrpt_proptype_NoContentRenderer } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport { bpfrpt_proptype_ScrollbarPresenceChange } from \"./types\";\nimport { bpfrpt_proptype_RenderedSection } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"./types\";\nimport { bpfrpt_proptype_Alignment } from \"./types\";\nimport { bpfrpt_proptype_CellCache } from \"./types\";\nimport { bpfrpt_proptype_StyleCache } from \"./types\";\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";","import { caf, raf } from './animationFrame';\nvar bpfrpt_proptype_AnimationTimeoutId = process.env.NODE_ENV === 'production' ? null : {\n  \"id\": PropTypes.number.isRequired\n};\nexport var cancelAnimationTimeout = function cancelAnimationTimeout(frame) {\n  return caf(frame.id);\n};\n/**\n * Recursively calls requestAnimationFrame until a specified delay has been met or exceeded.\n * When the delay time has been reached the function you're timing out will be called.\n *\n * Credit: Joe Lambert (https://gist.github.com/joelambert/1002116#file-requesttimeout-js)\n */\n\nexport var requestAnimationTimeout = function requestAnimationTimeout(callback, delay) {\n  var start; // wait for end of processing current event handler, because event handler may be long\n\n  Promise.resolve().then(function () {\n    start = Date.now();\n  });\n\n  var timeout = function timeout() {\n    if (Date.now() - start >= delay) {\n      callback.call();\n    } else {\n      frame.id = raf(timeout);\n    }\n  };\n\n  var frame = {\n    id: raf(timeout)\n  };\n  return frame;\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_AnimationTimeoutId };","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","/**\n * Default implementation of cellRangeRenderer used by Grid.\n * This renderer supports cell-caching while the user is scrolling.\n */\nexport default function defaultCellRangeRenderer(_ref) {\n  var cellCache = _ref.cellCache,\n      cellRenderer = _ref.cellRenderer,\n      columnSizeAndPositionManager = _ref.columnSizeAndPositionManager,\n      columnStartIndex = _ref.columnStartIndex,\n      columnStopIndex = _ref.columnStopIndex,\n      deferredMeasurementCache = _ref.deferredMeasurementCache,\n      horizontalOffsetAdjustment = _ref.horizontalOffsetAdjustment,\n      isScrolling = _ref.isScrolling,\n      isScrollingOptOut = _ref.isScrollingOptOut,\n      parent = _ref.parent,\n      rowSizeAndPositionManager = _ref.rowSizeAndPositionManager,\n      rowStartIndex = _ref.rowStartIndex,\n      rowStopIndex = _ref.rowStopIndex,\n      styleCache = _ref.styleCache,\n      verticalOffsetAdjustment = _ref.verticalOffsetAdjustment,\n      visibleColumnIndices = _ref.visibleColumnIndices,\n      visibleRowIndices = _ref.visibleRowIndices;\n  var renderedCells = []; // Browsers have native size limits for elements (eg Chrome 33M pixels, IE 1.5M pixes).\n  // User cannot scroll beyond these size limitations.\n  // In order to work around this, ScalingCellSizeAndPositionManager compresses offsets.\n  // We should never cache styles for compressed offsets though as this can lead to bugs.\n  // See issue #576 for more.\n\n  var areOffsetsAdjusted = columnSizeAndPositionManager.areOffsetsAdjusted() || rowSizeAndPositionManager.areOffsetsAdjusted();\n  var canCacheStyle = !isScrolling && !areOffsetsAdjusted;\n\n  for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n    var rowDatum = rowSizeAndPositionManager.getSizeAndPositionOfCell(rowIndex);\n\n    for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n      var columnDatum = columnSizeAndPositionManager.getSizeAndPositionOfCell(columnIndex);\n      var isVisible = columnIndex >= visibleColumnIndices.start && columnIndex <= visibleColumnIndices.stop && rowIndex >= visibleRowIndices.start && rowIndex <= visibleRowIndices.stop;\n      var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n      var style = void 0; // Cache style objects so shallow-compare doesn't re-render unnecessarily.\n\n      if (canCacheStyle && styleCache[key]) {\n        style = styleCache[key];\n      } else {\n        // In deferred mode, cells will be initially rendered before we know their size.\n        // Don't interfere with CellMeasurer's measurements by setting an invalid size.\n        if (deferredMeasurementCache && !deferredMeasurementCache.has(rowIndex, columnIndex)) {\n          // Position not-yet-measured cells at top/left 0,0,\n          // And give them width/height of 'auto' so they can grow larger than the parent Grid if necessary.\n          // Positioning them further to the right/bottom influences their measured size.\n          style = {\n            height: 'auto',\n            left: 0,\n            position: 'absolute',\n            top: 0,\n            width: 'auto'\n          };\n        } else {\n          style = {\n            height: rowDatum.size,\n            left: columnDatum.offset + horizontalOffsetAdjustment,\n            position: 'absolute',\n            top: rowDatum.offset + verticalOffsetAdjustment,\n            width: columnDatum.size\n          };\n          styleCache[key] = style;\n        }\n      }\n\n      var cellRendererParams = {\n        columnIndex: columnIndex,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent,\n        rowIndex: rowIndex,\n        style: style\n      };\n      var renderedCell = void 0; // Avoid re-creating cells while scrolling.\n      // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n      // If a scroll is in progress- cache and reuse cells.\n      // This cache will be thrown away once scrolling completes.\n      // However if we are scaling scroll positions and sizes, we should also avoid caching.\n      // This is because the offset changes slightly as scroll position changes and caching leads to stale values.\n      // For more info refer to issue #395\n      //\n      // If isScrollingOptOut is specified, we always cache cells.\n      // For more info refer to issue #1028\n\n      if ((isScrollingOptOut || isScrolling) && !horizontalOffsetAdjustment && !verticalOffsetAdjustment) {\n        if (!cellCache[key]) {\n          cellCache[key] = cellRenderer(cellRendererParams);\n        }\n\n        renderedCell = cellCache[key]; // If the user is no longer scrolling, don't cache cells.\n        // This makes dynamic cell content difficult for users and would also lead to a heavier memory footprint.\n      } else {\n        renderedCell = cellRenderer(cellRendererParams);\n      }\n\n      if (renderedCell == null || renderedCell === false) {\n        continue;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        warnAboutMissingStyle(parent, renderedCell);\n      }\n\n      renderedCells.push(renderedCell);\n    }\n  }\n\n  return renderedCells;\n}\n\nfunction warnAboutMissingStyle(parent, renderedCell) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (renderedCell) {\n      // If the direct child is a CellMeasurer, then we should check its child\n      // See issue #611\n      if (renderedCell.type && renderedCell.type.__internalCellMeasurerFlag) {\n        renderedCell = renderedCell.props.children;\n      }\n\n      if (renderedCell && renderedCell.props && renderedCell.props.style === undefined && parent.__warnedAboutMissingStyle !== true) {\n        parent.__warnedAboutMissingStyle = true;\n        console.warn('Rendered cell should include style property for positioning.');\n      }\n    }\n  }\n}\n\nimport { bpfrpt_proptype_CellRangeRendererParams } from \"./types\";","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n  // Make sure we render at least 1 cell extra before and after (except near boundaries)\n  // This is necessary in order to support keyboard navigation (TAB/SHIFT+TAB) in some cases\n  // For more info see issues #625\n  overscanCellsCount = Math.max(1, overscanCellsCount);\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - 1),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + 1)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","var bpfrpt_proptype_ScrollIndices = process.env.NODE_ENV === 'production' ? null : {\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_ScrollIndices };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\n/**\n * This HOC decorates a virtualized component and responds to arrow-key events by scrolling one row or column at a time.\n */\n\nvar ArrowKeyStepper = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ArrowKeyStepper, _React$PureComponent);\n\n  function ArrowKeyStepper() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ArrowKeyStepper);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ArrowKeyStepper)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollToColumn: 0,\n      scrollToRow: 0,\n      instanceProps: {\n        prevScrollToColumn: 0,\n        prevScrollToRow: 0\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onKeyDown\", function (event) {\n      var _this$props = _this.props,\n          columnCount = _this$props.columnCount,\n          disabled = _this$props.disabled,\n          mode = _this$props.mode,\n          rowCount = _this$props.rowCount;\n\n      if (disabled) {\n        return;\n      }\n\n      var _this$_getScrollState = _this._getScrollState(),\n          scrollToColumnPrevious = _this$_getScrollState.scrollToColumn,\n          scrollToRowPrevious = _this$_getScrollState.scrollToRow;\n\n      var _this$_getScrollState2 = _this._getScrollState(),\n          scrollToColumn = _this$_getScrollState2.scrollToColumn,\n          scrollToRow = _this$_getScrollState2.scrollToRow; // The above cases all prevent default event event behavior.\n      // This is to keep the grid from scrolling after the snap-to update.\n\n\n      switch (event.key) {\n        case 'ArrowDown':\n          scrollToRow = mode === 'cells' ? Math.min(scrollToRow + 1, rowCount - 1) : Math.min(_this._rowStopIndex + 1, rowCount - 1);\n          break;\n\n        case 'ArrowLeft':\n          scrollToColumn = mode === 'cells' ? Math.max(scrollToColumn - 1, 0) : Math.max(_this._columnStartIndex - 1, 0);\n          break;\n\n        case 'ArrowRight':\n          scrollToColumn = mode === 'cells' ? Math.min(scrollToColumn + 1, columnCount - 1) : Math.min(_this._columnStopIndex + 1, columnCount - 1);\n          break;\n\n        case 'ArrowUp':\n          scrollToRow = mode === 'cells' ? Math.max(scrollToRow - 1, 0) : Math.max(_this._rowStartIndex - 1, 0);\n          break;\n      }\n\n      if (scrollToColumn !== scrollToColumnPrevious || scrollToRow !== scrollToRowPrevious) {\n        event.preventDefault();\n\n        _this._updateScrollState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref) {\n      var columnStartIndex = _ref.columnStartIndex,\n          columnStopIndex = _ref.columnStopIndex,\n          rowStartIndex = _ref.rowStartIndex,\n          rowStopIndex = _ref.rowStopIndex;\n      _this._columnStartIndex = columnStartIndex;\n      _this._columnStopIndex = columnStopIndex;\n      _this._rowStartIndex = rowStartIndex;\n      _this._rowStopIndex = rowStopIndex;\n    });\n\n    return _this;\n  }\n\n  _createClass(ArrowKeyStepper, [{\n    key: \"setScrollIndexes\",\n    value: function setScrollIndexes(_ref2) {\n      var scrollToColumn = _ref2.scrollToColumn,\n          scrollToRow = _ref2.scrollToRow;\n      this.setState({\n        scrollToRow: scrollToRow,\n        scrollToColumn: scrollToColumn\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          className = _this$props2.className,\n          children = _this$props2.children;\n\n      var _this$_getScrollState3 = this._getScrollState(),\n          scrollToColumn = _this$_getScrollState3.scrollToColumn,\n          scrollToRow = _this$_getScrollState3.scrollToRow;\n\n      return React.createElement(\"div\", {\n        className: className,\n        onKeyDown: this._onKeyDown\n      }, children({\n        onSectionRendered: this._onSectionRendered,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow\n      }));\n    }\n  }, {\n    key: \"_getScrollState\",\n    value: function _getScrollState() {\n      return this.props.isControlled ? this.props : this.state;\n    }\n  }, {\n    key: \"_updateScrollState\",\n    value: function _updateScrollState(_ref3) {\n      var scrollToColumn = _ref3.scrollToColumn,\n          scrollToRow = _ref3.scrollToRow;\n      var _this$props3 = this.props,\n          isControlled = _this$props3.isControlled,\n          onScrollToChange = _this$props3.onScrollToChange;\n\n      if (typeof onScrollToChange === 'function') {\n        onScrollToChange({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n\n      if (!isControlled) {\n        this.setState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.isControlled) {\n        return {};\n      }\n\n      if (nextProps.scrollToColumn !== prevState.instanceProps.prevScrollToColumn || nextProps.scrollToRow !== prevState.instanceProps.prevScrollToRow) {\n        return _objectSpread({}, prevState, {\n          scrollToColumn: nextProps.scrollToColumn,\n          scrollToRow: nextProps.scrollToRow,\n          instanceProps: {\n            prevScrollToColumn: nextProps.scrollToColumn,\n            prevScrollToRow: nextProps.scrollToRow\n          }\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return ArrowKeyStepper;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"children\": PropTypes.func.isRequired,\n  \"className\": PropTypes.string,\n  \"columnCount\": PropTypes.number.isRequired,\n  \"disabled\": PropTypes.bool.isRequired,\n  \"isControlled\": PropTypes.bool.isRequired,\n  \"mode\": PropTypes.oneOf([\"cells\", \"edges\"]).isRequired,\n  \"onScrollToChange\": PropTypes.func,\n  \"rowCount\": PropTypes.number.isRequired,\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(ArrowKeyStepper, \"defaultProps\", {\n  disabled: false,\n  isControlled: false,\n  mode: 'edges',\n  scrollToColumn: 0,\n  scrollToRow: 0\n});\n\npolyfill(ArrowKeyStepper);\nexport default ArrowKeyStepper;\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_ScrollIndices } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport createDetectElementResize from '../vendor/detectElementResize';\nvar AutoSizer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AutoSizer, _React$Component);\n\n  function AutoSizer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AutoSizer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AutoSizer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      height: _this.props.defaultHeight || 0,\n      width: _this.props.defaultWidth || 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_parentNode\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_autoSizer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      var _this$props = _this.props,\n          disableHeight = _this$props.disableHeight,\n          disableWidth = _this$props.disableWidth,\n          onResize = _this$props.onResize;\n\n      if (_this._parentNode) {\n        // Guard against AutoSizer component being removed from the DOM immediately after being added.\n        // This can result in invalid style values which can result in NaN values if we don't handle them.\n        // See issue #150 for more context.\n        var height = _this._parentNode.offsetHeight || 0;\n        var width = _this._parentNode.offsetWidth || 0;\n        var win = _this._window || window;\n        var style = win.getComputedStyle(_this._parentNode) || {};\n        var paddingLeft = parseInt(style.paddingLeft, 10) || 0;\n        var paddingRight = parseInt(style.paddingRight, 10) || 0;\n        var paddingTop = parseInt(style.paddingTop, 10) || 0;\n        var paddingBottom = parseInt(style.paddingBottom, 10) || 0;\n        var newHeight = height - paddingTop - paddingBottom;\n        var newWidth = width - paddingLeft - paddingRight;\n\n        if (!disableHeight && _this.state.height !== newHeight || !disableWidth && _this.state.width !== newWidth) {\n          _this.setState({\n            height: height - paddingTop - paddingBottom,\n            width: width - paddingLeft - paddingRight\n          });\n\n          onResize({\n            height: height,\n            width: width\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (autoSizer) {\n      _this._autoSizer = autoSizer;\n    });\n\n    return _this;\n  }\n\n  _createClass(AutoSizer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var nonce = this.props.nonce;\n\n      if (this._autoSizer && this._autoSizer.parentNode && this._autoSizer.parentNode.ownerDocument && this._autoSizer.parentNode.ownerDocument.defaultView && this._autoSizer.parentNode instanceof this._autoSizer.parentNode.ownerDocument.defaultView.HTMLElement) {\n        // Delay access of parentNode until mount.\n        // This handles edge-cases where the component has already been unmounted before its ref has been set,\n        // As well as libraries like react-lite which have a slightly different lifecycle.\n        this._parentNode = this._autoSizer.parentNode;\n        this._window = this._autoSizer.parentNode.ownerDocument.defaultView; // Defer requiring resize handler in order to support server-side rendering.\n        // See issue #41\n\n        this._detectElementResize = createDetectElementResize(nonce, this._window);\n\n        this._detectElementResize.addResizeListener(this._parentNode, this._onResize);\n\n        this._onResize();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._detectElementResize && this._parentNode) {\n        this._detectElementResize.removeResizeListener(this._parentNode, this._onResize);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          className = _this$props2.className,\n          disableHeight = _this$props2.disableHeight,\n          disableWidth = _this$props2.disableWidth,\n          style = _this$props2.style;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width; // Outer div should not force width/height since that may prevent containers from shrinking.\n      // Inner component should overflow and use calculated width/height.\n      // See issue #68 for more information.\n\n      var outerStyle = {\n        overflow: 'visible'\n      };\n      var childParams = {};\n\n      if (!disableHeight) {\n        outerStyle.height = 0;\n        childParams.height = height;\n      }\n\n      if (!disableWidth) {\n        outerStyle.width = 0;\n        childParams.width = width;\n      }\n      /**\n       * TODO: Avoid rendering children before the initial measurements have been collected.\n       * At best this would just be wasting cycles.\n       * Add this check into version 10 though as it could break too many ref callbacks in version 9.\n       * Note that if default width/height props were provided this would still work with SSR.\n      if (\n        height !== 0 &&\n        width !== 0\n      ) {\n        child = children({ height, width })\n      }\n      */\n\n\n      return React.createElement(\"div\", {\n        className: className,\n        ref: this._setRef,\n        style: _objectSpread({}, outerStyle, {}, style)\n      }, children(childParams));\n    }\n  }]);\n\n  return AutoSizer;\n}(React.Component), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /** Function responsible for rendering children.*/\n  \"children\": PropTypes.func.isRequired,\n\n  /** Optional custom CSS class name to attach to root AutoSizer element.  */\n  \"className\": PropTypes.string,\n\n  /** Default height to use for initial render; useful for SSR */\n  \"defaultHeight\": PropTypes.number,\n\n  /** Default width to use for initial render; useful for SSR */\n  \"defaultWidth\": PropTypes.number,\n\n  /** Disable dynamic :height property */\n  \"disableHeight\": PropTypes.bool.isRequired,\n\n  /** Disable dynamic :width property */\n  \"disableWidth\": PropTypes.bool.isRequired,\n\n  /** Nonce of the inlined stylesheet for Content Security Policy */\n  \"nonce\": PropTypes.string,\n\n  /** Callback to be invoked on-resize */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object\n}), _temp);\n\n_defineProperty(AutoSizer, \"defaultProps\", {\n  onResize: function onResize() {},\n  disableHeight: false,\n  disableWidth: false,\n  style: {}\n});\n\nexport { AutoSizer as default };\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\n\n/**\n * Wraps a cell and measures its rendered content.\n * Measurements are stored in a per-cell cache.\n * Cached-content is not be re-measured.\n */\nvar CellMeasurer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CellMeasurer, _React$PureComponent);\n\n  function CellMeasurer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CellMeasurer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CellMeasurer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_measure\", function () {\n      var _this$props = _this.props,\n          cache = _this$props.cache,\n          _this$props$columnInd = _this$props.columnIndex,\n          columnIndex = _this$props$columnInd === void 0 ? 0 : _this$props$columnInd,\n          parent = _this$props.parent,\n          _this$props$rowIndex = _this$props.rowIndex,\n          rowIndex = _this$props$rowIndex === void 0 ? _this.props.index || 0 : _this$props$rowIndex;\n\n      var _this$_getCellMeasure = _this._getCellMeasurements(),\n          height = _this$_getCellMeasure.height,\n          width = _this$_getCellMeasure.width;\n\n      if (height !== cache.getHeight(rowIndex, columnIndex) || width !== cache.getWidth(rowIndex, columnIndex)) {\n        cache.set(rowIndex, columnIndex, width, height);\n\n        if (parent && typeof parent.recomputeGridSize === 'function') {\n          parent.recomputeGridSize({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('CellMeasurer registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      if (element) {\n        _this._maybeMeasureCell();\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(CellMeasurer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return typeof children === 'function' ? children({\n        measure: this._measure,\n        registerChild: this._registerChild\n      }) : children;\n    }\n  }, {\n    key: \"_getCellMeasurements\",\n    value: function _getCellMeasurements() {\n      var cache = this.props.cache;\n      var node = this._child || findDOMNode(this); // TODO Check for a bad combination of fixedWidth and missing numeric width or vice versa with height\n\n      if (node && node.ownerDocument && node.ownerDocument.defaultView && node instanceof node.ownerDocument.defaultView.HTMLElement) {\n        var styleWidth = node.style.width;\n        var styleHeight = node.style.height; // If we are re-measuring a cell that has already been measured,\n        // It will have a hard-coded width/height from the previous measurement.\n        // The fact that we are measuring indicates this measurement is probably stale,\n        // So explicitly clear it out (eg set to \"auto\") so we can recalculate.\n        // See issue #593 for more info.\n        // Even if we are measuring initially- if we're inside of a MultiGrid component,\n        // Explicitly clear width/height before measuring to avoid being tainted by another Grid.\n        // eg top/left Grid renders before bottom/right Grid\n        // Since the CellMeasurerCache is shared between them this taints derived cell size values.\n\n        if (!cache.hasFixedWidth()) {\n          node.style.width = 'auto';\n        }\n\n        if (!cache.hasFixedHeight()) {\n          node.style.height = 'auto';\n        }\n\n        var height = Math.ceil(node.offsetHeight);\n        var width = Math.ceil(node.offsetWidth); // Reset after measuring to avoid breaking styles; see #660\n\n        if (styleWidth) {\n          node.style.width = styleWidth;\n        }\n\n        if (styleHeight) {\n          node.style.height = styleHeight;\n        }\n\n        return {\n          height: height,\n          width: width\n        };\n      } else {\n        return {\n          height: 0,\n          width: 0\n        };\n      }\n    }\n  }, {\n    key: \"_maybeMeasureCell\",\n    value: function _maybeMeasureCell() {\n      var _this$props2 = this.props,\n          cache = _this$props2.cache,\n          _this$props2$columnIn = _this$props2.columnIndex,\n          columnIndex = _this$props2$columnIn === void 0 ? 0 : _this$props2$columnIn,\n          parent = _this$props2.parent,\n          _this$props2$rowIndex = _this$props2.rowIndex,\n          rowIndex = _this$props2$rowIndex === void 0 ? this.props.index || 0 : _this$props2$rowIndex;\n\n      if (!cache.has(rowIndex, columnIndex)) {\n        var _this$_getCellMeasure2 = this._getCellMeasurements(),\n            height = _this$_getCellMeasure2.height,\n            width = _this$_getCellMeasure2.width;\n\n        cache.set(rowIndex, columnIndex, width, height); // If size has changed, let Grid know to re-render.\n\n        if (parent && typeof parent.invalidateCellSizeAfterRender === 'function') {\n          parent.invalidateCellSizeAfterRender({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    }\n  }]);\n\n  return CellMeasurer;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"cache\": function cache() {\n    return (typeof bpfrpt_proptype_CellMeasureCache === \"function\" ? bpfrpt_proptype_CellMeasureCache.isRequired ? bpfrpt_proptype_CellMeasureCache.isRequired : bpfrpt_proptype_CellMeasureCache : PropTypes.shape(bpfrpt_proptype_CellMeasureCache).isRequired).apply(this, arguments);\n  },\n  \"children\": PropTypes.oneOfType([PropTypes.func, PropTypes.node]).isRequired,\n  \"columnIndex\": PropTypes.number,\n  \"index\": PropTypes.number,\n  \"parent\": PropTypes.shape({\n    invalidateCellSizeAfterRender: PropTypes.func,\n    recomputeGridSize: PropTypes.func\n  }).isRequired,\n  \"rowIndex\": PropTypes.number\n}), _temp); // Used for DEV mode warning check\n\n_defineProperty(CellMeasurer, \"__internalCellMeasurerFlag\", false);\n\nexport { CellMeasurer as default };\n\nif (process.env.NODE_ENV !== 'production') {\n  CellMeasurer.__internalCellMeasurerFlag = true;\n}\n\nimport { bpfrpt_proptype_CellMeasureCache } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nexport var DEFAULT_HEIGHT = 30;\nexport var DEFAULT_WIDTH = 100; // Enables more intelligent mapping of a given column and row index to an item ID.\n// This prevents a cell cache from being invalidated when its parent collection is modified.\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCache =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCache() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCache);\n\n    _defineProperty(this, \"_cellHeightCache\", {});\n\n    _defineProperty(this, \"_cellWidthCache\", {});\n\n    _defineProperty(this, \"_columnWidthCache\", {});\n\n    _defineProperty(this, \"_rowHeightCache\", {});\n\n    _defineProperty(this, \"_defaultHeight\", void 0);\n\n    _defineProperty(this, \"_defaultWidth\", void 0);\n\n    _defineProperty(this, \"_minHeight\", void 0);\n\n    _defineProperty(this, \"_minWidth\", void 0);\n\n    _defineProperty(this, \"_keyMapper\", void 0);\n\n    _defineProperty(this, \"_hasFixedHeight\", void 0);\n\n    _defineProperty(this, \"_hasFixedWidth\", void 0);\n\n    _defineProperty(this, \"_columnCount\", 0);\n\n    _defineProperty(this, \"_rowCount\", 0);\n\n    _defineProperty(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      var key = _this._keyMapper(0, index);\n\n      return _this._columnWidthCache[key] !== undefined ? _this._columnWidthCache[key] : _this._defaultWidth;\n    });\n\n    _defineProperty(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      var key = _this._keyMapper(index, 0);\n\n      return _this._rowHeightCache[key] !== undefined ? _this._rowHeightCache[key] : _this._defaultHeight;\n    });\n\n    var defaultHeight = params.defaultHeight,\n        defaultWidth = params.defaultWidth,\n        fixedHeight = params.fixedHeight,\n        fixedWidth = params.fixedWidth,\n        keyMapper = params.keyMapper,\n        minHeight = params.minHeight,\n        minWidth = params.minWidth;\n    this._hasFixedHeight = fixedHeight === true;\n    this._hasFixedWidth = fixedWidth === true;\n    this._minHeight = minHeight || 0;\n    this._minWidth = minWidth || 0;\n    this._keyMapper = keyMapper || defaultKeyMapper;\n    this._defaultHeight = Math.max(this._minHeight, typeof defaultHeight === 'number' ? defaultHeight : DEFAULT_HEIGHT);\n    this._defaultWidth = Math.max(this._minWidth, typeof defaultWidth === 'number' ? defaultWidth : DEFAULT_WIDTH);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (this._hasFixedHeight === false && this._hasFixedWidth === false) {\n        console.warn(\"CellMeasurerCache should only measure a cell's width or height. \" + 'You have configured CellMeasurerCache to measure both. ' + 'This will result in poor performance.');\n      }\n\n      if (this._hasFixedHeight === false && this._defaultHeight === 0) {\n        console.warn('Fixed height CellMeasurerCache should specify a :defaultHeight greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n\n      if (this._hasFixedWidth === false && this._defaultWidth === 0) {\n        console.warn('Fixed width CellMeasurerCache should specify a :defaultWidth greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n    }\n  }\n\n  _createClass(CellMeasurerCache, [{\n    key: \"clear\",\n    value: function clear(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      delete this._cellHeightCache[key];\n      delete this._cellWidthCache[key];\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellHeightCache = {};\n      this._cellWidthCache = {};\n      this._columnWidthCache = {};\n      this._rowHeightCache = {};\n      this._rowCount = 0;\n      this._columnCount = 0;\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._hasFixedHeight;\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._hasFixedWidth;\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedHeight) {\n        return this._defaultHeight;\n      } else {\n        var _key = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellHeightCache[_key] !== undefined ? Math.max(this._minHeight, this._cellHeightCache[_key]) : this._defaultHeight;\n      }\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedWidth) {\n        return this._defaultWidth;\n      } else {\n        var _key2 = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellWidthCache[_key2] !== undefined ? Math.max(this._minWidth, this._cellWidthCache[_key2]) : this._defaultWidth;\n      }\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      return this._cellHeightCache[key] !== undefined;\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      if (columnIndex >= this._columnCount) {\n        this._columnCount = columnIndex + 1;\n      }\n\n      if (rowIndex >= this._rowCount) {\n        this._rowCount = rowIndex + 1;\n      } // Size is cached per cell so we don't have to re-measure if cells are re-ordered.\n\n\n      this._cellHeightCache[key] = height;\n      this._cellWidthCache[key] = width;\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"_updateCachedColumnAndRowSizes\",\n    value: function _updateCachedColumnAndRowSizes(rowIndex, columnIndex) {\n      // :columnWidth and :rowHeight are derived based on all cells in a column/row.\n      // Pre-cache these derived values for faster lookup later.\n      // Reads are expected to occur more frequently than writes in this case.\n      // Only update non-fixed dimensions though to avoid doing unnecessary work.\n      if (!this._hasFixedWidth) {\n        var columnWidth = 0;\n\n        for (var i = 0; i < this._rowCount; i++) {\n          columnWidth = Math.max(columnWidth, this.getWidth(i, columnIndex));\n        }\n\n        var columnKey = this._keyMapper(0, columnIndex);\n\n        this._columnWidthCache[columnKey] = columnWidth;\n      }\n\n      if (!this._hasFixedHeight) {\n        var rowHeight = 0;\n\n        for (var _i = 0; _i < this._columnCount; _i++) {\n          rowHeight = Math.max(rowHeight, this.getHeight(rowIndex, _i));\n        }\n\n        var rowKey = this._keyMapper(rowIndex, 0);\n\n        this._rowHeightCache[rowKey] = rowHeight;\n      }\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCache;\n}();\n\nexport { CellMeasurerCache as default };\n\nfunction defaultKeyMapper(rowIndex, columnIndex) {\n  return \"\".concat(rowIndex, \"-\").concat(columnIndex);\n}\n\nimport { bpfrpt_proptype_CellMeasureCache } from \"./types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize'; // @TODO Merge Collection and CollectionView\n\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nvar IS_SCROLLING_TIMEOUT = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n/**\n * Monitors changes in properties (eg. cellCount) and state (eg. scroll offsets) to determine when rendering needs to occur.\n * This component does not render any visible content itself; it defers to the specified :cellLayoutManager.\n */\n\nvar CollectionView =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CollectionView, _React$PureComponent);\n\n  // Invokes callbacks only when their values have changed.\n  function CollectionView() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CollectionView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CollectionView)).call.apply(_getPrototypeOf2, [this].concat(args))); // If this component is being rendered server-side, getScrollbarSize() will return undefined.\n    // We handle this case in componentDidMount()\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_calculateSizeAndPositionDataOnNextUpdate\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnSectionRenderedHelper\", function () {\n      var _this$props = _this.props,\n          cellLayoutManager = _this$props.cellLayoutManager,\n          onSectionRendered = _this$props.onSectionRendered;\n\n      _this._onSectionRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          indices: cellLayoutManager.getLastRenderedIndices()\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_updateScrollPositionForScrollToCell\", function () {\n      var _this$props2 = _this.props,\n          cellLayoutManager = _this$props2.cellLayoutManager,\n          height = _this$props2.height,\n          scrollToAlignment = _this$props2.scrollToAlignment,\n          scrollToCell = _this$props2.scrollToCell,\n          width = _this$props2.width;\n      var _this$state = _this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop;\n\n      if (scrollToCell >= 0) {\n        var scrollPosition = cellLayoutManager.getScrollPositionForCell({\n          align: scrollToAlignment,\n          cellIndex: scrollToCell,\n          height: height,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          width: width\n        });\n\n        if (scrollPosition.scrollLeft !== scrollLeft || scrollPosition.scrollTop !== scrollTop) {\n          _this._setScrollPosition(scrollPosition);\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target !== _this._scrollingContainer) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._enablePointerEventsAfterDelay(); // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scrollTop never exceeds the total height.\n\n\n      var _this$props3 = _this.props,\n          cellLayoutManager = _this$props3.cellLayoutManager,\n          height = _this$props3.height,\n          isScrollingChange = _this$props3.isScrollingChange,\n          width = _this$props3.width;\n      var scrollbarSize = _this._scrollbarSize;\n\n      var _cellLayoutManager$ge = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge.height,\n          totalWidth = _cellLayoutManager$ge.width;\n\n      var scrollLeft = Math.max(0, Math.min(totalWidth - width + scrollbarSize, event.target.scrollLeft));\n      var scrollTop = Math.max(0, Math.min(totalHeight - height + scrollbarSize, event.target.scrollTop)); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (_this.state.scrollLeft !== scrollLeft || _this.state.scrollTop !== scrollTop) {\n        // Browsers with cancelable scroll events (eg. Firefox) interrupt scrolling animations if scrollTop/scrollLeft is set.\n        // Other browsers (eg. Safari) don't scroll as well without the help under certain conditions (DOM or style changes during scrolling).\n        // All things considered, this seems to be the best current work around that I'm aware of.\n        // For more information see https://github.com/bvaughn/react-virtualized/pull/124\n        var scrollPositionChangeReason = event.cancelable ? SCROLL_POSITION_CHANGE_REASONS.OBSERVED : SCROLL_POSITION_CHANGE_REASONS.REQUESTED; // Synchronously set :isScrolling the first time (since _setNextState will reschedule its animation frame each time it's called)\n\n        if (!_this.state.isScrolling) {\n          isScrollingChange(true);\n        }\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollPositionChangeReason: scrollPositionChangeReason,\n          scrollTop: scrollTop\n        });\n      }\n\n      _this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalWidth: totalWidth,\n        totalHeight: totalHeight\n      });\n    });\n\n    _this._scrollbarSize = getScrollbarSize();\n\n    if (_this._scrollbarSize === undefined) {\n      _this._scrollbarSizeMeasured = false;\n      _this._scrollbarSize = 0;\n    } else {\n      _this._scrollbarSizeMeasured = true;\n    }\n\n    return _this;\n  }\n  /**\n   * Forced recompute of cell sizes and positions.\n   * This function should be called if cell sizes have changed but nothing else has.\n   * Since cell positions are calculated by callbacks, the collection view has no way of detecting when the underlying data has changed.\n   */\n\n\n  _createClass(CollectionView, [{\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._calculateSizeAndPositionDataOnNextUpdate = true;\n      this.forceUpdate();\n    }\n    /* ---------------------------- Component lifecycle methods ---------------------------- */\n\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          cellLayoutManager = _this$props4.cellLayoutManager,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToCell = _this$props4.scrollToCell,\n          scrollTop = _this$props4.scrollTop; // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n      if (!this._scrollbarSizeMeasured) {\n        this._scrollbarSize = getScrollbarSize();\n        this._scrollbarSizeMeasured = true;\n        this.setState({});\n      }\n\n      if (scrollToCell >= 0) {\n        this._updateScrollPositionForScrollToCell();\n      } else if (scrollLeft >= 0 || scrollTop >= 0) {\n        this._setScrollPosition({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      } // Update onSectionRendered callback.\n\n\n      this._invokeOnSectionRenderedHelper();\n\n      var _cellLayoutManager$ge2 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge2.height,\n          totalWidth = _cellLayoutManager$ge2.width; // Initialize onScroll callback.\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalHeight: totalHeight,\n        totalWidth: totalWidth\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this$props5 = this.props,\n          height = _this$props5.height,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToCell = _this$props5.scrollToCell,\n          width = _this$props5.width;\n      var _this$state2 = this.state,\n          scrollLeft = _this$state2.scrollLeft,\n          scrollPositionChangeReason = _this$state2.scrollPositionChangeReason,\n          scrollTop = _this$state2.scrollTop; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        if (scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft && scrollLeft !== this._scrollingContainer.scrollLeft) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop >= 0 && scrollTop !== prevState.scrollTop && scrollTop !== this._scrollingContainer.scrollTop) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Update scroll offsets if the current :scrollToCell values requires it\n\n\n      if (height !== prevProps.height || scrollToAlignment !== prevProps.scrollToAlignment || scrollToCell !== prevProps.scrollToCell || width !== prevProps.width) {\n        this._updateScrollPositionForScrollToCell();\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnSectionRenderedHelper();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoHeight = _this$props6.autoHeight,\n          cellCount = _this$props6.cellCount,\n          cellLayoutManager = _this$props6.cellLayoutManager,\n          className = _this$props6.className,\n          height = _this$props6.height,\n          horizontalOverscanSize = _this$props6.horizontalOverscanSize,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          style = _this$props6.style,\n          verticalOverscanSize = _this$props6.verticalOverscanSize,\n          width = _this$props6.width;\n      var _this$state3 = this.state,\n          isScrolling = _this$state3.isScrolling,\n          scrollLeft = _this$state3.scrollLeft,\n          scrollTop = _this$state3.scrollTop; // Memoization reset\n\n      if (this._lastRenderedCellCount !== cellCount || this._lastRenderedCellLayoutManager !== cellLayoutManager || this._calculateSizeAndPositionDataOnNextUpdate) {\n        this._lastRenderedCellCount = cellCount;\n        this._lastRenderedCellLayoutManager = cellLayoutManager;\n        this._calculateSizeAndPositionDataOnNextUpdate = false;\n        cellLayoutManager.calculateSizeAndPositionData();\n      }\n\n      var _cellLayoutManager$ge3 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge3.height,\n          totalWidth = _cellLayoutManager$ge3.width; // Safely expand the rendered area by the specified overscan amount\n\n\n      var left = Math.max(0, scrollLeft - horizontalOverscanSize);\n      var top = Math.max(0, scrollTop - verticalOverscanSize);\n      var right = Math.min(totalWidth, scrollLeft + width + horizontalOverscanSize);\n      var bottom = Math.min(totalHeight, scrollTop + height + verticalOverscanSize);\n      var childrenToDisplay = height > 0 && width > 0 ? cellLayoutManager.cellRenderers({\n        height: bottom - top,\n        isScrolling: isScrolling,\n        width: right - left,\n        x: left,\n        y: top\n      }) : [];\n      var collectionStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        WebkitOverflowScrolling: 'touch',\n        width: width,\n        willChange: 'transform'\n      }; // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalHeight > height ? this._scrollbarSize : 0;\n      var horizontalScrollBarSize = totalWidth > width ? this._scrollbarSize : 0; // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n      collectionStyle.overflowX = totalWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      collectionStyle.overflowY = totalHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Collection', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: \"grid\",\n        style: _objectSpread({}, collectionStyle, {}, style),\n        tabIndex: 0\n      }, cellCount > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Collection__innerScrollContainer\",\n        style: {\n          height: totalHeight,\n          maxHeight: totalHeight,\n          maxWidth: totalWidth,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          width: totalWidth\n        }\n      }, childrenToDisplay), cellCount === 0 && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Collection.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_enablePointerEventsAfterDelay\",\n    value: function _enablePointerEventsAfterDelay() {\n      var _this2 = this;\n\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = setTimeout(function () {\n        var isScrollingChange = _this2.props.isScrollingChange;\n        isScrollingChange(false);\n        _this2._disablePointerEventsTimeoutId = null;\n\n        _this2.setState({\n          isScrolling: false\n        });\n      }, IS_SCROLLING_TIMEOUT);\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref) {\n      var _this3 = this;\n\n      var scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          totalHeight = _ref.totalHeight,\n          totalWidth = _ref.totalWidth;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref2) {\n          var scrollLeft = _ref2.scrollLeft,\n              scrollTop = _ref2.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_setScrollPosition\",\n    value: function _setScrollPosition(_ref3) {\n      var scrollLeft = _ref3.scrollLeft,\n          scrollTop = _ref3.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (scrollLeft >= 0) {\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (scrollTop >= 0) {\n        newState.scrollTop = scrollTop;\n      }\n\n      if (scrollLeft >= 0 && scrollLeft !== this.state.scrollLeft || scrollTop >= 0 && scrollTop !== this.state.scrollTop) {\n        this.setState(newState);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.cellCount === 0 && (prevState.scrollLeft !== 0 || prevState.scrollTop !== 0)) {\n        return {\n          scrollLeft: 0,\n          scrollTop: 0,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null ? nextProps.scrollTop : prevState.scrollTop,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return CollectionView;\n}(React.PureComponent);\n\n_defineProperty(CollectionView, \"defaultProps\", {\n  'aria-label': 'grid',\n  horizontalOverscanSize: 0,\n  noContentRenderer: function noContentRenderer() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  onSectionRendered: function onSectionRendered() {\n    return null;\n  },\n  scrollToAlignment: 'auto',\n  scrollToCell: -1,\n  style: {},\n  verticalOverscanSize: 0\n});\n\nCollectionView.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /**\n   * Number of cells in collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Calculates cell sizes and positions and manages rendering the appropriate cells given a specified window.\n   */\n  cellLayoutManager: PropTypes.object.isRequired,\n\n  /**\n   * Optional custom CSS class name to attach to root Collection element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * Height of Collection; this property determines the number of visible (vs virtualized) rows.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Optional custom id to attach to root Collection element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Enables the `Collection` to horiontally \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  horizontalOverscanSize: PropTypes.number.isRequired,\n  isScrollingChange: PropTypes.func,\n\n  /**\n   * Optional renderer to be used in place of rows when either :rowCount or :cellCount is 0.\n   */\n  noContentRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, clientWidth, scrollHeight, scrollLeft, scrollTop, scrollWidth }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked with information about the section of the Collection that was just rendered.\n   * This callback is passed a named :indices parameter which is an Array of the most recently rendered section indices.\n   */\n  onSectionRendered: PropTypes.func.isRequired,\n\n  /**\n   * Horizontal offset.\n   */\n  scrollLeft: PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /**\n   * Cell index to ensure visible (by forcefully scrolling if necessary).\n   */\n  scrollToCell: PropTypes.number.isRequired,\n\n  /**\n   * Vertical offset.\n   */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Optional custom inline style to attach to root Collection element.\n   */\n  style: PropTypes.object,\n\n  /**\n   * Enables the `Collection` to vertically \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  verticalOverscanSize: PropTypes.number.isRequired,\n\n  /**\n   * Width of Collection; this property determines the number of visible (vs virtualized) columns.\n   */\n  width: PropTypes.number.isRequired\n} : {};\npolyfill(CollectionView);\nexport default CollectionView;","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * A section of the Window.\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * Sections have a fixed size and contain 0 to many cells (tracked by their indices).\n */\nvar Section =\n/*#__PURE__*/\nfunction () {\n  function Section(_ref) {\n    var height = _ref.height,\n        width = _ref.width,\n        x = _ref.x,\n        y = _ref.y;\n\n    _classCallCheck(this, Section);\n\n    this.height = height;\n    this.width = width;\n    this.x = x;\n    this.y = y;\n    this._indexMap = {};\n    this._indices = [];\n  }\n  /** Add a cell to this section. */\n\n\n  _createClass(Section, [{\n    key: \"addCellIndex\",\n    value: function addCellIndex(_ref2) {\n      var index = _ref2.index;\n\n      if (!this._indexMap[index]) {\n        this._indexMap[index] = true;\n\n        this._indices.push(index);\n      }\n    }\n    /** Get all cell indices that have been added to this section. */\n\n  }, {\n    key: \"getCellIndices\",\n    value: function getCellIndices() {\n      return this._indices;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.x, \",\").concat(this.y, \" \").concat(this.width, \"x\").concat(this.height);\n    }\n  }]);\n\n  return Section;\n}();\n\nexport { Section as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * \n */\nimport Section from './Section';\nvar SECTION_SIZE = 100;\n\n/**\n * Contains 0 to many Sections.\n * Grows (and adds Sections) dynamically as cells are registered.\n * Automatically adds cells to the appropriate Section(s).\n */\nvar SectionManager =\n/*#__PURE__*/\nfunction () {\n  function SectionManager() {\n    var sectionSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SECTION_SIZE;\n\n    _classCallCheck(this, SectionManager);\n\n    this._sectionSize = sectionSize;\n    this._cellMetadata = [];\n    this._sections = {};\n  }\n  /**\n   * Gets all cell indices contained in the specified region.\n   * A region may encompass 1 or more Sections.\n   */\n\n\n  _createClass(SectionManager, [{\n    key: \"getCellIndices\",\n    value: function getCellIndices(_ref) {\n      var height = _ref.height,\n          width = _ref.width,\n          x = _ref.x,\n          y = _ref.y;\n      var indices = {};\n      this.getSections({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      }).forEach(function (section) {\n        return section.getCellIndices().forEach(function (index) {\n          indices[index] = index;\n        });\n      }); // Object keys are strings; this function returns numbers\n\n      return Object.keys(indices).map(function (index) {\n        return indices[index];\n      });\n    }\n    /** Get size and position information for the cell specified. */\n\n  }, {\n    key: \"getCellMetadata\",\n    value: function getCellMetadata(_ref2) {\n      var index = _ref2.index;\n      return this._cellMetadata[index];\n    }\n    /** Get all Sections overlapping the specified region. */\n\n  }, {\n    key: \"getSections\",\n    value: function getSections(_ref3) {\n      var height = _ref3.height,\n          width = _ref3.width,\n          x = _ref3.x,\n          y = _ref3.y;\n      var sectionXStart = Math.floor(x / this._sectionSize);\n      var sectionXStop = Math.floor((x + width - 1) / this._sectionSize);\n      var sectionYStart = Math.floor(y / this._sectionSize);\n      var sectionYStop = Math.floor((y + height - 1) / this._sectionSize);\n      var sections = [];\n\n      for (var sectionX = sectionXStart; sectionX <= sectionXStop; sectionX++) {\n        for (var sectionY = sectionYStart; sectionY <= sectionYStop; sectionY++) {\n          var key = \"\".concat(sectionX, \".\").concat(sectionY);\n\n          if (!this._sections[key]) {\n            this._sections[key] = new Section({\n              height: this._sectionSize,\n              width: this._sectionSize,\n              x: sectionX * this._sectionSize,\n              y: sectionY * this._sectionSize\n            });\n          }\n\n          sections.push(this._sections[key]);\n        }\n      }\n\n      return sections;\n    }\n    /** Total number of Sections based on the currently registered cells. */\n\n  }, {\n    key: \"getTotalSectionCount\",\n    value: function getTotalSectionCount() {\n      return Object.keys(this._sections).length;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var _this = this;\n\n      return Object.keys(this._sections).map(function (index) {\n        return _this._sections[index].toString();\n      });\n    }\n    /** Adds a cell to the appropriate Sections and registers it metadata for later retrievable. */\n\n  }, {\n    key: \"registerCell\",\n    value: function registerCell(_ref4) {\n      var cellMetadatum = _ref4.cellMetadatum,\n          index = _ref4.index;\n      this._cellMetadata[index] = cellMetadatum;\n      this.getSections(cellMetadatum).forEach(function (section) {\n        return section.addCellIndex({\n          index: index\n        });\n      });\n    }\n  }]);\n\n  return SectionManager;\n}();\n\nexport { SectionManager as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","/**\n * Determines a new offset that ensures a certain cell is visible, given the current offset.\n * If the cell is already visible then the current offset will be returned.\n * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n *\n * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n * @param cellOffset Offset (x or y) position for cell\n * @param cellSize Size (width or height) of cell\n * @param containerSize Total size (width or height) of the container\n * @param currentOffset Container's current (x or y) offset\n * @return Offset to use to ensure the specified cell is visible\n */\nexport default function getUpdatedOffsetForIndex(_ref) {\n  var _ref$align = _ref.align,\n      align = _ref$align === void 0 ? 'auto' : _ref$align,\n      cellOffset = _ref.cellOffset,\n      cellSize = _ref.cellSize,\n      containerSize = _ref.containerSize,\n      currentOffset = _ref.currentOffset;\n  var maxOffset = cellOffset;\n  var minOffset = maxOffset - containerSize + cellSize;\n\n  switch (align) {\n    case 'start':\n      return maxOffset;\n\n    case 'end':\n      return minOffset;\n\n    case 'center':\n      return maxOffset - (containerSize - cellSize) / 2;\n\n    default:\n      return Math.max(minOffset, Math.min(maxOffset, currentOffset));\n  }\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport CollectionView from './CollectionView';\nimport _calculateSizeAndPositionData from './utils/calculateSizeAndPositionData';\nimport getUpdatedOffsetForIndex from '../utils/getUpdatedOffsetForIndex';\n\n/**\n * Renders scattered or non-linear data.\n * Unlike Grid, which renders checkerboard data, Collection can render arbitrarily positioned- even overlapping- data.\n */\nvar Collection =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Collection, _React$PureComponent);\n\n  function Collection(props, context) {\n    var _this;\n\n    _classCallCheck(this, Collection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Collection).call(this, props, context));\n    _this._cellMetadata = [];\n    _this._lastRenderedCellIndices = []; // Cell cache during scroll (for performance)\n\n    _this._cellCache = [];\n    _this._isScrollingChange = _this._isScrollingChange.bind(_assertThisInitialized(_this));\n    _this._setCollectionViewRef = _this._setCollectionViewRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Collection, [{\n    key: \"forceUpdate\",\n    value: function forceUpdate() {\n      if (this._collectionView !== undefined) {\n        this._collectionView.forceUpdate();\n      }\n    }\n    /** See Collection#recomputeCellSizesAndPositions */\n\n  }, {\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._cellCache = [];\n\n      this._collectionView.recomputeCellSizesAndPositions();\n    }\n    /** React lifecycle methods */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = _extends({}, this.props);\n\n      return React.createElement(CollectionView, _extends({\n        cellLayoutManager: this,\n        isScrollingChange: this._isScrollingChange,\n        ref: this._setCollectionViewRef\n      }, props));\n    }\n    /** CellLayoutManager interface */\n\n  }, {\n    key: \"calculateSizeAndPositionData\",\n    value: function calculateSizeAndPositionData() {\n      var _this$props = this.props,\n          cellCount = _this$props.cellCount,\n          cellSizeAndPositionGetter = _this$props.cellSizeAndPositionGetter,\n          sectionSize = _this$props.sectionSize;\n\n      var data = _calculateSizeAndPositionData({\n        cellCount: cellCount,\n        cellSizeAndPositionGetter: cellSizeAndPositionGetter,\n        sectionSize: sectionSize\n      });\n\n      this._cellMetadata = data.cellMetadata;\n      this._sectionManager = data.sectionManager;\n      this._height = data.height;\n      this._width = data.width;\n    }\n    /**\n     * Returns the most recently rendered set of cell indices.\n     */\n\n  }, {\n    key: \"getLastRenderedIndices\",\n    value: function getLastRenderedIndices() {\n      return this._lastRenderedCellIndices;\n    }\n    /**\n     * Calculates the minimum amount of change from the current scroll position to ensure the specified cell is (fully) visible.\n     */\n\n  }, {\n    key: \"getScrollPositionForCell\",\n    value: function getScrollPositionForCell(_ref) {\n      var align = _ref.align,\n          cellIndex = _ref.cellIndex,\n          height = _ref.height,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          width = _ref.width;\n      var cellCount = this.props.cellCount;\n\n      if (cellIndex >= 0 && cellIndex < cellCount) {\n        var cellMetadata = this._cellMetadata[cellIndex];\n        scrollLeft = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.x,\n          cellSize: cellMetadata.width,\n          containerSize: width,\n          currentOffset: scrollLeft,\n          targetIndex: cellIndex\n        });\n        scrollTop = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.y,\n          cellSize: cellMetadata.height,\n          containerSize: height,\n          currentOffset: scrollTop,\n          targetIndex: cellIndex\n        });\n      }\n\n      return {\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      };\n    }\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return {\n        height: this._height,\n        width: this._width\n      };\n    }\n  }, {\n    key: \"cellRenderers\",\n    value: function cellRenderers(_ref2) {\n      var _this2 = this;\n\n      var height = _ref2.height,\n          isScrolling = _ref2.isScrolling,\n          width = _ref2.width,\n          x = _ref2.x,\n          y = _ref2.y;\n      var _this$props2 = this.props,\n          cellGroupRenderer = _this$props2.cellGroupRenderer,\n          cellRenderer = _this$props2.cellRenderer; // Store for later calls to getLastRenderedIndices()\n\n      this._lastRenderedCellIndices = this._sectionManager.getCellIndices({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      });\n      return cellGroupRenderer({\n        cellCache: this._cellCache,\n        cellRenderer: cellRenderer,\n        cellSizeAndPositionGetter: function cellSizeAndPositionGetter(_ref3) {\n          var index = _ref3.index;\n          return _this2._sectionManager.getCellMetadata({\n            index: index\n          });\n        },\n        indices: this._lastRenderedCellIndices,\n        isScrolling: isScrolling\n      });\n    }\n  }, {\n    key: \"_isScrollingChange\",\n    value: function _isScrollingChange(isScrolling) {\n      if (!isScrolling) {\n        this._cellCache = [];\n      }\n    }\n  }, {\n    key: \"_setCollectionViewRef\",\n    value: function _setCollectionViewRef(ref) {\n      this._collectionView = ref;\n    }\n  }]);\n\n  return Collection;\n}(React.PureComponent);\n\n_defineProperty(Collection, \"defaultProps\", {\n  'aria-label': 'grid',\n  cellGroupRenderer: defaultCellGroupRenderer\n});\n\nexport { Collection as default };\nCollection.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Number of cells in Collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a group of cells given their indices.\n   * Should implement the following interface: ({\n   *   cellSizeAndPositionGetter:Function,\n   *   indices: Array<number>,\n   *   cellRenderer: Function\n   * }): Array<PropTypes.node>\n   */\n  cellGroupRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Responsible for rendering a cell given an row and column index.\n   * Should implement the following interface: ({ index: number, key: string, style: object }): PropTypes.element\n   */\n  cellRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback responsible for returning size and offset/position information for a given cell (index).\n   * ({ index: number }): { height: number, width: number, x: number, y: number }\n   */\n  cellSizeAndPositionGetter: PropTypes.func.isRequired,\n\n  /**\n   * Optionally override the size of the sections a Collection's cells are split into.\n   */\n  sectionSize: PropTypes.number\n} : {};\n\nfunction defaultCellGroupRenderer(_ref4) {\n  var cellCache = _ref4.cellCache,\n      cellRenderer = _ref4.cellRenderer,\n      cellSizeAndPositionGetter = _ref4.cellSizeAndPositionGetter,\n      indices = _ref4.indices,\n      isScrolling = _ref4.isScrolling;\n  return indices.map(function (index) {\n    var cellMetadata = cellSizeAndPositionGetter({\n      index: index\n    });\n    var cellRendererProps = {\n      index: index,\n      isScrolling: isScrolling,\n      key: index,\n      style: {\n        height: cellMetadata.height,\n        left: cellMetadata.x,\n        position: 'absolute',\n        top: cellMetadata.y,\n        width: cellMetadata.width\n      }\n    }; // Avoid re-creating cells while scrolling.\n    // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n    // If a scroll is in progress- cache and reuse cells.\n    // This cache will be thrown away once scrolling complets.\n\n    if (isScrolling) {\n      if (!(index in cellCache)) {\n        cellCache[index] = cellRenderer(cellRendererProps);\n      }\n\n      return cellCache[index];\n    } else {\n      return cellRenderer(cellRendererProps);\n    }\n  }).filter(function (renderedCell) {\n    return !!renderedCell;\n  });\n}\n\nimport { bpfrpt_proptype_ScrollPosition } from \"./types\";\nimport { bpfrpt_proptype_SizeInfo } from \"./types\";","import SectionManager from '../SectionManager';\nexport default function calculateSizeAndPositionData(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSizeAndPositionGetter = _ref.cellSizeAndPositionGetter,\n      sectionSize = _ref.sectionSize;\n  var cellMetadata = [];\n  var sectionManager = new SectionManager(sectionSize);\n  var height = 0;\n  var width = 0;\n\n  for (var index = 0; index < cellCount; index++) {\n    var cellMetadatum = cellSizeAndPositionGetter({\n      index: index\n    });\n\n    if (cellMetadatum.height == null || isNaN(cellMetadatum.height) || cellMetadatum.width == null || isNaN(cellMetadatum.width) || cellMetadatum.x == null || isNaN(cellMetadatum.x) || cellMetadatum.y == null || isNaN(cellMetadatum.y)) {\n      throw Error(\"Invalid metadata returned for cell \".concat(index, \":\\n        x:\").concat(cellMetadatum.x, \", y:\").concat(cellMetadatum.y, \", width:\").concat(cellMetadatum.width, \", height:\").concat(cellMetadatum.height));\n    }\n\n    height = Math.max(height, cellMetadatum.y + cellMetadatum.height);\n    width = Math.max(width, cellMetadatum.x + cellMetadatum.width);\n    cellMetadata[index] = cellMetadatum;\n    sectionManager.registerCell({\n      cellMetadatum: cellMetadatum,\n      index: index\n    });\n  }\n\n  return {\n    cellMetadata: cellMetadata,\n    height: height,\n    sectionManager: sectionManager,\n    width: width\n  };\n}","import Collection from './Collection';\nexport default Collection;\nexport { Collection };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * High-order component that auto-calculates column-widths for `Grid` cells.\n */\n\nvar ColumnSizer =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ColumnSizer, _React$PureComponent);\n\n  function ColumnSizer(props, context) {\n    var _this;\n\n    _classCallCheck(this, ColumnSizer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ColumnSizer).call(this, props, context));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ColumnSizer, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props = this.props,\n          columnMaxWidth = _this$props.columnMaxWidth,\n          columnMinWidth = _this$props.columnMinWidth,\n          columnCount = _this$props.columnCount,\n          width = _this$props.width;\n\n      if (columnMaxWidth !== prevProps.columnMaxWidth || columnMinWidth !== prevProps.columnMinWidth || columnCount !== prevProps.columnCount || width !== prevProps.width) {\n        if (this._registeredChild) {\n          this._registeredChild.recomputeGridSize();\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          columnMaxWidth = _this$props2.columnMaxWidth,\n          columnMinWidth = _this$props2.columnMinWidth,\n          columnCount = _this$props2.columnCount,\n          width = _this$props2.width;\n      var safeColumnMinWidth = columnMinWidth || 1;\n      var safeColumnMaxWidth = columnMaxWidth ? Math.min(columnMaxWidth, width) : width;\n      var columnWidth = width / columnCount;\n      columnWidth = Math.max(safeColumnMinWidth, columnWidth);\n      columnWidth = Math.min(safeColumnMaxWidth, columnWidth);\n      columnWidth = Math.floor(columnWidth);\n      var adjustedWidth = Math.min(width, columnWidth * columnCount);\n      return children({\n        adjustedWidth: adjustedWidth,\n        columnWidth: columnWidth,\n        getColumnWidth: function getColumnWidth() {\n          return columnWidth;\n        },\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(child) {\n      if (child && typeof child.recomputeGridSize !== 'function') {\n        throw Error('Unexpected child type registered; only Grid/MultiGrid children are supported.');\n      }\n\n      this._registeredChild = child;\n\n      if (this._registeredChild) {\n        this._registeredChild.recomputeGridSize();\n      }\n    }\n  }]);\n\n  return ColumnSizer;\n}(React.PureComponent);\n\nexport { ColumnSizer as default };\nColumnSizer.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized Grid.\n   * This function should implement the following signature:\n   * ({ adjustedWidth, getColumnWidth, registerChild }) => PropTypes.element\n   *\n   * The specified :getColumnWidth function should be passed to the Grid's :columnWidth property.\n   * The :registerChild should be passed to the Grid's :ref property.\n   * The :adjustedWidth property is optional; it reflects the lesser of the overall width or the width of all columns.\n   */\n  children: PropTypes.func.isRequired,\n\n  /** Optional maximum allowed column width */\n  columnMaxWidth: PropTypes.number,\n\n  /** Optional minimum allowed column width */\n  columnMinWidth: PropTypes.number,\n\n  /** Number of columns in Grid or Table child */\n  columnCount: PropTypes.number.isRequired,\n\n  /** Width of Grid or Table child */\n  width: PropTypes.number.isRequired\n} : {};","import ColumnSizer from './ColumnSizer';\nexport default ColumnSizer;\nexport { ColumnSizer };","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\n/**\n * Higher-order component that manages lazy-loading for \"infinite\" data.\n * This component decorates a virtual component and just-in-time prefetches rows as a user scrolls.\n * It is intended as a convenience component; fork it if you'd like finer-grained control over data-loading.\n */\n\nvar InfiniteLoader =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(InfiniteLoader, _React$PureComponent);\n\n  function InfiniteLoader(props, context) {\n    var _this;\n\n    _classCallCheck(this, InfiniteLoader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InfiniteLoader).call(this, props, context));\n    _this._loadMoreRowsMemoizer = createCallbackMemoizer();\n    _this._onRowsRendered = _this._onRowsRendered.bind(_assertThisInitialized(_this));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(InfiniteLoader, [{\n    key: \"resetLoadMoreRowsCache\",\n    value: function resetLoadMoreRowsCache(autoReload) {\n      this._loadMoreRowsMemoizer = createCallbackMemoizer();\n\n      if (autoReload) {\n        this._doStuff(this._lastRenderedStartIndex, this._lastRenderedStopIndex);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return children({\n        onRowsRendered: this._onRowsRendered,\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_loadUnloadedRanges\",\n    value: function _loadUnloadedRanges(unloadedRanges) {\n      var _this2 = this;\n\n      var loadMoreRows = this.props.loadMoreRows;\n      unloadedRanges.forEach(function (unloadedRange) {\n        var promise = loadMoreRows(unloadedRange);\n\n        if (promise) {\n          promise.then(function () {\n            // Refresh the visible rows if any of them have just been loaded.\n            // Otherwise they will remain in their unloaded visual state.\n            if (isRangeVisible({\n              lastRenderedStartIndex: _this2._lastRenderedStartIndex,\n              lastRenderedStopIndex: _this2._lastRenderedStopIndex,\n              startIndex: unloadedRange.startIndex,\n              stopIndex: unloadedRange.stopIndex\n            })) {\n              if (_this2._registeredChild) {\n                forceUpdateReactVirtualizedComponent(_this2._registeredChild, _this2._lastRenderedStartIndex);\n              }\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_onRowsRendered\",\n    value: function _onRowsRendered(_ref) {\n      var startIndex = _ref.startIndex,\n          stopIndex = _ref.stopIndex;\n      this._lastRenderedStartIndex = startIndex;\n      this._lastRenderedStopIndex = stopIndex;\n\n      this._doStuff(startIndex, stopIndex);\n    }\n  }, {\n    key: \"_doStuff\",\n    value: function _doStuff(startIndex, stopIndex) {\n      var _ref2,\n          _this3 = this;\n\n      var _this$props = this.props,\n          isRowLoaded = _this$props.isRowLoaded,\n          minimumBatchSize = _this$props.minimumBatchSize,\n          rowCount = _this$props.rowCount,\n          threshold = _this$props.threshold;\n      var unloadedRanges = scanForUnloadedRanges({\n        isRowLoaded: isRowLoaded,\n        minimumBatchSize: minimumBatchSize,\n        rowCount: rowCount,\n        startIndex: Math.max(0, startIndex - threshold),\n        stopIndex: Math.min(rowCount - 1, stopIndex + threshold)\n      }); // For memoize comparison\n\n      var squashedUnloadedRanges = (_ref2 = []).concat.apply(_ref2, _toConsumableArray(unloadedRanges.map(function (_ref3) {\n        var startIndex = _ref3.startIndex,\n            stopIndex = _ref3.stopIndex;\n        return [startIndex, stopIndex];\n      })));\n\n      this._loadMoreRowsMemoizer({\n        callback: function callback() {\n          _this3._loadUnloadedRanges(unloadedRanges);\n        },\n        indices: {\n          squashedUnloadedRanges: squashedUnloadedRanges\n        }\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(registeredChild) {\n      this._registeredChild = registeredChild;\n    }\n  }]);\n\n  return InfiniteLoader;\n}(React.PureComponent);\n/**\n * Determines if the specified start/stop range is visible based on the most recently rendered range.\n */\n\n\n_defineProperty(InfiniteLoader, \"defaultProps\", {\n  minimumBatchSize: 10,\n  rowCount: 0,\n  threshold: 15\n});\n\nexport { InfiniteLoader as default };\nInfiniteLoader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized component.\n   * This function should implement the following signature:\n   * ({ onRowsRendered, registerChild }) => PropTypes.element\n   *\n   * The specified :onRowsRendered function should be passed through to the child's :onRowsRendered property.\n   * The :registerChild callback should be set as the virtualized component's :ref.\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Function responsible for tracking the loaded state of each row.\n   * It should implement the following signature: ({ index: number }): boolean\n   */\n  isRowLoaded: PropTypes.func.isRequired,\n\n  /**\n   * Callback to be invoked when more rows must be loaded.\n   * It should implement the following signature: ({ startIndex, stopIndex }): Promise\n   * The returned Promise should be resolved once row data has finished loading.\n   * It will be used to determine when to refresh the list with the newly-loaded data.\n   * This callback may be called multiple times in reaction to a single scroll event.\n   */\n  loadMoreRows: PropTypes.func.isRequired,\n\n  /**\n   * Minimum number of rows to be loaded at a time.\n   * This property can be used to batch requests to reduce HTTP requests.\n   */\n  minimumBatchSize: PropTypes.number.isRequired,\n\n  /**\n   * Number of rows in list; can be arbitrary high number if actual number is unknown.\n   */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Threshold at which to pre-fetch data.\n   * A threshold X means that data will start loading when a user scrolls within X rows.\n   * This value defaults to 15.\n   */\n  threshold: PropTypes.number.isRequired\n} : {};\nexport function isRangeVisible(_ref4) {\n  var lastRenderedStartIndex = _ref4.lastRenderedStartIndex,\n      lastRenderedStopIndex = _ref4.lastRenderedStopIndex,\n      startIndex = _ref4.startIndex,\n      stopIndex = _ref4.stopIndex;\n  return !(startIndex > lastRenderedStopIndex || stopIndex < lastRenderedStartIndex);\n}\n/**\n * Returns all of the ranges within a larger range that contain unloaded rows.\n */\n\nexport function scanForUnloadedRanges(_ref5) {\n  var isRowLoaded = _ref5.isRowLoaded,\n      minimumBatchSize = _ref5.minimumBatchSize,\n      rowCount = _ref5.rowCount,\n      startIndex = _ref5.startIndex,\n      stopIndex = _ref5.stopIndex;\n  var unloadedRanges = [];\n  var rangeStartIndex = null;\n  var rangeStopIndex = null;\n\n  for (var index = startIndex; index <= stopIndex; index++) {\n    var loaded = isRowLoaded({\n      index: index\n    });\n\n    if (!loaded) {\n      rangeStopIndex = index;\n\n      if (rangeStartIndex === null) {\n        rangeStartIndex = index;\n      }\n    } else if (rangeStopIndex !== null) {\n      unloadedRanges.push({\n        startIndex: rangeStartIndex,\n        stopIndex: rangeStopIndex\n      });\n      rangeStartIndex = rangeStopIndex = null;\n    }\n  } // If :rangeStopIndex is not null it means we haven't ran out of unloaded rows.\n  // Scan forward to try filling our :minimumBatchSize.\n\n\n  if (rangeStopIndex !== null) {\n    var potentialStopIndex = Math.min(Math.max(rangeStopIndex, rangeStartIndex + minimumBatchSize - 1), rowCount - 1);\n\n    for (var _index = rangeStopIndex + 1; _index <= potentialStopIndex; _index++) {\n      if (!isRowLoaded({\n        index: _index\n      })) {\n        rangeStopIndex = _index;\n      } else {\n        break;\n      }\n    }\n\n    unloadedRanges.push({\n      startIndex: rangeStartIndex,\n      stopIndex: rangeStopIndex\n    });\n  } // Check to see if our first range ended prematurely.\n  // In this case we should scan backwards to try filling our :minimumBatchSize.\n\n\n  if (unloadedRanges.length) {\n    var firstUnloadedRange = unloadedRanges[0];\n\n    while (firstUnloadedRange.stopIndex - firstUnloadedRange.startIndex + 1 < minimumBatchSize && firstUnloadedRange.startIndex > 0) {\n      var _index2 = firstUnloadedRange.startIndex - 1;\n\n      if (!isRowLoaded({\n        index: _index2\n      })) {\n        firstUnloadedRange.startIndex = _index2;\n      } else {\n        break;\n      }\n    }\n  }\n\n  return unloadedRanges;\n}\n/**\n * Since RV components use shallowCompare we need to force a render (even though props haven't changed).\n * However InfiniteLoader may wrap a Grid or it may wrap a Table or List.\n * In the first case the built-in React forceUpdate() method is sufficient to force a re-render,\n * But in the latter cases we need to use the RV-specific forceUpdateGrid() method.\n * Else the inner Grid will not be re-rendered and visuals may be stale.\n *\n * Additionally, while a Grid is scrolling the cells can be cached,\n * So it's important to invalidate that cache by recalculating sizes\n * before forcing a rerender.\n */\n\nexport function forceUpdateReactVirtualizedComponent(component) {\n  var currentIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var recomputeSize = typeof component.recomputeGridSize === 'function' ? component.recomputeGridSize : component.recomputeRowHeights;\n\n  if (recomputeSize) {\n    recomputeSize.call(component, currentIndex);\n  } else {\n    component.forceUpdate();\n  }\n}","import InfiniteLoader from './InfiniteLoader';\nexport default InfiniteLoader;\nexport { InfiniteLoader };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport * as React from 'react';\nimport clsx from 'clsx';\n/**\n * It is inefficient to create and manage a large list of DOM elements within a scrolling container\n * if only a few of those elements are visible. The primary purpose of this component is to improve\n * performance by only rendering the DOM nodes that a user is able to see based on their current\n * scroll position.\n *\n * This component renders a virtualized list of elements with either fixed or dynamic heights.\n */\n\nvar List = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(List, _React$PureComponent);\n\n  function List() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, List);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(List)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"Grid\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRenderer\", function (_ref) {\n      var parent = _ref.parent,\n          rowIndex = _ref.rowIndex,\n          style = _ref.style,\n          isScrolling = _ref.isScrolling,\n          isVisible = _ref.isVisible,\n          key = _ref.key;\n      var rowRenderer = _this.props.rowRenderer; // TRICKY The style object is sometimes cached by Grid.\n      // This prevents new style objects from bypassing shallowCompare().\n      // However as of React 16, style props are auto-frozen (at least in dev mode)\n      // Check to make sure we can still modify the style before proceeding.\n      // https://github.com/facebook/react/commit/977357765b44af8ff0cfea327866861073095c12#commitcomment-20648713\n\n      var widthDescriptor = Object.getOwnPropertyDescriptor(style, 'width');\n\n      if (widthDescriptor && widthDescriptor.writable) {\n        // By default, List cells should be 100% width.\n        // This prevents them from flowing under a scrollbar (if present).\n        style.width = '100%';\n      }\n\n      return rowRenderer({\n        index: rowIndex,\n        style: style,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (ref) {\n      _this.Grid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (_ref2) {\n      var clientHeight = _ref2.clientHeight,\n          scrollHeight = _ref2.scrollHeight,\n          scrollTop = _ref2.scrollTop;\n      var onScroll = _this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref3) {\n      var rowOverscanStartIndex = _ref3.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref3.rowOverscanStopIndex,\n          rowStartIndex = _ref3.rowStartIndex,\n          rowStopIndex = _ref3.rowStopIndex;\n      var onRowsRendered = _this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref4) {\n      var alignment = _ref4.alignment,\n          index = _ref4.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index,\n          columnIndex: 0\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref6 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref6$columnIndex = _ref6.columnIndex,\n          columnIndex = _ref6$columnIndex === void 0 ? 0 : _ref6$columnIndex,\n          _ref6$rowIndex = _ref6.rowIndex,\n          rowIndex = _ref6$rowIndex === void 0 ? 0 : _ref6$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index,\n          columnIndex: 0\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          scrollToIndex = _this$props.scrollToIndex,\n          width = _this$props.width;\n      var classNames = clsx('ReactVirtualized__List', className);\n      return React.createElement(Grid, _extends({}, this.props, {\n        autoContainerWidth: true,\n        cellRenderer: this._cellRenderer,\n        className: classNames,\n        columnWidth: width,\n        columnCount: 1,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        scrollToRow: scrollToIndex\n      }));\n    }\n  }]);\n\n  return List;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /** Optional CSS class name */\n  \"className\": PropTypes.string,\n\n  /**\n   * Used to estimate the total height of a List before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Height constraint for list (determines how many actual rows are rendered) */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional renderer to be used in place of rows when rowCount is 0 */\n  \"noRowsRenderer\": function noRowsRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Callback invoked with information about the slice of rows that were just rendered.  */\n  \"onRowsRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed row height (number) or a function that returns the height of a row given its index.  */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a row given an index; ({ index: number }): node */\n  \"rowRenderer\": function rowRenderer() {\n    return (typeof bpfrpt_proptype_RowRenderer === \"function\" ? bpfrpt_proptype_RowRenderer.isRequired ? bpfrpt_proptype_RowRenderer.isRequired : bpfrpt_proptype_RowRenderer : PropTypes.shape(bpfrpt_proptype_RowRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in list. */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** See Grid#scrollToAlignment */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToIndex\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of list */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(List, \"defaultProps\", {\n  autoHeight: false,\n  estimatedRowSize: 30,\n  onScroll: function onScroll() {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {},\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { List as default };\nimport { bpfrpt_proptype_NoContentRenderer } from \"../Grid\";\nimport { bpfrpt_proptype_Alignment } from \"../Grid\";\nimport { bpfrpt_proptype_CellSize } from \"../Grid\";\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"../Grid\";\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_CellRendererParams } from \"../Grid\";\nimport { bpfrpt_proptype_Scroll as bpfrpt_proptype_GridScroll } from \"../Grid\";\nimport { bpfrpt_proptype_RowRenderer } from \"./types\";\nimport { bpfrpt_proptype_RenderedRows } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport PropTypes from \"prop-types\";","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/binary-search-bounds\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nfunction _GEA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x >= y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GEP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) >= 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _GTA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x > y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GTP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) > 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LTA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x < y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LTP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) < 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LEA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x <= y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LEP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) <= 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _EQA(a, l, h, y) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x === y) {\n      return m;\n    } else if (x <= y) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction _EQP(a, l, h, y, c) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n    var p = c(x, y);\n\n    if (p === 0) {\n      return m;\n    } else if (p <= 0) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction dispatchBsearchEQ(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _EQP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _EQA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nexport default {\n  ge: dispatchBsearchGE,\n  gt: dispatchBsearchGT,\n  lt: dispatchBsearchLT,\n  le: dispatchBsearchLE,\n  eq: dispatchBsearchEQ\n};","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/interval-tree-1d\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax in an upstream dependency.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nimport bounds from './binarySearchBounds';\nvar NOT_FOUND = 0;\nvar SUCCESS = 1;\nvar EMPTY = 2;\n\nfunction IntervalTreeNode(mid, left, right, leftPoints, rightPoints) {\n  this.mid = mid;\n  this.left = left;\n  this.right = right;\n  this.leftPoints = leftPoints;\n  this.rightPoints = rightPoints;\n  this.count = (left ? left.count : 0) + (right ? right.count : 0) + leftPoints.length;\n}\n\nvar proto = IntervalTreeNode.prototype;\n\nfunction copy(a, b) {\n  a.mid = b.mid;\n  a.left = b.left;\n  a.right = b.right;\n  a.leftPoints = b.leftPoints;\n  a.rightPoints = b.rightPoints;\n  a.count = b.count;\n}\n\nfunction rebuild(node, intervals) {\n  var ntree = createIntervalTree(intervals);\n  node.mid = ntree.mid;\n  node.left = ntree.left;\n  node.right = ntree.right;\n  node.leftPoints = ntree.leftPoints;\n  node.rightPoints = ntree.rightPoints;\n  node.count = ntree.count;\n}\n\nfunction rebuildWithInterval(node, interval) {\n  var intervals = node.intervals([]);\n  intervals.push(interval);\n  rebuild(node, intervals);\n}\n\nfunction rebuildWithoutInterval(node, interval) {\n  var intervals = node.intervals([]);\n  var idx = intervals.indexOf(interval);\n\n  if (idx < 0) {\n    return NOT_FOUND;\n  }\n\n  intervals.splice(idx, 1);\n  rebuild(node, intervals);\n  return SUCCESS;\n}\n\nproto.intervals = function (result) {\n  result.push.apply(result, this.leftPoints);\n\n  if (this.left) {\n    this.left.intervals(result);\n  }\n\n  if (this.right) {\n    this.right.intervals(result);\n  }\n\n  return result;\n};\n\nproto.insert = function (interval) {\n  var weight = this.count - this.leftPoints.length;\n  this.count += 1;\n\n  if (interval[1] < this.mid) {\n    if (this.left) {\n      if (4 * (this.left.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.left.insert(interval);\n      }\n    } else {\n      this.left = createIntervalTree([interval]);\n    }\n  } else if (interval[0] > this.mid) {\n    if (this.right) {\n      if (4 * (this.right.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.right.insert(interval);\n      }\n    } else {\n      this.right = createIntervalTree([interval]);\n    }\n  } else {\n    var l = bounds.ge(this.leftPoints, interval, compareBegin);\n    var r = bounds.ge(this.rightPoints, interval, compareEnd);\n    this.leftPoints.splice(l, 0, interval);\n    this.rightPoints.splice(r, 0, interval);\n  }\n};\n\nproto.remove = function (interval) {\n  var weight = this.count - this.leftPoints;\n\n  if (interval[1] < this.mid) {\n    if (!this.left) {\n      return NOT_FOUND;\n    }\n\n    var rw = this.right ? this.right.count : 0;\n\n    if (4 * rw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.left.remove(interval);\n\n    if (r === EMPTY) {\n      this.left = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else if (interval[0] > this.mid) {\n    if (!this.right) {\n      return NOT_FOUND;\n    }\n\n    var lw = this.left ? this.left.count : 0;\n\n    if (4 * lw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.right.remove(interval);\n\n    if (r === EMPTY) {\n      this.right = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else {\n    if (this.count === 1) {\n      if (this.leftPoints[0] === interval) {\n        return EMPTY;\n      } else {\n        return NOT_FOUND;\n      }\n    }\n\n    if (this.leftPoints.length === 1 && this.leftPoints[0] === interval) {\n      if (this.left && this.right) {\n        var p = this;\n        var n = this.left;\n\n        while (n.right) {\n          p = n;\n          n = n.right;\n        }\n\n        if (p === this) {\n          n.right = this.right;\n        } else {\n          var l = this.left;\n          var r = this.right;\n          p.count -= n.count;\n          p.right = n.left;\n          n.left = l;\n          n.right = r;\n        }\n\n        copy(this, n);\n        this.count = (this.left ? this.left.count : 0) + (this.right ? this.right.count : 0) + this.leftPoints.length;\n      } else if (this.left) {\n        copy(this, this.left);\n      } else {\n        copy(this, this.right);\n      }\n\n      return SUCCESS;\n    }\n\n    for (var l = bounds.ge(this.leftPoints, interval, compareBegin); l < this.leftPoints.length; ++l) {\n      if (this.leftPoints[l][0] !== interval[0]) {\n        break;\n      }\n\n      if (this.leftPoints[l] === interval) {\n        this.count -= 1;\n        this.leftPoints.splice(l, 1);\n\n        for (var r = bounds.ge(this.rightPoints, interval, compareEnd); r < this.rightPoints.length; ++r) {\n          if (this.rightPoints[r][1] !== interval[1]) {\n            break;\n          } else if (this.rightPoints[r] === interval) {\n            this.rightPoints.splice(r, 1);\n            return SUCCESS;\n          }\n        }\n      }\n    }\n\n    return NOT_FOUND;\n  }\n};\n\nfunction reportLeftRange(arr, hi, cb) {\n  for (var i = 0; i < arr.length && arr[i][0] <= hi; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRightRange(arr, lo, cb) {\n  for (var i = arr.length - 1; i >= 0 && arr[i][1] >= lo; --i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRange(arr, cb) {\n  for (var i = 0; i < arr.length; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nproto.queryPoint = function (x, cb) {\n  if (x < this.mid) {\n    if (this.left) {\n      var r = this.left.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportLeftRange(this.leftPoints, x, cb);\n  } else if (x > this.mid) {\n    if (this.right) {\n      var r = this.right.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportRightRange(this.rightPoints, x, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nproto.queryInterval = function (lo, hi, cb) {\n  if (lo < this.mid && this.left) {\n    var r = this.left.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi > this.mid && this.right) {\n    var r = this.right.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi < this.mid) {\n    return reportLeftRange(this.leftPoints, hi, cb);\n  } else if (lo > this.mid) {\n    return reportRightRange(this.rightPoints, lo, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\nfunction compareBegin(a, b) {\n  var d = a[0] - b[0];\n\n  if (d) {\n    return d;\n  }\n\n  return a[1] - b[1];\n}\n\nfunction compareEnd(a, b) {\n  var d = a[1] - b[1];\n\n  if (d) {\n    return d;\n  }\n\n  return a[0] - b[0];\n}\n\nfunction createIntervalTree(intervals) {\n  if (intervals.length === 0) {\n    return null;\n  }\n\n  var pts = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    pts.push(intervals[i][0], intervals[i][1]);\n  }\n\n  pts.sort(compareNumbers);\n  var mid = pts[pts.length >> 1];\n  var leftIntervals = [];\n  var rightIntervals = [];\n  var centerIntervals = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    var s = intervals[i];\n\n    if (s[1] < mid) {\n      leftIntervals.push(s);\n    } else if (mid < s[0]) {\n      rightIntervals.push(s);\n    } else {\n      centerIntervals.push(s);\n    }\n  } //Split center intervals\n\n\n  var leftPoints = centerIntervals;\n  var rightPoints = centerIntervals.slice();\n  leftPoints.sort(compareBegin);\n  rightPoints.sort(compareEnd);\n  return new IntervalTreeNode(mid, createIntervalTree(leftIntervals), createIntervalTree(rightIntervals), leftPoints, rightPoints);\n} //User friendly wrapper that makes it possible to support empty trees\n\n\nfunction IntervalTree(root) {\n  this.root = root;\n}\n\nvar tproto = IntervalTree.prototype;\n\ntproto.insert = function (interval) {\n  if (this.root) {\n    this.root.insert(interval);\n  } else {\n    this.root = new IntervalTreeNode(interval[0], null, null, [interval], [interval]);\n  }\n};\n\ntproto.remove = function (interval) {\n  if (this.root) {\n    var r = this.root.remove(interval);\n\n    if (r === EMPTY) {\n      this.root = null;\n    }\n\n    return r !== NOT_FOUND;\n  }\n\n  return false;\n};\n\ntproto.queryPoint = function (p, cb) {\n  if (this.root) {\n    return this.root.queryPoint(p, cb);\n  }\n};\n\ntproto.queryInterval = function (lo, hi, cb) {\n  if (lo <= hi && this.root) {\n    return this.root.queryInterval(lo, hi, cb);\n  }\n};\n\nObject.defineProperty(tproto, 'count', {\n  get: function get() {\n    if (this.root) {\n      return this.root.count;\n    }\n\n    return 0;\n  }\n});\nObject.defineProperty(tproto, 'intervals', {\n  get: function get() {\n    if (this.root) {\n      return this.root.intervals([]);\n    }\n\n    return [];\n  }\n});\nexport default function createWrapper(intervals) {\n  if (!intervals || intervals.length === 0) {\n    return new IntervalTree(null);\n  }\n\n  return new IntervalTree(createIntervalTree(intervals));\n}","import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport createIntervalTree from '../vendor/intervalTree';\n\n// Position cache requirements:\n//   O(log(n)) lookup of cells to render for a given viewport size\n//   O(1) lookup of shortest measured column (so we know when to enter phase 1)\nvar PositionCache =\n/*#__PURE__*/\nfunction () {\n  function PositionCache() {\n    _classCallCheck(this, PositionCache);\n\n    _defineProperty(this, \"_columnSizeMap\", {});\n\n    _defineProperty(this, \"_intervalTree\", createIntervalTree());\n\n    _defineProperty(this, \"_leftMap\", {});\n  }\n\n  _createClass(PositionCache, [{\n    key: \"estimateTotalHeight\",\n    value: function estimateTotalHeight(cellCount, columnCount, defaultCellHeight) {\n      var unmeasuredCellCount = cellCount - this.count;\n      return this.tallestColumnSize + Math.ceil(unmeasuredCellCount / columnCount) * defaultCellHeight;\n    } // Render all cells visible within the viewport range defined.\n\n  }, {\n    key: \"range\",\n    value: function range(scrollTop, clientHeight, renderCallback) {\n      var _this = this;\n\n      this._intervalTree.queryInterval(scrollTop, scrollTop + clientHeight, function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 3),\n            top = _ref2[0],\n            _ = _ref2[1],\n            index = _ref2[2];\n\n        return renderCallback(index, _this._leftMap[index], top);\n      });\n    }\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(index, left, top, height) {\n      this._intervalTree.insert([top, top + height, index]);\n\n      this._leftMap[index] = left;\n      var columnSizeMap = this._columnSizeMap;\n      var columnHeight = columnSizeMap[left];\n\n      if (columnHeight === undefined) {\n        columnSizeMap[left] = top + height;\n      } else {\n        columnSizeMap[left] = Math.max(columnHeight, top + height);\n      }\n    }\n  }, {\n    key: \"count\",\n    get: function get() {\n      return this._intervalTree.count;\n    }\n  }, {\n    key: \"shortestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = size === 0 ? height : Math.min(size, height);\n      }\n\n      return size;\n    }\n  }, {\n    key: \"tallestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = Math.max(size, height);\n      }\n\n      return size;\n    }\n  }]);\n\n  return PositionCache;\n}();\n\nexport { PositionCache as default };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport PositionCache from './PositionCache';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\nvar emptyObject = {};\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * This component efficiently displays arbitrarily positioned cells using windowing techniques.\n * Cell position is determined by an injected `cellPositioner` property.\n * Windowing is vertical; this component does not support horizontal scrolling.\n *\n * Rendering occurs in two phases:\n * 1) First pass uses estimated cell sizes (provided by the cache) to determine how many cells to measure in a batch.\n *    Batch size is chosen using a fast, naive layout algorithm that stacks images in order until the viewport has been filled.\n *    After measurement is complete (componentDidMount or componentDidUpdate) this component evaluates positioned cells\n *    in order to determine if another measurement pass is required (eg if actual cell sizes were less than estimated sizes).\n *    All measurements are permanently cached (keyed by `keyMapper`) for performance purposes.\n * 2) Second pass uses the external `cellPositioner` to layout cells.\n *    At this time the positioner has access to cached size measurements for all cells.\n *    The positions it returns are cached by Masonry for fast access later.\n *    Phase one is repeated if the user scrolls beyond the current layout's bounds.\n *    If the layout is invalidated due to eg a resize, cached positions can be cleared using `recomputeCellPositions()`.\n *\n * Animation constraints:\n *   Simple animations are supported (eg translate/slide into place on initial reveal).\n *   More complex animations are not (eg flying from one position to another on resize).\n *\n * Layout constraints:\n *   This component supports multi-column layout.\n *   The height of each item may vary.\n *   The width of each item must not exceed the width of the column it is \"in\".\n *   The left position of all items within a column must align.\n *   (Items may not span multiple columns.)\n */\n\nvar Masonry = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Masonry, _React$PureComponent);\n\n  function Masonry() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Masonry);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Masonry)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStartIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionCache\", new PositionCache());\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingCallback\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      var height = _this.props.height;\n      var eventScrollTop = event.currentTarget.scrollTop; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollTop = Math.min(Math.max(0, _this._getEstimatedTotalHeight() - height), eventScrollTop); // On iOS, we can arrive at negative offsets by swiping past the start or end.\n      // Avoid re-rendering in this case as it can cause problems; see #532 for more.\n\n      if (eventScrollTop !== scrollTop) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._debounceResetIsScrolling(); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n\n      if (_this.state.scrollTop !== scrollTop) {\n        _this.setState({\n          isScrolling: true,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Masonry, [{\n    key: \"clearCellPositions\",\n    value: function clearCellPositions() {\n      this._positionCache = new PositionCache();\n      this.forceUpdate();\n    } // HACK This method signature was intended for Grid\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref) {\n      var index = _ref.rowIndex;\n\n      if (this._invalidateOnUpdateStartIndex === null) {\n        this._invalidateOnUpdateStartIndex = index;\n        this._invalidateOnUpdateStopIndex = index;\n      } else {\n        this._invalidateOnUpdateStartIndex = Math.min(this._invalidateOnUpdateStartIndex, index);\n        this._invalidateOnUpdateStopIndex = Math.max(this._invalidateOnUpdateStopIndex, index);\n      }\n    }\n  }, {\n    key: \"recomputeCellPositions\",\n    value: function recomputeCellPositions() {\n      var stopIndex = this._positionCache.count - 1;\n      this._positionCache = new PositionCache();\n\n      this._populatePositionCache(0, stopIndex);\n\n      this.forceUpdate();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n\n      if (this.props.scrollTop !== prevProps.scrollTop) {\n        this._debounceResetIsScrolling();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          cellCount = _this$props.cellCount,\n          cellMeasurerCache = _this$props.cellMeasurerCache,\n          cellRenderer = _this$props.cellRenderer,\n          className = _this$props.className,\n          height = _this$props.height,\n          id = _this$props.id,\n          keyMapper = _this$props.keyMapper,\n          overscanByPixels = _this$props.overscanByPixels,\n          role = _this$props.role,\n          style = _this$props.style,\n          tabIndex = _this$props.tabIndex,\n          width = _this$props.width,\n          rowDirection = _this$props.rowDirection;\n      var _this$state = this.state,\n          isScrolling = _this$state.isScrolling,\n          scrollTop = _this$state.scrollTop;\n      var children = [];\n\n      var estimateTotalHeight = this._getEstimatedTotalHeight();\n\n      var shortestColumnSize = this._positionCache.shortestColumnSize;\n      var measuredCellCount = this._positionCache.count;\n      var startIndex = 0;\n      var stopIndex;\n\n      this._positionCache.range(Math.max(0, scrollTop - overscanByPixels), height + overscanByPixels * 2, function (index, left, top) {\n        var _style;\n\n        if (typeof stopIndex === 'undefined') {\n          startIndex = index;\n          stopIndex = index;\n        } else {\n          startIndex = Math.min(startIndex, index);\n          stopIndex = Math.max(stopIndex, index);\n        }\n\n        children.push(cellRenderer({\n          index: index,\n          isScrolling: isScrolling,\n          key: keyMapper(index),\n          parent: _this2,\n          style: (_style = {\n            height: cellMeasurerCache.getHeight(index)\n          }, _defineProperty(_style, rowDirection === 'ltr' ? 'left' : 'right', left), _defineProperty(_style, \"position\", 'absolute'), _defineProperty(_style, \"top\", top), _defineProperty(_style, \"width\", cellMeasurerCache.getWidth(index)), _style)\n        }));\n      }); // We need to measure additional cells for this layout\n\n\n      if (shortestColumnSize < scrollTop + height + overscanByPixels && measuredCellCount < cellCount) {\n        var batchSize = Math.min(cellCount - measuredCellCount, Math.ceil((scrollTop + height + overscanByPixels - shortestColumnSize) / cellMeasurerCache.defaultHeight * width / cellMeasurerCache.defaultWidth));\n\n        for (var _index = measuredCellCount; _index < measuredCellCount + batchSize; _index++) {\n          stopIndex = _index;\n          children.push(cellRenderer({\n            index: _index,\n            isScrolling: isScrolling,\n            key: keyMapper(_index),\n            parent: this,\n            style: {\n              width: cellMeasurerCache.getWidth(_index)\n            }\n          }));\n        }\n      }\n\n      this._startIndex = startIndex;\n      this._stopIndex = stopIndex;\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Masonry', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({\n          boxSizing: 'border-box',\n          direction: 'ltr',\n          height: autoHeight ? 'auto' : height,\n          overflowX: 'hidden',\n          overflowY: estimateTotalHeight < height ? 'hidden' : 'auto',\n          position: 'relative',\n          width: width,\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform'\n        }, style),\n        tabIndex: tabIndex\n      }, React.createElement(\"div\", {\n        className: \"ReactVirtualized__Masonry__innerScrollContainer\",\n        style: {\n          width: '100%',\n          height: estimateTotalHeight,\n          maxWidth: '100%',\n          maxHeight: estimateTotalHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }\n      }, children));\n    }\n  }, {\n    key: \"_checkInvalidateOnUpdate\",\n    value: function _checkInvalidateOnUpdate() {\n      if (typeof this._invalidateOnUpdateStartIndex === 'number') {\n        var startIndex = this._invalidateOnUpdateStartIndex;\n        var stopIndex = this._invalidateOnUpdateStopIndex;\n        this._invalidateOnUpdateStartIndex = null;\n        this._invalidateOnUpdateStopIndex = null; // Query external layout logic for position of newly-measured cells\n\n        this._populatePositionCache(startIndex, stopIndex);\n\n        this.forceUpdate();\n      }\n    }\n  }, {\n    key: \"_debounceResetIsScrolling\",\n    value: function _debounceResetIsScrolling() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n\n      this._debounceResetIsScrollingId = requestAnimationTimeout(this._debounceResetIsScrollingCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_getEstimatedTotalHeight\",\n    value: function _getEstimatedTotalHeight() {\n      var _this$props2 = this.props,\n          cellCount = _this$props2.cellCount,\n          cellMeasurerCache = _this$props2.cellMeasurerCache,\n          width = _this$props2.width;\n      var estimatedColumnCount = Math.max(1, Math.floor(width / cellMeasurerCache.defaultWidth));\n      return this._positionCache.estimateTotalHeight(cellCount, estimatedColumnCount, cellMeasurerCache.defaultHeight);\n    }\n  }, {\n    key: \"_invokeOnScrollCallback\",\n    value: function _invokeOnScrollCallback() {\n      var _this$props3 = this.props,\n          height = _this$props3.height,\n          onScroll = _this$props3.onScroll;\n      var scrollTop = this.state.scrollTop;\n\n      if (this._onScrollMemoized !== scrollTop) {\n        onScroll({\n          clientHeight: height,\n          scrollHeight: this._getEstimatedTotalHeight(),\n          scrollTop: scrollTop\n        });\n        this._onScrollMemoized = scrollTop;\n      }\n    }\n  }, {\n    key: \"_invokeOnCellsRenderedCallback\",\n    value: function _invokeOnCellsRenderedCallback() {\n      if (this._startIndexMemoized !== this._startIndex || this._stopIndexMemoized !== this._stopIndex) {\n        var onCellsRendered = this.props.onCellsRendered;\n        onCellsRendered({\n          startIndex: this._startIndex,\n          stopIndex: this._stopIndex\n        });\n        this._startIndexMemoized = this._startIndex;\n        this._stopIndexMemoized = this._stopIndex;\n      }\n    }\n  }, {\n    key: \"_populatePositionCache\",\n    value: function _populatePositionCache(startIndex, stopIndex) {\n      var _this$props4 = this.props,\n          cellMeasurerCache = _this$props4.cellMeasurerCache,\n          cellPositioner = _this$props4.cellPositioner;\n\n      for (var _index2 = startIndex; _index2 <= stopIndex; _index2++) {\n        var _cellPositioner = cellPositioner(_index2),\n            left = _cellPositioner.left,\n            top = _cellPositioner.top;\n\n        this._positionCache.setPosition(_index2, left, top, cellMeasurerCache.getHeight(_index2));\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollTop !== undefined && prevState.scrollTop !== nextProps.scrollTop) {\n        return {\n          isScrolling: true,\n          scrollTop: nextProps.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Masonry;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"autoHeight\": PropTypes.bool.isRequired,\n  \"cellCount\": PropTypes.number.isRequired,\n  \"cellMeasurerCache\": function cellMeasurerCache() {\n    return (typeof CellMeasurerCache === \"function\" ? PropTypes.instanceOf(CellMeasurerCache).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellPositioner\": function cellPositioner() {\n    return (typeof Positioner === \"function\" ? PropTypes.instanceOf(Positioner).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof CellRenderer === \"function\" ? PropTypes.instanceOf(CellRenderer).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"className\": PropTypes.string,\n  \"height\": PropTypes.number.isRequired,\n  \"id\": PropTypes.string,\n  \"keyMapper\": function keyMapper() {\n    return (typeof KeyMapper === \"function\" ? PropTypes.instanceOf(KeyMapper).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"onCellsRendered\": function onCellsRendered() {\n    return (typeof OnCellsRenderedCallback === \"function\" ? PropTypes.instanceOf(OnCellsRenderedCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"onScroll\": function onScroll() {\n    return (typeof OnScrollCallback === \"function\" ? PropTypes.instanceOf(OnScrollCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"overscanByPixels\": PropTypes.number.isRequired,\n  \"role\": PropTypes.string.isRequired,\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n  \"style\": function style(props, propName, componentName) {\n    if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n      throw new Error(\"Prop `\".concat(propName, \"` has type 'any' or 'mixed', but was not provided to `\").concat(componentName, \"`. Pass undefined or any other value.\"));\n    }\n  },\n  \"tabIndex\": PropTypes.number.isRequired,\n  \"width\": PropTypes.number.isRequired,\n  \"rowDirection\": PropTypes.string.isRequired,\n  \"scrollTop\": PropTypes.number\n}), _temp);\n\n_defineProperty(Masonry, \"defaultProps\", {\n  autoHeight: false,\n  keyMapper: identity,\n  onCellsRendered: noop,\n  onScroll: noop,\n  overscanByPixels: 20,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  style: emptyObject,\n  tabIndex: 0,\n  rowDirection: 'ltr'\n});\n\nfunction identity(value) {\n  return value;\n}\n\nfunction noop() {}\n\nvar bpfrpt_proptype_CellMeasurerCache = process.env.NODE_ENV === 'production' ? null : {\n  \"defaultHeight\": PropTypes.number.isRequired,\n  \"defaultWidth\": PropTypes.number.isRequired,\n  \"getHeight\": PropTypes.func.isRequired,\n  \"getWidth\": PropTypes.func.isRequired\n};\npolyfill(Masonry);\nexport default Masonry;\nvar bpfrpt_proptype_Positioner = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_CellMeasurerCache };\nexport { bpfrpt_proptype_Positioner };","import createCellPositioner from './createCellPositioner';\nimport Masonry from './Masonry';\nexport default Masonry;\nexport { createCellPositioner, Masonry };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { CellMeasurerCache } from '../CellMeasurer';\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCacheDecorator =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCacheDecorator() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCacheDecorator);\n\n    _defineProperty(this, \"_cellMeasurerCache\", void 0);\n\n    _defineProperty(this, \"_columnIndexOffset\", void 0);\n\n    _defineProperty(this, \"_rowIndexOffset\", void 0);\n\n    _defineProperty(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      _this._cellMeasurerCache.columnWidth({\n        index: index + _this._columnIndexOffset\n      });\n    });\n\n    _defineProperty(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      _this._cellMeasurerCache.rowHeight({\n        index: index + _this._rowIndexOffset\n      });\n    });\n\n    var cellMeasurerCache = params.cellMeasurerCache,\n        _params$columnIndexOf = params.columnIndexOffset,\n        columnIndexOffset = _params$columnIndexOf === void 0 ? 0 : _params$columnIndexOf,\n        _params$rowIndexOffse = params.rowIndexOffset,\n        rowIndexOffset = _params$rowIndexOffse === void 0 ? 0 : _params$rowIndexOffse;\n    this._cellMeasurerCache = cellMeasurerCache;\n    this._columnIndexOffset = columnIndexOffset;\n    this._rowIndexOffset = rowIndexOffset;\n  }\n\n  _createClass(CellMeasurerCacheDecorator, [{\n    key: \"clear\",\n    value: function clear(rowIndex, columnIndex) {\n      this._cellMeasurerCache.clear(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellMeasurerCache.clearAll();\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._cellMeasurerCache.hasFixedHeight();\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._cellMeasurerCache.hasFixedWidth();\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getHeight(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getWidth(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.has(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      this._cellMeasurerCache.set(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset, width, height);\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCacheDecorator;\n}();\n\nexport { CellMeasurerCacheDecorator as default };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport CellMeasurerCacheDecorator from './CellMeasurerCacheDecorator';\nimport Grid from '../Grid';\nvar SCROLLBAR_SIZE_BUFFER = 20;\n/**\n * Renders 1, 2, or 4 Grids depending on configuration.\n * A main (body) Grid will always be rendered.\n * Optionally, 1-2 Grids for sticky header rows will also be rendered.\n * If no sticky columns, only 1 sticky header Grid will be rendered.\n * If sticky columns, 2 sticky header Grids will be rendered.\n */\n\nvar MultiGrid =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(MultiGrid, _React$PureComponent);\n\n  function MultiGrid(props, context) {\n    var _this;\n\n    _classCallCheck(this, MultiGrid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MultiGrid).call(this, props, context));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollbarSize: 0,\n      showHorizontalScrollbar: false,\n      showVerticalScrollbar: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomLeftGridRef\", function (ref) {\n      _this._bottomLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomRightGridRef\", function (ref) {\n      _this._bottomRightGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomLeftGrid\", function (_ref) {\n      var rowIndex = _ref.rowIndex,\n          rest = _objectWithoutProperties(_ref, [\"rowIndex\"]);\n\n      var _this$props = _this.props,\n          cellRenderer = _this$props.cellRenderer,\n          fixedRowCount = _this$props.fixedRowCount,\n          rowCount = _this$props.rowCount;\n\n      if (rowIndex === rowCount - fixedRowCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            height: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          parent: _assertThisInitialized(_this),\n          rowIndex: rowIndex + fixedRowCount\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomRightGrid\", function (_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex,\n          rest = _objectWithoutProperties(_ref2, [\"columnIndex\", \"rowIndex\"]);\n\n      var _this$props2 = _this.props,\n          cellRenderer = _this$props2.cellRenderer,\n          fixedColumnCount = _this$props2.fixedColumnCount,\n          fixedRowCount = _this$props2.fixedRowCount;\n      return cellRenderer(_objectSpread({}, rest, {\n        columnIndex: columnIndex + fixedColumnCount,\n        parent: _assertThisInitialized(_this),\n        rowIndex: rowIndex + fixedRowCount\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererTopRightGrid\", function (_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rest = _objectWithoutProperties(_ref3, [\"columnIndex\"]);\n\n      var _this$props3 = _this.props,\n          cellRenderer = _this$props3.cellRenderer,\n          columnCount = _this$props3.columnCount,\n          fixedColumnCount = _this$props3.fixedColumnCount;\n\n      if (columnIndex === columnCount - fixedColumnCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            width: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          columnIndex: columnIndex + fixedColumnCount,\n          parent: _assertThisInitialized(_this)\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnWidthRightGrid\", function (_ref4) {\n      var index = _ref4.index;\n      var _this$props4 = _this.props,\n          columnCount = _this$props4.columnCount,\n          fixedColumnCount = _this$props4.fixedColumnCount,\n          columnWidth = _this$props4.columnWidth;\n      var _this$state = _this.state,\n          scrollbarSize = _this$state.scrollbarSize,\n          showHorizontalScrollbar = _this$state.showHorizontalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showHorizontalScrollbar && index === columnCount - fixedColumnCount) {\n        return scrollbarSize;\n      }\n\n      return typeof columnWidth === 'function' ? columnWidth({\n        index: index + fixedColumnCount\n      }) : columnWidth;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft,\n          scrollTop = scrollInfo.scrollTop;\n\n      _this.setState({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      var onScroll = _this.props.onScroll;\n\n      if (onScroll) {\n        onScroll(scrollInfo);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollbarPresenceChange\", function (_ref5) {\n      var horizontal = _ref5.horizontal,\n          size = _ref5.size,\n          vertical = _ref5.vertical;\n      var _this$state2 = _this.state,\n          showHorizontalScrollbar = _this$state2.showHorizontalScrollbar,\n          showVerticalScrollbar = _this$state2.showVerticalScrollbar;\n\n      if (horizontal !== showHorizontalScrollbar || vertical !== showVerticalScrollbar) {\n        _this.setState({\n          scrollbarSize: size,\n          showHorizontalScrollbar: horizontal,\n          showVerticalScrollbar: vertical\n        });\n\n        var onScrollbarPresenceChange = _this.props.onScrollbarPresenceChange;\n\n        if (typeof onScrollbarPresenceChange === 'function') {\n          onScrollbarPresenceChange({\n            horizontal: horizontal,\n            size: size,\n            vertical: vertical\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollLeft\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft;\n\n      _this._onScroll({\n        scrollLeft: scrollLeft,\n        scrollTop: _this.state.scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollTop\", function (scrollInfo) {\n      var scrollTop = scrollInfo.scrollTop;\n\n      _this._onScroll({\n        scrollTop: scrollTop,\n        scrollLeft: _this.state.scrollLeft\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowHeightBottomGrid\", function (_ref6) {\n      var index = _ref6.index;\n      var _this$props5 = _this.props,\n          fixedRowCount = _this$props5.fixedRowCount,\n          rowCount = _this$props5.rowCount,\n          rowHeight = _this$props5.rowHeight;\n      var _this$state3 = _this.state,\n          scrollbarSize = _this$state3.scrollbarSize,\n          showVerticalScrollbar = _this$state3.showVerticalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showVerticalScrollbar && index === rowCount - fixedRowCount) {\n        return scrollbarSize;\n      }\n\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: index + fixedRowCount\n      }) : rowHeight;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topLeftGridRef\", function (ref) {\n      _this._topLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topRightGridRef\", function (ref) {\n      _this._topRightGrid = ref;\n    });\n\n    var deferredMeasurementCache = props.deferredMeasurementCache,\n        _fixedColumnCount = props.fixedColumnCount,\n        _fixedRowCount = props.fixedRowCount;\n\n    _this._maybeCalculateCachedStyles(true);\n\n    if (deferredMeasurementCache) {\n      _this._deferredMeasurementCacheBottomLeftGrid = _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: 0,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheBottomRightGrid = _fixedColumnCount > 0 || _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheTopRightGrid = _fixedColumnCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: 0\n      }) : deferredMeasurementCache;\n    }\n\n    return _this;\n  }\n\n  _createClass(MultiGrid, [{\n    key: \"forceUpdateGrids\",\n    value: function forceUpdateGrids() {\n      this._bottomLeftGrid && this._bottomLeftGrid.forceUpdate();\n      this._bottomRightGrid && this._bottomRightGrid.forceUpdate();\n      this._topLeftGrid && this._topLeftGrid.forceUpdate();\n      this._topRightGrid && this._topRightGrid.forceUpdate();\n    }\n    /** See Grid#invalidateCellSizeAfterRender */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender() {\n      var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref7$columnIndex = _ref7.columnIndex,\n          columnIndex = _ref7$columnIndex === void 0 ? 0 : _ref7$columnIndex,\n          _ref7$rowIndex = _ref7.rowIndex,\n          rowIndex = _ref7$rowIndex === void 0 ? 0 : _ref7$rowIndex;\n\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      this._bottomLeftGrid && this._bottomLeftGrid.measureAllCells();\n      this._bottomRightGrid && this._bottomRightGrid.measureAllCells();\n      this._topLeftGrid && this._topLeftGrid.measureAllCells();\n      this._topRightGrid && this._topRightGrid.measureAllCells();\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref8 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref8$columnIndex = _ref8.columnIndex,\n          columnIndex = _ref8$columnIndex === void 0 ? 0 : _ref8$columnIndex,\n          _ref8$rowIndex = _ref8.rowIndex,\n          rowIndex = _ref8$rowIndex === void 0 ? 0 : _ref8$rowIndex;\n\n      var _this$props6 = this.props,\n          fixedColumnCount = _this$props6.fixedColumnCount,\n          fixedRowCount = _this$props6.fixedRowCount;\n      var adjustedColumnIndex = Math.max(0, columnIndex - fixedColumnCount);\n      var adjustedRowIndex = Math.max(0, rowIndex - fixedRowCount);\n      this._bottomLeftGrid && this._bottomLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._bottomRightGrid && this._bottomRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._topLeftGrid && this._topLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: rowIndex\n      });\n      this._topRightGrid && this._topRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: rowIndex\n      });\n      this._leftGridWidth = null;\n      this._topGridHeight = null;\n\n      this._maybeCalculateCachedStyles(true);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props7 = this.props,\n          scrollLeft = _this$props7.scrollLeft,\n          scrollTop = _this$props7.scrollTop;\n\n      if (scrollLeft > 0 || scrollTop > 0) {\n        var newState = {};\n\n        if (scrollLeft > 0) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop > 0) {\n          newState.scrollTop = scrollTop;\n        }\n\n        this.setState(newState);\n      }\n\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props8 = this.props,\n          onScroll = _this$props8.onScroll,\n          onSectionRendered = _this$props8.onSectionRendered,\n          onScrollbarPresenceChange = _this$props8.onScrollbarPresenceChange,\n          scrollLeftProp = _this$props8.scrollLeft,\n          scrollToColumn = _this$props8.scrollToColumn,\n          scrollTopProp = _this$props8.scrollTop,\n          scrollToRow = _this$props8.scrollToRow,\n          rest = _objectWithoutProperties(_this$props8, [\"onScroll\", \"onSectionRendered\", \"onScrollbarPresenceChange\", \"scrollLeft\", \"scrollToColumn\", \"scrollTop\", \"scrollToRow\"]);\n\n      this._prepareForRender(); // Don't render any of our Grids if there are no cells.\n      // This mirrors what Grid does,\n      // And prevents us from recording inaccurage measurements when used with CellMeasurer.\n\n\n      if (this.props.width === 0 || this.props.height === 0) {\n        return null;\n      } // scrollTop and scrollLeft props are explicitly filtered out and ignored\n\n\n      var _this$state4 = this.state,\n          scrollLeft = _this$state4.scrollLeft,\n          scrollTop = _this$state4.scrollTop;\n      return React.createElement(\"div\", {\n        style: this._containerOuterStyle\n      }, React.createElement(\"div\", {\n        style: this._containerTopStyle\n      }, this._renderTopLeftGrid(rest), this._renderTopRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollLeft: scrollLeft\n      }))), React.createElement(\"div\", {\n        style: this._containerBottomStyle\n      }, this._renderBottomLeftGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollTop: scrollTop\n      })), this._renderBottomRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        onSectionRendered: onSectionRendered,\n        scrollLeft: scrollLeft,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow,\n        scrollTop: scrollTop\n      }))));\n    }\n  }, {\n    key: \"_getBottomGridHeight\",\n    value: function _getBottomGridHeight(props) {\n      var height = props.height;\n\n      var topGridHeight = this._getTopGridHeight(props);\n\n      return height - topGridHeight;\n    }\n  }, {\n    key: \"_getLeftGridWidth\",\n    value: function _getLeftGridWidth(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          columnWidth = props.columnWidth;\n\n      if (this._leftGridWidth == null) {\n        if (typeof columnWidth === 'function') {\n          var leftGridWidth = 0;\n\n          for (var index = 0; index < fixedColumnCount; index++) {\n            leftGridWidth += columnWidth({\n              index: index\n            });\n          }\n\n          this._leftGridWidth = leftGridWidth;\n        } else {\n          this._leftGridWidth = columnWidth * fixedColumnCount;\n        }\n      }\n\n      return this._leftGridWidth;\n    }\n  }, {\n    key: \"_getRightGridWidth\",\n    value: function _getRightGridWidth(props) {\n      var width = props.width;\n\n      var leftGridWidth = this._getLeftGridWidth(props);\n\n      return width - leftGridWidth;\n    }\n  }, {\n    key: \"_getTopGridHeight\",\n    value: function _getTopGridHeight(props) {\n      var fixedRowCount = props.fixedRowCount,\n          rowHeight = props.rowHeight;\n\n      if (this._topGridHeight == null) {\n        if (typeof rowHeight === 'function') {\n          var topGridHeight = 0;\n\n          for (var index = 0; index < fixedRowCount; index++) {\n            topGridHeight += rowHeight({\n              index: index\n            });\n          }\n\n          this._topGridHeight = topGridHeight;\n        } else {\n          this._topGridHeight = rowHeight * fixedRowCount;\n        }\n      }\n\n      return this._topGridHeight;\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n        this.forceUpdate();\n      }\n    }\n    /**\n     * Avoid recreating inline styles each render; this bypasses Grid's shallowCompare.\n     * This method recalculates styles only when specific props change.\n     */\n\n  }, {\n    key: \"_maybeCalculateCachedStyles\",\n    value: function _maybeCalculateCachedStyles(resetAll) {\n      var _this$props9 = this.props,\n          columnWidth = _this$props9.columnWidth,\n          enableFixedColumnScroll = _this$props9.enableFixedColumnScroll,\n          enableFixedRowScroll = _this$props9.enableFixedRowScroll,\n          height = _this$props9.height,\n          fixedColumnCount = _this$props9.fixedColumnCount,\n          fixedRowCount = _this$props9.fixedRowCount,\n          rowHeight = _this$props9.rowHeight,\n          style = _this$props9.style,\n          styleBottomLeftGrid = _this$props9.styleBottomLeftGrid,\n          styleBottomRightGrid = _this$props9.styleBottomRightGrid,\n          styleTopLeftGrid = _this$props9.styleTopLeftGrid,\n          styleTopRightGrid = _this$props9.styleTopRightGrid,\n          width = _this$props9.width;\n      var sizeChange = resetAll || height !== this._lastRenderedHeight || width !== this._lastRenderedWidth;\n      var leftSizeChange = resetAll || columnWidth !== this._lastRenderedColumnWidth || fixedColumnCount !== this._lastRenderedFixedColumnCount;\n      var topSizeChange = resetAll || fixedRowCount !== this._lastRenderedFixedRowCount || rowHeight !== this._lastRenderedRowHeight;\n\n      if (resetAll || sizeChange || style !== this._lastRenderedStyle) {\n        this._containerOuterStyle = _objectSpread({\n          height: height,\n          overflow: 'visible',\n          // Let :focus outline show through\n          width: width\n        }, style);\n      }\n\n      if (resetAll || sizeChange || topSizeChange) {\n        this._containerTopStyle = {\n          height: this._getTopGridHeight(this.props),\n          position: 'relative',\n          width: width\n        };\n        this._containerBottomStyle = {\n          height: height - this._getTopGridHeight(this.props),\n          overflow: 'visible',\n          // Let :focus outline show through\n          position: 'relative',\n          width: width\n        };\n      }\n\n      if (resetAll || styleBottomLeftGrid !== this._lastRenderedStyleBottomLeftGrid) {\n        this._bottomLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: enableFixedColumnScroll ? 'auto' : 'hidden',\n          position: 'absolute'\n        }, styleBottomLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleBottomRightGrid !== this._lastRenderedStyleBottomRightGrid) {\n        this._bottomRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          position: 'absolute'\n        }, styleBottomRightGrid);\n      }\n\n      if (resetAll || styleTopLeftGrid !== this._lastRenderedStyleTopLeftGrid) {\n        this._topLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleTopRightGrid !== this._lastRenderedStyleTopRightGrid) {\n        this._topRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          overflowX: enableFixedRowScroll ? 'auto' : 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopRightGrid);\n      }\n\n      this._lastRenderedColumnWidth = columnWidth;\n      this._lastRenderedFixedColumnCount = fixedColumnCount;\n      this._lastRenderedFixedRowCount = fixedRowCount;\n      this._lastRenderedHeight = height;\n      this._lastRenderedRowHeight = rowHeight;\n      this._lastRenderedStyle = style;\n      this._lastRenderedStyleBottomLeftGrid = styleBottomLeftGrid;\n      this._lastRenderedStyleBottomRightGrid = styleBottomRightGrid;\n      this._lastRenderedStyleTopLeftGrid = styleTopLeftGrid;\n      this._lastRenderedStyleTopRightGrid = styleTopRightGrid;\n      this._lastRenderedWidth = width;\n    }\n  }, {\n    key: \"_prepareForRender\",\n    value: function _prepareForRender() {\n      if (this._lastRenderedColumnWidth !== this.props.columnWidth || this._lastRenderedFixedColumnCount !== this.props.fixedColumnCount) {\n        this._leftGridWidth = null;\n      }\n\n      if (this._lastRenderedFixedRowCount !== this.props.fixedRowCount || this._lastRenderedRowHeight !== this.props.rowHeight) {\n        this._topGridHeight = null;\n      }\n\n      this._maybeCalculateCachedStyles();\n\n      this._lastRenderedColumnWidth = this.props.columnWidth;\n      this._lastRenderedFixedColumnCount = this.props.fixedColumnCount;\n      this._lastRenderedFixedRowCount = this.props.fixedRowCount;\n      this._lastRenderedRowHeight = this.props.rowHeight;\n    }\n  }, {\n    key: \"_renderBottomLeftGrid\",\n    value: function _renderBottomLeftGrid(props) {\n      var enableFixedColumnScroll = props.enableFixedColumnScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          hideBottomLeftGridScrollbar = props.hideBottomLeftGridScrollbar;\n      var showVerticalScrollbar = this.state.showVerticalScrollbar;\n\n      if (!fixedColumnCount) {\n        return null;\n      }\n\n      var additionalRowCount = showVerticalScrollbar ? 1 : 0,\n          height = this._getBottomGridHeight(props),\n          width = this._getLeftGridWidth(props),\n          scrollbarSize = this.state.showVerticalScrollbar ? this.state.scrollbarSize : 0,\n          gridWidth = hideBottomLeftGridScrollbar ? width + scrollbarSize : width;\n\n      var bottomLeftGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomLeftGrid,\n        className: this.props.classNameBottomLeftGrid,\n        columnCount: fixedColumnCount,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomLeftGrid,\n        height: height,\n        onScroll: enableFixedColumnScroll ? this._onScrollTop : undefined,\n        ref: this._bottomLeftGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount) + additionalRowCount,\n        rowHeight: this._rowHeightBottomGrid,\n        style: this._bottomLeftGridStyle,\n        tabIndex: null,\n        width: gridWidth\n      }));\n\n      if (hideBottomLeftGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"BottomLeftGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._bottomLeftGridStyle, {\n            height: height,\n            width: width,\n            overflowY: 'hidden'\n          })\n        }, bottomLeftGrid);\n      }\n\n      return bottomLeftGrid;\n    }\n  }, {\n    key: \"_renderBottomRightGrid\",\n    value: function _renderBottomRightGrid(props) {\n      var columnCount = props.columnCount,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          scrollToColumn = props.scrollToColumn,\n          scrollToRow = props.scrollToRow;\n      return React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomRightGrid,\n        className: this.props.classNameBottomRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount),\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomRightGrid,\n        height: this._getBottomGridHeight(props),\n        onScroll: this._onScroll,\n        onScrollbarPresenceChange: this._onScrollbarPresenceChange,\n        ref: this._bottomRightGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount),\n        rowHeight: this._rowHeightBottomGrid,\n        scrollToColumn: scrollToColumn - fixedColumnCount,\n        scrollToRow: scrollToRow - fixedRowCount,\n        style: this._bottomRightGridStyle,\n        width: this._getRightGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopLeftGrid\",\n    value: function _renderTopLeftGrid(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount;\n\n      if (!fixedColumnCount || !fixedRowCount) {\n        return null;\n      }\n\n      return React.createElement(Grid, _extends({}, props, {\n        className: this.props.classNameTopLeftGrid,\n        columnCount: fixedColumnCount,\n        height: this._getTopGridHeight(props),\n        ref: this._topLeftGridRef,\n        rowCount: fixedRowCount,\n        style: this._topLeftGridStyle,\n        tabIndex: null,\n        width: this._getLeftGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopRightGrid\",\n    value: function _renderTopRightGrid(props) {\n      var columnCount = props.columnCount,\n          enableFixedRowScroll = props.enableFixedRowScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          scrollLeft = props.scrollLeft,\n          hideTopRightGridScrollbar = props.hideTopRightGridScrollbar;\n      var _this$state5 = this.state,\n          showHorizontalScrollbar = _this$state5.showHorizontalScrollbar,\n          scrollbarSize = _this$state5.scrollbarSize;\n\n      if (!fixedRowCount) {\n        return null;\n      }\n\n      var additionalColumnCount = showHorizontalScrollbar ? 1 : 0,\n          height = this._getTopGridHeight(props),\n          width = this._getRightGridWidth(props),\n          additionalHeight = showHorizontalScrollbar ? scrollbarSize : 0;\n\n      var gridHeight = height,\n          style = this._topRightGridStyle;\n\n      if (hideTopRightGridScrollbar) {\n        gridHeight = height + additionalHeight;\n        style = _objectSpread({}, this._topRightGridStyle, {\n          left: 0\n        });\n      }\n\n      var topRightGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererTopRightGrid,\n        className: this.props.classNameTopRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount) + additionalColumnCount,\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheTopRightGrid,\n        height: gridHeight,\n        onScroll: enableFixedRowScroll ? this._onScrollLeft : undefined,\n        ref: this._topRightGridRef,\n        rowCount: fixedRowCount,\n        scrollLeft: scrollLeft,\n        style: style,\n        tabIndex: null,\n        width: width\n      }));\n\n      if (hideTopRightGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"TopRightGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._topRightGridStyle, {\n            height: height,\n            width: width,\n            overflowX: 'hidden'\n          })\n        }, topRightGrid);\n      }\n\n      return topRightGrid;\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null && nextProps.scrollLeft >= 0 ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null && nextProps.scrollTop >= 0 ? nextProps.scrollTop : prevState.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return MultiGrid;\n}(React.PureComponent);\n\n_defineProperty(MultiGrid, \"defaultProps\", {\n  classNameBottomLeftGrid: '',\n  classNameBottomRightGrid: '',\n  classNameTopLeftGrid: '',\n  classNameTopRightGrid: '',\n  enableFixedColumnScroll: false,\n  enableFixedRowScroll: false,\n  fixedColumnCount: 0,\n  fixedRowCount: 0,\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  styleBottomLeftGrid: {},\n  styleBottomRightGrid: {},\n  styleTopLeftGrid: {},\n  styleTopRightGrid: {},\n  hideTopRightGridScrollbar: false,\n  hideBottomLeftGridScrollbar: false\n});\n\nMultiGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  classNameBottomLeftGrid: PropTypes.string.isRequired,\n  classNameBottomRightGrid: PropTypes.string.isRequired,\n  classNameTopLeftGrid: PropTypes.string.isRequired,\n  classNameTopRightGrid: PropTypes.string.isRequired,\n  enableFixedColumnScroll: PropTypes.bool.isRequired,\n  enableFixedRowScroll: PropTypes.bool.isRequired,\n  fixedColumnCount: PropTypes.number.isRequired,\n  fixedRowCount: PropTypes.number.isRequired,\n  onScrollbarPresenceChange: PropTypes.func,\n  style: PropTypes.object.isRequired,\n  styleBottomLeftGrid: PropTypes.object.isRequired,\n  styleBottomRightGrid: PropTypes.object.isRequired,\n  styleTopLeftGrid: PropTypes.object.isRequired,\n  styleTopRightGrid: PropTypes.object.isRequired,\n  hideTopRightGridScrollbar: PropTypes.bool,\n  hideBottomLeftGridScrollbar: PropTypes.bool\n} : {};\npolyfill(MultiGrid);\nexport default MultiGrid;","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * HOC that simplifies the process of synchronizing scrolling between two or more virtualized components.\n */\n\nvar ScrollSync =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ScrollSync, _React$PureComponent);\n\n  function ScrollSync(props, context) {\n    var _this;\n\n    _classCallCheck(this, ScrollSync);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ScrollSync).call(this, props, context));\n    _this.state = {\n      clientHeight: 0,\n      clientWidth: 0,\n      scrollHeight: 0,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollWidth: 0\n    };\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ScrollSync, [{\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state = this.state,\n          clientHeight = _this$state.clientHeight,\n          clientWidth = _this$state.clientWidth,\n          scrollHeight = _this$state.scrollHeight,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop,\n          scrollWidth = _this$state.scrollWidth;\n      return children({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        onScroll: this._onScroll,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref) {\n      var clientHeight = _ref.clientHeight,\n          clientWidth = _ref.clientWidth,\n          scrollHeight = _ref.scrollHeight,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          scrollWidth = _ref.scrollWidth;\n      this.setState({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }]);\n\n  return ScrollSync;\n}(React.PureComponent);\n\nexport { ScrollSync as default };\nScrollSync.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering 2 or more virtualized components.\n   * This function should implement the following signature:\n   * ({ onScroll, scrollLeft, scrollTop }) => PropTypes.element\n   */\n  children: PropTypes.func.isRequired\n} : {};","import * as React from 'react';\nexport default function defaultHeaderRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      style = _ref.style;\n  return React.createElement(\"div\", {\n    className: className,\n    role: \"row\",\n    style: style\n  }, columns);\n}\ndefaultHeaderRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRowRendererParams;\nimport { bpfrpt_proptype_HeaderRowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","var SortDirection = {\n  /**\n   * Sort items in ascending order.\n   * This means arranging from the lowest value to the highest (e.g. a-z, 0-9).\n   */\n  ASC: 'ASC',\n\n  /**\n   * Sort items in descending order.\n   * This means arranging from the highest value to the lowest (e.g. z-a, 9-0).\n   */\n  DESC: 'DESC'\n};\nexport default SortDirection;","import clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport SortDirection from './SortDirection';\n/**\n * Displayed beside a header to indicate that a Table is currently sorted by this column.\n */\n\nexport default function SortIndicator(_ref) {\n  var sortDirection = _ref.sortDirection;\n  var classNames = clsx('ReactVirtualized__Table__sortableHeaderIcon', {\n    'ReactVirtualized__Table__sortableHeaderIcon--ASC': sortDirection === SortDirection.ASC,\n    'ReactVirtualized__Table__sortableHeaderIcon--DESC': sortDirection === SortDirection.DESC\n  });\n  return React.createElement(\"svg\", {\n    className: classNames,\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 24 24\"\n  }, sortDirection === SortDirection.ASC ? React.createElement(\"path\", {\n    d: \"M7 14l5-5 5 5z\"\n  }) : React.createElement(\"path\", {\n    d: \"M7 10l5 5 5-5z\"\n  }), React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  }));\n}\nSortIndicator.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC])\n} : {};","import * as React from 'react';\nimport SortIndicator from './SortIndicator';\n\n/**\n * Default table header renderer.\n */\nexport default function defaultHeaderRenderer(_ref) {\n  var dataKey = _ref.dataKey,\n      label = _ref.label,\n      sortBy = _ref.sortBy,\n      sortDirection = _ref.sortDirection;\n  var showSortIndicator = sortBy === dataKey;\n  var children = [React.createElement(\"span\", {\n    className: \"ReactVirtualized__Table__headerTruncatedText\",\n    key: \"label\",\n    title: typeof label === 'string' ? label : null\n  }, label)];\n\n  if (showSortIndicator) {\n    children.push(React.createElement(SortIndicator, {\n      key: \"SortIndicator\",\n      sortDirection: sortDirection\n    }));\n  }\n\n  return children;\n}\ndefaultHeaderRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRendererParams;\nimport { bpfrpt_proptype_HeaderRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\n\n/**\n * Default row renderer for Table.\n */\nexport default function defaultRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      index = _ref.index,\n      key = _ref.key,\n      onRowClick = _ref.onRowClick,\n      onRowDoubleClick = _ref.onRowDoubleClick,\n      onRowMouseOut = _ref.onRowMouseOut,\n      onRowMouseOver = _ref.onRowMouseOver,\n      onRowRightClick = _ref.onRowRightClick,\n      rowData = _ref.rowData,\n      style = _ref.style;\n  var a11yProps = {\n    'aria-rowindex': index + 1\n  };\n\n  if (onRowClick || onRowDoubleClick || onRowMouseOut || onRowMouseOver || onRowRightClick) {\n    a11yProps['aria-label'] = 'row';\n    a11yProps.tabIndex = 0;\n\n    if (onRowClick) {\n      a11yProps.onClick = function (event) {\n        return onRowClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowDoubleClick) {\n      a11yProps.onDoubleClick = function (event) {\n        return onRowDoubleClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOut) {\n      a11yProps.onMouseOut = function (event) {\n        return onRowMouseOut({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOver) {\n      a11yProps.onMouseOver = function (event) {\n        return onRowMouseOver({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowRightClick) {\n      a11yProps.onContextMenu = function (event) {\n        return onRowRightClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n  }\n\n  return React.createElement(\"div\", _extends({}, a11yProps, {\n    className: className,\n    key: key,\n    role: \"row\",\n    style: style\n  }), columns);\n}\ndefaultRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_RowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_RowRendererParams;\nimport { bpfrpt_proptype_RowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport SortDirection from './SortDirection';\n/**\n * Describes the header and cell contents of a table column.\n */\n\nvar Column =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Column, _React$Component);\n\n  function Column() {\n    _classCallCheck(this, Column);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Column).apply(this, arguments));\n  }\n\n  return Column;\n}(React.Component);\n\n_defineProperty(Column, \"defaultProps\", {\n  cellDataGetter: defaultCellDataGetter,\n  cellRenderer: defaultCellRenderer,\n  defaultSortDirection: SortDirection.ASC,\n  flexGrow: 0,\n  flexShrink: 1,\n  headerRenderer: defaultHeaderRenderer,\n  style: {}\n});\n\nexport { Column as default };\nColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Optional aria-label value to set on the column header */\n  'aria-label': PropTypes.string,\n\n  /**\n   * Callback responsible for returning a cell's data, given its :dataKey\n   * ({ columnData: any, dataKey: string, rowData: any }): any\n   */\n  cellDataGetter: PropTypes.func,\n\n  /**\n   * Callback responsible for rendering a cell's contents.\n   * ({ cellData: any, columnData: any, dataKey: string, rowData: any, rowIndex: number }): node\n   */\n  cellRenderer: PropTypes.func,\n\n  /** Optional CSS class to apply to cell */\n  className: PropTypes.string,\n\n  /** Optional additional data passed to this column's :cellDataGetter */\n  columnData: PropTypes.object,\n\n  /** Uniquely identifies the row-data attribute corresponding to this cell */\n  dataKey: PropTypes.any.isRequired,\n\n  /** Optional direction to be used when clicked the first time */\n  defaultSortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** If sort is enabled for the table at large, disable it for this column */\n  disableSort: PropTypes.bool,\n\n  /** Flex grow style; defaults to 0 */\n  flexGrow: PropTypes.number,\n\n  /** Flex shrink style; defaults to 1 */\n  flexShrink: PropTypes.number,\n\n  /** Optional CSS class to apply to this column's header */\n  headerClassName: PropTypes.string,\n\n  /**\n   * Optional callback responsible for rendering a column header contents.\n   * ({ columnData: object, dataKey: string, disableSort: boolean, label: node, sortBy: string, sortDirection: string }): PropTypes.node\n   */\n  headerRenderer: PropTypes.func.isRequired,\n\n  /** Optional inline style to apply to this column's header */\n  headerStyle: PropTypes.object,\n\n  /** Optional id to set on the column header */\n  id: PropTypes.string,\n\n  /** Header label for this column */\n  label: PropTypes.node,\n\n  /** Maximum width of column; this property will only be used if :flexGrow is > 0. */\n  maxWidth: PropTypes.number,\n\n  /** Minimum width of column. */\n  minWidth: PropTypes.number,\n\n  /** Optional inline style to apply to cell */\n  style: PropTypes.object,\n\n  /** Flex basis (width) for this column; This value can grow or shrink based on :flexGrow and :flexShrink properties. */\n  width: PropTypes.number.isRequired\n} : {};","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport Column from './Column';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer';\nimport SortDirection from './SortDirection';\n/**\n * Table component with fixed headers and virtualized rows for improved performance with large data sets.\n * This component expects explicit width, height, and padding parameters.\n */\n\nvar Table =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Table, _React$PureComponent);\n\n  function Table(props) {\n    var _this;\n\n    _classCallCheck(this, Table);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Table).call(this, props));\n    _this.state = {\n      scrollbarWidth: 0\n    };\n    _this._createColumn = _this._createColumn.bind(_assertThisInitialized(_this));\n    _this._createRow = _this._createRow.bind(_assertThisInitialized(_this));\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    _this._onSectionRendered = _this._onSectionRendered.bind(_assertThisInitialized(_this));\n    _this._setRef = _this._setRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Table, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref) {\n      var alignment = _ref.alignment,\n          index = _ref.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref3$columnIndex = _ref3.columnIndex,\n          columnIndex = _ref3$columnIndex === void 0 ? 0 : _ref3$columnIndex,\n          _ref3$rowIndex = _ref3.rowIndex,\n          rowIndex = _ref3$rowIndex === void 0 ? 0 : _ref3$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"getScrollbarWidth\",\n    value: function getScrollbarWidth() {\n      if (this.Grid) {\n        var _Grid = findDOMNode(this.Grid);\n\n        var clientWidth = _Grid.clientWidth || 0;\n        var offsetWidth = _Grid.offsetWidth || 0;\n        return offsetWidth - clientWidth;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          className = _this$props.className,\n          disableHeader = _this$props.disableHeader,\n          gridClassName = _this$props.gridClassName,\n          gridStyle = _this$props.gridStyle,\n          headerHeight = _this$props.headerHeight,\n          headerRowRenderer = _this$props.headerRowRenderer,\n          height = _this$props.height,\n          id = _this$props.id,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          rowClassName = _this$props.rowClassName,\n          rowStyle = _this$props.rowStyle,\n          scrollToIndex = _this$props.scrollToIndex,\n          style = _this$props.style,\n          width = _this$props.width;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var availableRowsHeight = disableHeader ? height : height - headerHeight;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: -1\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: -1\n      }) : rowStyle; // Precompute and cache column styles before rendering rows and columns to speed things up\n\n      this._cachedColumnStyles = [];\n      React.Children.toArray(children).forEach(function (column, index) {\n        var flexStyles = _this2._getFlexStyleForColumn(column, column.props.style);\n\n        _this2._cachedColumnStyles[index] = _objectSpread({\n          overflow: 'hidden'\n        }, flexStyles);\n      }); // Note that we specify :rowCount, :scrollbarWidth, :sortBy, and :sortDirection as properties on Grid even though these have nothing to do with Grid.\n      // This is done because Grid is a pure component and won't update unless its properties or state has changed.\n      // Any property that should trigger a re-render of Grid then is specified here to avoid a stale display.\n\n      return React.createElement(\"div\", {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-labelledby\": this.props['aria-labelledby'],\n        \"aria-colcount\": React.Children.toArray(children).length,\n        \"aria-rowcount\": this.props.rowCount,\n        className: clsx('ReactVirtualized__Table', className),\n        id: id,\n        role: \"grid\",\n        style: style\n      }, !disableHeader && headerRowRenderer({\n        className: clsx('ReactVirtualized__Table__headerRow', rowClass),\n        columns: this._getHeaderColumns(),\n        style: _objectSpread({\n          height: headerHeight,\n          overflow: 'hidden',\n          paddingRight: scrollbarWidth,\n          width: width\n        }, rowStyleObject)\n      }), React.createElement(Grid, _extends({}, this.props, {\n        \"aria-readonly\": null,\n        autoContainerWidth: true,\n        className: clsx('ReactVirtualized__Table__Grid', gridClassName),\n        cellRenderer: this._createRow,\n        columnWidth: width,\n        columnCount: 1,\n        height: availableRowsHeight,\n        id: undefined,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        role: \"rowgroup\",\n        scrollbarWidth: scrollbarWidth,\n        scrollToRow: scrollToIndex,\n        style: _objectSpread({}, gridStyle, {\n          overflowX: 'hidden'\n        })\n      })));\n    }\n  }, {\n    key: \"_createColumn\",\n    value: function _createColumn(_ref4) {\n      var column = _ref4.column,\n          columnIndex = _ref4.columnIndex,\n          isScrolling = _ref4.isScrolling,\n          parent = _ref4.parent,\n          rowData = _ref4.rowData,\n          rowIndex = _ref4.rowIndex;\n      var onColumnClick = this.props.onColumnClick;\n      var _column$props = column.props,\n          cellDataGetter = _column$props.cellDataGetter,\n          cellRenderer = _column$props.cellRenderer,\n          className = _column$props.className,\n          columnData = _column$props.columnData,\n          dataKey = _column$props.dataKey,\n          id = _column$props.id;\n      var cellData = cellDataGetter({\n        columnData: columnData,\n        dataKey: dataKey,\n        rowData: rowData\n      });\n      var renderedCell = cellRenderer({\n        cellData: cellData,\n        columnData: columnData,\n        columnIndex: columnIndex,\n        dataKey: dataKey,\n        isScrolling: isScrolling,\n        parent: parent,\n        rowData: rowData,\n        rowIndex: rowIndex\n      });\n\n      var onClick = function onClick(event) {\n        onColumnClick && onColumnClick({\n          columnData: columnData,\n          dataKey: dataKey,\n          event: event\n        });\n      };\n\n      var style = this._cachedColumnStyles[columnIndex];\n      var title = typeof renderedCell === 'string' ? renderedCell : null; // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n      return React.createElement(\"div\", {\n        \"aria-colindex\": columnIndex + 1,\n        \"aria-describedby\": id,\n        className: clsx('ReactVirtualized__Table__rowColumn', className),\n        key: 'Row' + rowIndex + '-' + 'Col' + columnIndex,\n        onClick: onClick,\n        role: \"gridcell\",\n        style: style,\n        title: title\n      }, renderedCell);\n    }\n  }, {\n    key: \"_createHeader\",\n    value: function _createHeader(_ref5) {\n      var column = _ref5.column,\n          index = _ref5.index;\n      var _this$props2 = this.props,\n          headerClassName = _this$props2.headerClassName,\n          headerStyle = _this$props2.headerStyle,\n          onHeaderClick = _this$props2.onHeaderClick,\n          sort = _this$props2.sort,\n          sortBy = _this$props2.sortBy,\n          sortDirection = _this$props2.sortDirection;\n      var _column$props2 = column.props,\n          columnData = _column$props2.columnData,\n          dataKey = _column$props2.dataKey,\n          defaultSortDirection = _column$props2.defaultSortDirection,\n          disableSort = _column$props2.disableSort,\n          headerRenderer = _column$props2.headerRenderer,\n          id = _column$props2.id,\n          label = _column$props2.label;\n      var sortEnabled = !disableSort && sort;\n      var classNames = clsx('ReactVirtualized__Table__headerColumn', headerClassName, column.props.headerClassName, {\n        ReactVirtualized__Table__sortableHeaderColumn: sortEnabled\n      });\n\n      var style = this._getFlexStyleForColumn(column, _objectSpread({}, headerStyle, {}, column.props.headerStyle));\n\n      var renderedHeader = headerRenderer({\n        columnData: columnData,\n        dataKey: dataKey,\n        disableSort: disableSort,\n        label: label,\n        sortBy: sortBy,\n        sortDirection: sortDirection\n      });\n      var headerOnClick, headerOnKeyDown, headerTabIndex, headerAriaSort, headerAriaLabel;\n\n      if (sortEnabled || onHeaderClick) {\n        // If this is a sortable header, clicking it should update the table data's sorting.\n        var isFirstTimeSort = sortBy !== dataKey; // If this is the firstTime sort of this column, use the column default sort order.\n        // Otherwise, invert the direction of the sort.\n\n        var newSortDirection = isFirstTimeSort ? defaultSortDirection : sortDirection === SortDirection.DESC ? SortDirection.ASC : SortDirection.DESC;\n\n        var onClick = function onClick(event) {\n          sortEnabled && sort({\n            defaultSortDirection: defaultSortDirection,\n            event: event,\n            sortBy: dataKey,\n            sortDirection: newSortDirection\n          });\n          onHeaderClick && onHeaderClick({\n            columnData: columnData,\n            dataKey: dataKey,\n            event: event\n          });\n        };\n\n        var onKeyDown = function onKeyDown(event) {\n          if (event.key === 'Enter' || event.key === ' ') {\n            onClick(event);\n          }\n        };\n\n        headerAriaLabel = column.props['aria-label'] || label || dataKey;\n        headerAriaSort = 'none';\n        headerTabIndex = 0;\n        headerOnClick = onClick;\n        headerOnKeyDown = onKeyDown;\n      }\n\n      if (sortBy === dataKey) {\n        headerAriaSort = sortDirection === SortDirection.ASC ? 'ascending' : 'descending';\n      } // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n\n      return React.createElement(\"div\", {\n        \"aria-label\": headerAriaLabel,\n        \"aria-sort\": headerAriaSort,\n        className: classNames,\n        id: id,\n        key: 'Header-Col' + index,\n        onClick: headerOnClick,\n        onKeyDown: headerOnKeyDown,\n        role: \"columnheader\",\n        style: style,\n        tabIndex: headerTabIndex\n      }, renderedHeader);\n    }\n  }, {\n    key: \"_createRow\",\n    value: function _createRow(_ref6) {\n      var _this3 = this;\n\n      var index = _ref6.rowIndex,\n          isScrolling = _ref6.isScrolling,\n          key = _ref6.key,\n          parent = _ref6.parent,\n          style = _ref6.style;\n      var _this$props3 = this.props,\n          children = _this$props3.children,\n          onRowClick = _this$props3.onRowClick,\n          onRowDoubleClick = _this$props3.onRowDoubleClick,\n          onRowRightClick = _this$props3.onRowRightClick,\n          onRowMouseOver = _this$props3.onRowMouseOver,\n          onRowMouseOut = _this$props3.onRowMouseOut,\n          rowClassName = _this$props3.rowClassName,\n          rowGetter = _this$props3.rowGetter,\n          rowRenderer = _this$props3.rowRenderer,\n          rowStyle = _this$props3.rowStyle;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: index\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: index\n      }) : rowStyle;\n      var rowData = rowGetter({\n        index: index\n      });\n      var columns = React.Children.toArray(children).map(function (column, columnIndex) {\n        return _this3._createColumn({\n          column: column,\n          columnIndex: columnIndex,\n          isScrolling: isScrolling,\n          parent: parent,\n          rowData: rowData,\n          rowIndex: index,\n          scrollbarWidth: scrollbarWidth\n        });\n      });\n      var className = clsx('ReactVirtualized__Table__row', rowClass);\n\n      var flattenedStyle = _objectSpread({}, style, {\n        height: this._getRowHeight(index),\n        overflow: 'hidden',\n        paddingRight: scrollbarWidth\n      }, rowStyleObject);\n\n      return rowRenderer({\n        className: className,\n        columns: columns,\n        index: index,\n        isScrolling: isScrolling,\n        key: key,\n        onRowClick: onRowClick,\n        onRowDoubleClick: onRowDoubleClick,\n        onRowRightClick: onRowRightClick,\n        onRowMouseOver: onRowMouseOver,\n        onRowMouseOut: onRowMouseOut,\n        rowData: rowData,\n        style: flattenedStyle\n      });\n    }\n    /**\n     * Determines the flex-shrink, flex-grow, and width values for a cell (header or column).\n     */\n\n  }, {\n    key: \"_getFlexStyleForColumn\",\n    value: function _getFlexStyleForColumn(column) {\n      var customStyle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var flexValue = \"\".concat(column.props.flexGrow, \" \").concat(column.props.flexShrink, \" \").concat(column.props.width, \"px\");\n\n      var style = _objectSpread({}, customStyle, {\n        flex: flexValue,\n        msFlex: flexValue,\n        WebkitFlex: flexValue\n      });\n\n      if (column.props.maxWidth) {\n        style.maxWidth = column.props.maxWidth;\n      }\n\n      if (column.props.minWidth) {\n        style.minWidth = column.props.minWidth;\n      }\n\n      return style;\n    }\n  }, {\n    key: \"_getHeaderColumns\",\n    value: function _getHeaderColumns() {\n      var _this4 = this;\n\n      var _this$props4 = this.props,\n          children = _this$props4.children,\n          disableHeader = _this$props4.disableHeader;\n      var items = disableHeader ? [] : React.Children.toArray(children);\n      return items.map(function (column, index) {\n        return _this4._createHeader({\n          column: column,\n          index: index\n        });\n      });\n    }\n  }, {\n    key: \"_getRowHeight\",\n    value: function _getRowHeight(rowIndex) {\n      var rowHeight = this.props.rowHeight;\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: rowIndex\n      }) : rowHeight;\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref7) {\n      var clientHeight = _ref7.clientHeight,\n          scrollHeight = _ref7.scrollHeight,\n          scrollTop = _ref7.scrollTop;\n      var onScroll = this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    }\n  }, {\n    key: \"_onSectionRendered\",\n    value: function _onSectionRendered(_ref8) {\n      var rowOverscanStartIndex = _ref8.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref8.rowOverscanStopIndex,\n          rowStartIndex = _ref8.rowStartIndex,\n          rowStopIndex = _ref8.rowStopIndex;\n      var onRowsRendered = this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    }\n  }, {\n    key: \"_setRef\",\n    value: function _setRef(ref) {\n      this.Grid = ref;\n    }\n  }, {\n    key: \"_setScrollbarWidth\",\n    value: function _setScrollbarWidth() {\n      var scrollbarWidth = this.getScrollbarWidth();\n      this.setState({\n        scrollbarWidth: scrollbarWidth\n      });\n    }\n  }]);\n\n  return Table;\n}(React.PureComponent);\n\n_defineProperty(Table, \"defaultProps\", {\n  disableHeader: false,\n  estimatedRowSize: 30,\n  headerHeight: 0,\n  headerStyle: {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  rowRenderer: defaultRowRenderer,\n  headerRowRenderer: defaultHeaderRowRenderer,\n  rowStyle: {},\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { Table as default };\nTable.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** This is just set on the grid top element. */\n  'aria-label': PropTypes.string,\n\n  /** This is just set on the grid top element. */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /** One or more Columns describing the data displayed in this row */\n  children: function children(props) {\n    var children = React.Children.toArray(props.children);\n\n    for (var i = 0; i < children.length; i++) {\n      var childType = children[i].type;\n\n      if (childType !== Column && !(childType.prototype instanceof Column)) {\n        return new Error('Table only accepts children of type Column');\n      }\n    }\n  },\n\n  /** Optional CSS class name */\n  className: PropTypes.string,\n\n  /** Disable rendering the header at all */\n  disableHeader: PropTypes.bool,\n\n  /**\n   * Used to estimate the total height of a Table before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  estimatedRowSize: PropTypes.number.isRequired,\n\n  /** Optional custom CSS class name to attach to inner Grid element. */\n  gridClassName: PropTypes.string,\n\n  /** Optional inline style to attach to inner Grid element. */\n  gridStyle: PropTypes.object,\n\n  /** Optional CSS class to apply to all column headers */\n  headerClassName: PropTypes.string,\n\n  /** Fixed height of header row */\n  headerHeight: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: any[],\n   *   style: any\n   * }): PropTypes.node\n   */\n  headerRowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table header columns. */\n  headerStyle: PropTypes.object,\n\n  /** Fixed/available height for out DOM element */\n  height: PropTypes.number.isRequired,\n\n  /** Optional id */\n  id: PropTypes.string,\n\n  /** Optional renderer to be used in place of table body rows when rowCount is 0 */\n  noRowsRenderer: PropTypes.func,\n\n  /**\n   * Optional callback when a column is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onColumnClick: PropTypes.func,\n\n  /**\n   * Optional callback when a column's header is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onHeaderClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user double-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowDoubleClick: PropTypes.func,\n\n  /**\n   * Callback invoked when the mouse leaves a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOut: PropTypes.func,\n\n  /**\n   * Callback invoked when a user moves the mouse over a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOver: PropTypes.func,\n\n  /**\n   * Callback invoked when a user right-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowRightClick: PropTypes.func,\n\n  /**\n   * Callback invoked with information about the slice of rows that were just rendered.\n   * ({ startIndex, stopIndex }): void\n   */\n  onRowsRendered: PropTypes.func,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, scrollHeight, scrollTop }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  overscanIndicesGetter: PropTypes.func.isRequired,\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  overscanRowCount: PropTypes.number.isRequired,\n\n  /**\n   * Optional CSS class to apply to all table rows (including the header row).\n   * This property can be a CSS class name (string) or a function that returns a class name.\n   * If a function is provided its signature should be: ({ index: number }): string\n   */\n  rowClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n\n  /**\n   * Callback responsible for returning a data row given an index.\n   * ({ index: number }): any\n   */\n  rowGetter: PropTypes.func.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * ({ index: number }): number\n   */\n  rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n\n  /** Number of rows in table. */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: Array,\n   *   index: number,\n   *   isScrolling: boolean,\n   *   onRowClick: ?Function,\n   *   onRowDoubleClick: ?Function,\n   *   onRowMouseOver: ?Function,\n   *   onRowMouseOut: ?Function,\n   *   rowData: any,\n   *   style: any\n   * }): PropTypes.node\n   */\n  rowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table rows. */\n  rowStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n\n  /** See Grid#scrollToAlignment */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  scrollToIndex: PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Sort function to be called if a sortable header is clicked.\n   * Should implement the following interface: ({\n   *   defaultSortDirection: 'ASC' | 'DESC',\n   *   event: MouseEvent,\n   *   sortBy: string,\n   *   sortDirection: SortDirection\n   * }): void\n   */\n  sort: PropTypes.func,\n\n  /** Table data is currently sorted by this :dataKey (if it is sorted at all) */\n  sortBy: PropTypes.string,\n\n  /** Table data is currently sorted in this direction (if it is sorted at all) */\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** Optional inline style */\n  style: PropTypes.object,\n\n  /** Tab index for focus */\n  tabIndex: PropTypes.number,\n\n  /** Width of list */\n  width: PropTypes.number.isRequired\n} : {};\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";","/**\n * Default accessor for returning a cell value for a given attribute.\n * This function expects to operate on either a vanilla Object or an Immutable Map.\n * You should override the column's cellDataGetter if your data is some other type of object.\n */\nexport default function defaultCellDataGetter(_ref) {\n  var dataKey = _ref.dataKey,\n      rowData = _ref.rowData;\n\n  if (typeof rowData.get === 'function') {\n    return rowData.get(dataKey);\n  } else {\n    return rowData[dataKey];\n  }\n}\nimport { bpfrpt_proptype_CellDataGetterParams } from \"./types\";","/**\n * Default cell renderer that displays an attribute as a simple string\n * You should override the column's cellRenderer if your data is some other type of object.\n */\nexport default function defaultCellRenderer(_ref) {\n  var cellData = _ref.cellData;\n\n  if (cellData == null) {\n    return '';\n  } else {\n    return String(cellData);\n  }\n}\nimport { bpfrpt_proptype_CellRendererParams } from \"./types\";","import createMultiSort from './createMultiSort';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer.js';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport Column from './Column';\nimport SortDirection from './SortDirection';\nimport SortIndicator from './SortIndicator';\nimport Table from './Table';\nexport default Table;\nexport { createMultiSort, defaultCellDataGetter, defaultCellRenderer, defaultHeaderRowRenderer, defaultHeaderRenderer, defaultRowRenderer, Column, SortDirection, SortIndicator, Table };","import { requestAnimationTimeout, cancelAnimationTimeout } from '../../utils/requestAnimationTimeout';\nvar mountedInstances = [];\nvar originalBodyPointerEvents = null;\nvar disablePointerEventsTimeoutId = null;\n\nfunction enablePointerEventsIfDisabled() {\n  if (disablePointerEventsTimeoutId) {\n    disablePointerEventsTimeoutId = null;\n\n    if (document.body && originalBodyPointerEvents != null) {\n      document.body.style.pointerEvents = originalBodyPointerEvents;\n    }\n\n    originalBodyPointerEvents = null;\n  }\n}\n\nfunction enablePointerEventsAfterDelayCallback() {\n  enablePointerEventsIfDisabled();\n  mountedInstances.forEach(function (instance) {\n    return instance.__resetIsScrolling();\n  });\n}\n\nfunction enablePointerEventsAfterDelay() {\n  if (disablePointerEventsTimeoutId) {\n    cancelAnimationTimeout(disablePointerEventsTimeoutId);\n  }\n\n  var maximumTimeout = 0;\n  mountedInstances.forEach(function (instance) {\n    maximumTimeout = Math.max(maximumTimeout, instance.props.scrollingResetTimeInterval);\n  });\n  disablePointerEventsTimeoutId = requestAnimationTimeout(enablePointerEventsAfterDelayCallback, maximumTimeout);\n}\n\nfunction onScrollWindow(event) {\n  if (event.currentTarget === window && originalBodyPointerEvents == null && document.body) {\n    originalBodyPointerEvents = document.body.style.pointerEvents;\n    document.body.style.pointerEvents = 'none';\n  }\n\n  enablePointerEventsAfterDelay();\n  mountedInstances.forEach(function (instance) {\n    if (instance.props.scrollElement === event.currentTarget) {\n      instance.__handleWindowScrollEvent();\n    }\n  });\n}\n\nexport function registerScrollListener(component, element) {\n  if (!mountedInstances.some(function (instance) {\n    return instance.props.scrollElement === element;\n  })) {\n    element.addEventListener('scroll', onScrollWindow);\n  }\n\n  mountedInstances.push(component);\n}\nexport function unregisterScrollListener(component, element) {\n  mountedInstances = mountedInstances.filter(function (instance) {\n    return instance !== component;\n  });\n\n  if (!mountedInstances.length) {\n    element.removeEventListener('scroll', onScrollWindow);\n\n    if (disablePointerEventsTimeoutId) {\n      cancelAnimationTimeout(disablePointerEventsTimeoutId);\n      enablePointerEventsIfDisabled();\n    }\n  }\n}\nimport { bpfrpt_proptype_WindowScroller } from \"../WindowScroller.js\";","/**\n * Gets the dimensions of the element, accounting for API differences between\n * `window` and other DOM elements.\n */\n// TODO Move this into WindowScroller and import from there\nvar isWindow = function isWindow(element) {\n  return element === window;\n};\n\nvar getBoundingBox = function getBoundingBox(element) {\n  return element.getBoundingClientRect();\n};\n\nexport function getDimensions(scrollElement, props) {\n  if (!scrollElement) {\n    return {\n      height: props.serverHeight,\n      width: props.serverWidth\n    };\n  } else if (isWindow(scrollElement)) {\n    var _window = window,\n        innerHeight = _window.innerHeight,\n        innerWidth = _window.innerWidth;\n    return {\n      height: typeof innerHeight === 'number' ? innerHeight : 0,\n      width: typeof innerWidth === 'number' ? innerWidth : 0\n    };\n  } else {\n    return getBoundingBox(scrollElement);\n  }\n}\n/**\n * Gets the vertical and horizontal position of an element within its scroll container.\n * Elements that have been “scrolled past” return negative values.\n * Handles edge-case where a user is navigating back (history) from an already-scrolled page.\n * In this case the body’s top or left position will be a negative number and this element’s top or left will be increased (by that amount).\n */\n\nexport function getPositionOffset(element, container) {\n  if (isWindow(container) && document.documentElement) {\n    var containerElement = document.documentElement;\n    var elementRect = getBoundingBox(element);\n    var containerRect = getBoundingBox(containerElement);\n    return {\n      top: elementRect.top - containerRect.top,\n      left: elementRect.left - containerRect.left\n    };\n  } else {\n    var scrollOffset = getScrollOffset(container);\n\n    var _elementRect = getBoundingBox(element);\n\n    var _containerRect = getBoundingBox(container);\n\n    return {\n      top: _elementRect.top + scrollOffset.top - _containerRect.top,\n      left: _elementRect.left + scrollOffset.left - _containerRect.left\n    };\n  }\n}\n/**\n * Gets the vertical and horizontal scroll amount of the element, accounting for IE compatibility\n * and API differences between `window` and other DOM elements.\n */\n\nexport function getScrollOffset(element) {\n  if (isWindow(element) && document.documentElement) {\n    return {\n      top: 'scrollY' in window ? window.scrollY : document.documentElement.scrollTop,\n      left: 'scrollX' in window ? window.scrollX : document.documentElement.scrollLeft\n    };\n  } else {\n    return {\n      top: element.scrollTop,\n      left: element.scrollLeft\n    };\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { registerScrollListener, unregisterScrollListener } from './utils/onScroll';\nimport { getDimensions, getPositionOffset, getScrollOffset } from './utils/dimensions';\nimport createDetectElementResize from '../vendor/detectElementResize';\n\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\nexport var IS_SCROLLING_TIMEOUT = 150;\n\nvar getWindow = function getWindow() {\n  return typeof window !== 'undefined' ? window : undefined;\n};\n\nvar WindowScroller = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(WindowScroller, _React$PureComponent);\n\n  function WindowScroller() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, WindowScroller);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(WindowScroller)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", getWindow());\n\n    _defineProperty(_assertThisInitialized(_this), \"_isMounted\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromTop\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromLeft\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", _objectSpread({}, getDimensions(_this.props.scrollElement, _this.props), {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    }));\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('WindowScroller registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onChildScroll\", function (_ref) {\n      var scrollTop = _ref.scrollTop;\n\n      if (_this.state.scrollTop === scrollTop) {\n        return;\n      }\n\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        if (typeof scrollElement.scrollTo === 'function') {\n          scrollElement.scrollTo(0, scrollTop + _this._positionFromTop);\n        } else {\n          scrollElement.scrollTop = scrollTop + _this._positionFromTop;\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerResizeListener\", function (element) {\n      if (element === window) {\n        window.addEventListener('resize', _this._onResize, false);\n      } else {\n        _this._detectElementResize.addResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_unregisterResizeListener\", function (element) {\n      if (element === window) {\n        window.removeEventListener('resize', _this._onResize, false);\n      } else if (element) {\n        _this._detectElementResize.removeResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__handleWindowScrollEvent\", function () {\n      if (!_this._isMounted) {\n        return;\n      }\n\n      var onScroll = _this.props.onScroll;\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        var scrollOffset = getScrollOffset(scrollElement);\n        var scrollLeft = Math.max(0, scrollOffset.left - _this._positionFromLeft);\n        var scrollTop = Math.max(0, scrollOffset.top - _this._positionFromTop);\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        onScroll({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__resetIsScrolling\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(WindowScroller, [{\n    key: \"updatePosition\",\n    value: function updatePosition() {\n      var scrollElement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.scrollElement;\n      var onResize = this.props.onResize;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width;\n      var thisNode = this._child || ReactDOM.findDOMNode(this);\n\n      if (thisNode instanceof Element && scrollElement) {\n        var offset = getPositionOffset(thisNode, scrollElement);\n        this._positionFromTop = offset.top;\n        this._positionFromLeft = offset.left;\n      }\n\n      var dimensions = getDimensions(scrollElement, this.props);\n\n      if (height !== dimensions.height || width !== dimensions.width) {\n        this.setState({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n        onResize({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var scrollElement = this.props.scrollElement;\n      this._detectElementResize = createDetectElementResize();\n      this.updatePosition(scrollElement);\n\n      if (scrollElement) {\n        registerScrollListener(this, scrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n\n      this._isMounted = true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var scrollElement = this.props.scrollElement;\n      var prevScrollElement = prevProps.scrollElement;\n\n      if (prevScrollElement !== scrollElement && prevScrollElement != null && scrollElement != null) {\n        this.updatePosition(scrollElement);\n        unregisterScrollListener(this, prevScrollElement);\n        registerScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(prevScrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var scrollElement = this.props.scrollElement;\n\n      if (scrollElement) {\n        unregisterScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(scrollElement);\n      }\n\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state2 = this.state,\n          isScrolling = _this$state2.isScrolling,\n          scrollTop = _this$state2.scrollTop,\n          scrollLeft = _this$state2.scrollLeft,\n          height = _this$state2.height,\n          width = _this$state2.width;\n      return children({\n        onChildScroll: this._onChildScroll,\n        registerChild: this._registerChild,\n        height: height,\n        isScrolling: isScrolling,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        width: width\n      });\n    }\n  }]);\n\n  return WindowScroller;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /**\n   * Function responsible for rendering children.\n   * This function should implement the following signature:\n   * ({ height, isScrolling, scrollLeft, scrollTop, width }) => PropTypes.element\n   */\n  \"children\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-resize: ({ height, width }) */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-scroll: ({ scrollLeft, scrollTop }) */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** Element to attach scroll event listeners. Defaults to window. */\n  \"scrollElement\": PropTypes.oneOfType([PropTypes.any, function () {\n    return (typeof Element === \"function\" ? PropTypes.instanceOf(Element) : PropTypes.any).apply(this, arguments);\n  }]),\n\n  /**\n   * Wait this amount of time after the last scroll event before resetting child `pointer-events`.\n   */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Height used for server-side rendering */\n  \"serverHeight\": PropTypes.number.isRequired,\n\n  /** Width used for server-side rendering */\n  \"serverWidth\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(WindowScroller, \"defaultProps\", {\n  onResize: function onResize() {},\n  onScroll: function onScroll() {},\n  scrollingResetTimeInterval: IS_SCROLLING_TIMEOUT,\n  scrollElement: getWindow(),\n  serverHeight: 0,\n  serverWidth: 0\n});\n\nexport { WindowScroller as default };\nimport PropTypes from \"prop-types\";","/**\n * Detect Element Resize.\n * https://github.com/sdecima/javascript-detect-element-resize\n * Sebastian Decima\n *\n * Forked from version 0.5.3; includes the following modifications:\n * 1) Guard against unsafe 'window' and 'document' references (to support SSR).\n * 2) Defer initialization code via a top-level function wrapper (to support SSR).\n * 3) Avoid unnecessary reflows by not measuring size for scroll events bubbling from children.\n * 4) Add nonce for style element.\n * 5) Added support for injecting custom window object\n **/\nexport default function createDetectElementResize(nonce, hostWindow) {\n  // Check `document` and `window` in case of server-side rendering\n  var _window;\n\n  if (typeof hostWindow !== 'undefined') {\n    _window = hostWindow;\n  } else if (typeof window !== 'undefined') {\n    _window = window;\n  } else if (typeof self !== 'undefined') {\n    _window = self;\n  } else {\n    _window = global;\n  }\n\n  var attachEvent = typeof _window.document !== 'undefined' && _window.document.attachEvent;\n\n  if (!attachEvent) {\n    var requestFrame = function () {\n      var raf = _window.requestAnimationFrame || _window.mozRequestAnimationFrame || _window.webkitRequestAnimationFrame || function (fn) {\n        return _window.setTimeout(fn, 20);\n      };\n\n      return function (fn) {\n        return raf(fn);\n      };\n    }();\n\n    var cancelFrame = function () {\n      var cancel = _window.cancelAnimationFrame || _window.mozCancelAnimationFrame || _window.webkitCancelAnimationFrame || _window.clearTimeout;\n      return function (id) {\n        return cancel(id);\n      };\n    }();\n\n    var resetTriggers = function resetTriggers(element) {\n      var triggers = element.__resizeTriggers__,\n          expand = triggers.firstElementChild,\n          contract = triggers.lastElementChild,\n          expandChild = expand.firstElementChild;\n      contract.scrollLeft = contract.scrollWidth;\n      contract.scrollTop = contract.scrollHeight;\n      expandChild.style.width = expand.offsetWidth + 1 + 'px';\n      expandChild.style.height = expand.offsetHeight + 1 + 'px';\n      expand.scrollLeft = expand.scrollWidth;\n      expand.scrollTop = expand.scrollHeight;\n    };\n\n    var checkTriggers = function checkTriggers(element) {\n      return element.offsetWidth != element.__resizeLast__.width || element.offsetHeight != element.__resizeLast__.height;\n    };\n\n    var scrollListener = function scrollListener(e) {\n      // Don't measure (which forces) reflow for scrolls that happen inside of children!\n      if (e.target.className && typeof e.target.className.indexOf === 'function' && e.target.className.indexOf('contract-trigger') < 0 && e.target.className.indexOf('expand-trigger') < 0) {\n        return;\n      }\n\n      var element = this;\n      resetTriggers(this);\n\n      if (this.__resizeRAF__) {\n        cancelFrame(this.__resizeRAF__);\n      }\n\n      this.__resizeRAF__ = requestFrame(function () {\n        if (checkTriggers(element)) {\n          element.__resizeLast__.width = element.offsetWidth;\n          element.__resizeLast__.height = element.offsetHeight;\n\n          element.__resizeListeners__.forEach(function (fn) {\n            fn.call(element, e);\n          });\n        }\n      });\n    };\n    /* Detect CSS Animations support to detect element display/re-attach */\n\n\n    var animation = false,\n        keyframeprefix = '',\n        animationstartevent = 'animationstart',\n        domPrefixes = 'Webkit Moz O ms'.split(' '),\n        startEvents = 'webkitAnimationStart animationstart oAnimationStart MSAnimationStart'.split(' '),\n        pfx = '';\n    {\n      var elm = _window.document.createElement('fakeelement');\n\n      if (elm.style.animationName !== undefined) {\n        animation = true;\n      }\n\n      if (animation === false) {\n        for (var i = 0; i < domPrefixes.length; i++) {\n          if (elm.style[domPrefixes[i] + 'AnimationName'] !== undefined) {\n            pfx = domPrefixes[i];\n            keyframeprefix = '-' + pfx.toLowerCase() + '-';\n            animationstartevent = startEvents[i];\n            animation = true;\n            break;\n          }\n        }\n      }\n    }\n    var animationName = 'resizeanim';\n    var animationKeyframes = '@' + keyframeprefix + 'keyframes ' + animationName + ' { from { opacity: 0; } to { opacity: 0; } } ';\n    var animationStyle = keyframeprefix + 'animation: 1ms ' + animationName + '; ';\n  }\n\n  var createStyles = function createStyles(doc) {\n    if (!doc.getElementById('detectElementResize')) {\n      //opacity:0 works around a chrome bug https://code.google.com/p/chromium/issues/detail?id=286360\n      var css = (animationKeyframes ? animationKeyframes : '') + '.resize-triggers { ' + (animationStyle ? animationStyle : '') + 'visibility: hidden; opacity: 0; } ' + '.resize-triggers, .resize-triggers > div, .contract-trigger:before { content: \" \"; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .resize-triggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',\n          head = doc.head || doc.getElementsByTagName('head')[0],\n          style = doc.createElement('style');\n      style.id = 'detectElementResize';\n      style.type = 'text/css';\n\n      if (nonce != null) {\n        style.setAttribute('nonce', nonce);\n      }\n\n      if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(doc.createTextNode(css));\n      }\n\n      head.appendChild(style);\n    }\n  };\n\n  var addResizeListener = function addResizeListener(element, fn) {\n    if (attachEvent) {\n      element.attachEvent('onresize', fn);\n    } else {\n      if (!element.__resizeTriggers__) {\n        var doc = element.ownerDocument;\n\n        var elementStyle = _window.getComputedStyle(element);\n\n        if (elementStyle && elementStyle.position == 'static') {\n          element.style.position = 'relative';\n        }\n\n        createStyles(doc);\n        element.__resizeLast__ = {};\n        element.__resizeListeners__ = [];\n        (element.__resizeTriggers__ = doc.createElement('div')).className = 'resize-triggers';\n        var resizeTriggersHtml = '<div class=\"expand-trigger\"><div></div></div>' + '<div class=\"contract-trigger\"></div>';\n\n        if (window.trustedTypes) {\n          var staticPolicy = trustedTypes.createPolicy('react-virtualized-auto-sizer', {\n            createHTML: function createHTML() {\n              return resizeTriggersHtml;\n            }\n          });\n          element.__resizeTriggers__.innerHTML = staticPolicy.createHTML('');\n        } else {\n          element.__resizeTriggers__.innerHTML = resizeTriggersHtml;\n        }\n\n        element.appendChild(element.__resizeTriggers__);\n        resetTriggers(element);\n        element.addEventListener('scroll', scrollListener, true);\n        /* Listen for a css animation to detect element display/re-attach */\n\n        if (animationstartevent) {\n          element.__resizeTriggers__.__animationListener__ = function animationListener(e) {\n            if (e.animationName == animationName) {\n              resetTriggers(element);\n            }\n          };\n\n          element.__resizeTriggers__.addEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n        }\n      }\n\n      element.__resizeListeners__.push(fn);\n    }\n  };\n\n  var removeResizeListener = function removeResizeListener(element, fn) {\n    if (attachEvent) {\n      element.detachEvent('onresize', fn);\n    } else {\n      element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n\n      if (!element.__resizeListeners__.length) {\n        element.removeEventListener('scroll', scrollListener, true);\n\n        if (element.__resizeTriggers__.__animationListener__) {\n          element.__resizeTriggers__.removeEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n\n          element.__resizeTriggers__.__animationListener__ = null;\n        }\n\n        try {\n          element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);\n        } catch (e) {// Preact compat; see developit/preact-compat/issues/228\n        }\n      }\n    }\n  };\n\n  return {\n    addResizeListener: addResizeListener,\n    removeResizeListener: removeResizeListener\n  };\n}"],"sourceRoot":""}